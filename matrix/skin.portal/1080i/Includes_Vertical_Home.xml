<?xml version="1.0" encoding="UTF-8"?>
<includes>
	<include name="StaticSettingsFirstBigFont">
		<movement>7</movement>
		<focusposition>0</focusposition>
	</include>
	
	<include name="StaticSettingsFirstSmallFont">
		<movement>12</movement>
		<focusposition>0</focusposition>
	</include>
	
	<include name="StaticSettingsCenter">
		<movement>6</movement>
		<focusposition>5</focusposition>
	</include>
	
	<include name="StaticSettingsStandard">
		<movement>5</movement>
		<focusposition>2</focusposition>
	</include>

	<include name="NonStaticSettings">
		<movement>0</movement>
		<focusposition>3</focusposition>
	</include>
	
	<include name="NonStaticSettingsFirst">
		<movement>0</movement>
		<focusposition>0</focusposition>
	</include>

	<include name="BigVerticalFont">
		<font>MainMenuVerticalBig</font>
		<height>140</height>
	</include>

	<include name="NormalVerticalFont">
		<font>MainMenuVertical</font>
		<height>100</height>
	</include>
	
	<include name="widgetsLeftVerticalIcon">
		<left>132</left>
	</include>
	
	<include name="widgetsLeftVerticalText">
		<left>431</left>
	</include>
	
	<include name="menuWidthVerticalIcon">
		<width>140</width>
	</include>
	
	<include name="menuWidthVerticalText">
		<width>20</width>
	</include>
	
	<include name="submenuWidthVerticalIcon">
		<width>140</width>
	</include>
	
	<include name="submenuWidthVerticalText">
		<width>540</width>
	</include>
	
	<include name="MenuTextAlignLeft">
		<align>left</align>
	</include>
	
	<include name="MenuTextAlignRight">
		<align>right</align>
	</include>

	<!-- Fixed/Wrap -->
	<include name="VerticalMenuFixed">
		<control type="fixedlist" id="300">
			<include condition="!Skin.HasSetting(Vertical.IconOnly)">VerticalMenuListContent</include>
			<include condition="Skin.HasSetting(Vertical.IconOnly)">VerticalMenuIconContent</include>
		</control>
	</include>
	<include name="VerticalMenuWrapped">
		<control type="wraplist" id="300">
			<include condition="!Skin.HasSetting(Vertical.IconOnly)">VerticalMenuListContent</include>
			<include condition="Skin.HasSetting(Vertical.IconOnly)">VerticalMenuIconContent</include>
		</control>
	</include>

    <include name="VerticalMenuIconContent">
		<animation effect="fade" time="200" start="100" end="20" reversible="true" condition="!Control.HasFocus(300)">Conditional</animation>
		<animation effect="slide" start="0,0" end="-135,0" time="250" tween="sine" easing="in" condition="Skin.HasSetting(Vertical.HideFocusShelves) + ControlGroup(700).HasFocus">Conditional</animation>
		<left>15</left>
		<top>60</top>
		<width>120</width>
		<height>960</height>
		<onup>300</onup>
		<ondown>300</ondown>
		<onleft>9001</onleft>
        <include condition="!Skin.HasSetting(Hide.AllShelves)">skinshortcuts-template-ShelfOnRightMainMenu</include>
		<onback>9001</onback>
		<onfocus>ClearProperty(ShowWidgetPopup,Home)</onfocus>
		<pagecontrol></pagecontrol>
		<include condition="!Skin.HasSetting(StaticVerticalHome) + !Skin.HasSetting(VerticalFirst)">NonStaticSettings</include>
		<include condition="!Skin.HasSetting(StaticVerticalHome) + Skin.HasSetting(VerticalFirst)">NonStaticSettingsFirst</include>
		<include condition="Skin.HasSetting(StaticVerticalHome) + !Skin.HasSetting(VerticalFirst) + !Skin.HasSetting(Vertical.StaticCentered)">StaticSettingsStandard</include>
		<include condition="Skin.HasSetting(StaticVerticalHome) + !Skin.HasSetting(VerticalFirst) + Skin.HasSetting(Vertical.StaticCentered)">StaticSettingsCenter</include>
		<include condition="Skin.HasSetting(StaticVerticalHome) + Skin.HasSetting(VerticalFirst) + Skin.HasSetting(Vertical.BiggerFont)">StaticSettingsFirstBigFont</include>
		<include condition="Skin.HasSetting(StaticVerticalHome) + Skin.HasSetting(VerticalFirst) + !Skin.HasSetting(Vertical.BiggerFont)">StaticSettingsFirstSmallFont</include>
		<scrolltime tween="quadratic" easing="out">200</scrolltime>
		<animation effect="fade" time="200" start="100" end="50" reversible="true" condition="Control.HasFocus(9001)">Conditional</animation>
		<itemlayout height="120" width="120">
			<control type="image">
			    <posx>0</posx>
			    <width>120</width>
			    <height>120</height>
			    <texture>$INFO[ListItem.Icon]</texture>
				<align>center</align>
				<aligny>center</aligny>
		    </control>
		</itemlayout>
		<focusedlayout height="120" width="120">
			<control type="image">
			    <posx>0</posx>
			    <width>120</width>
			    <height>120</height>
			    <texture colordiffuse="$VAR[HighlightColor]">$INFO[ListItem.Icon]</texture>
				<align>center</align>
				<aligny>center</aligny>
		    </control>
		</focusedlayout>
		<content>
			<include>skinshortcuts-mainmenu</include>
		</content>
	</include>

	<include name="VerticalMenuListContent">
		<animation effect="fade" time="200" start="100" end="20" reversible="true" condition="!Control.HasFocus(300)">Conditional</animation>
		<animation effect="slide" start="0,0" end="-410,0" time="250" tween="sine" easing="in" condition="Skin.HasSetting(Vertical.HideFocusShelves) + ControlGroup(700).HasFocus">Conditional</animation>
		<left>30</left>
		<top>60</top>
		<width>650</width>
		<height>960</height>
		<onup>300</onup>
		<ondown>300</ondown>
		<onleft>9001</onleft>
        <include condition="!Skin.HasSetting(Hide.AllShelves)">skinshortcuts-template-ShelfOnRightMainMenu</include>
		<onback>9001</onback>
		<onfocus>ClearProperty(ShowWidgetPopup,Home)</onfocus>
		<pagecontrol></pagecontrol>
		<include condition="!Skin.HasSetting(StaticVerticalHome) + !Skin.HasSetting(VerticalFirst)">NonStaticSettings</include>
		<include condition="!Skin.HasSetting(StaticVerticalHome) + Skin.HasSetting(VerticalFirst)">NonStaticSettingsFirst</include>
		<include condition="Skin.HasSetting(StaticVerticalHome) + !Skin.HasSetting(VerticalFirst) + !Skin.HasSetting(Vertical.StaticCentered)">StaticSettingsStandard</include>
		<include condition="Skin.HasSetting(StaticVerticalHome) + !Skin.HasSetting(VerticalFirst) + Skin.HasSetting(Vertical.StaticCentered)">StaticSettingsCenter</include>
		<include condition="Skin.HasSetting(StaticVerticalHome) + Skin.HasSetting(VerticalFirst) + Skin.HasSetting(Vertical.BiggerFont)">StaticSettingsFirstBigFont</include>
		<include condition="Skin.HasSetting(StaticVerticalHome) + Skin.HasSetting(VerticalFirst) + !Skin.HasSetting(Vertical.BiggerFont)">StaticSettingsFirstSmallFont</include>
		<scrolltime tween="quadratic" easing="out">200</scrolltime>
		<animation effect="fade" time="200" start="100" end="50" reversible="true" condition="Control.HasFocus(9001)">Conditional</animation>
		<itemlayout height="140" width="400"  condition="Skin.HasSetting(Vertical.BiggerFont)">
			<control type="label">
				<width>650</width>
				<include condition="Skin.HasSetting(VerticalMenuTextAlignLeft)">MenuTextAlignLeft</include>
				<include condition="!Skin.HasSetting(VerticalMenuTextAlignLeft)">MenuTextAlignRight</include>
				<textcolor>$VAR[LabelTextColor]</textcolor>
				<shadowcolor>ShadowDark</shadowcolor>
				<label>$INFO[ListItem.Label]</label>
				<scroll>false</scroll>
				<include condition="Skin.HasSetting(Vertical.BiggerFont)">BigVerticalFont</include>
			</control>
		</itemlayout>
		<focusedlayout height="140" width="650"  condition="Skin.HasSetting(Vertical.BiggerFont)">
			<control type="label">
				<width>650</width>
				<include condition="Skin.HasSetting(VerticalMenuTextAlignLeft)">MenuTextAlignLeft</include>
				<include condition="!Skin.HasSetting(VerticalMenuTextAlignLeft)">MenuTextAlignRight</include>
				<aligny>center</aligny>
				<textcolor>$VAR[HighlightColor]</textcolor>
				<shadowcolor>ShadowDark</shadowcolor>
				<label>$INFO[ListItem.Label]</label>
				<include condition="Skin.HasSetting(Vertical.BiggerFont)">BigVerticalFont</include>
			</control>
		</focusedlayout>
		<itemlayout height="80" width="650" condition="!Skin.HasSetting(Vertical.BiggerFont)">
			<control type="label">
				<width>650</width>
				<include condition="Skin.HasSetting(VerticalMenuTextAlignLeft)">MenuTextAlignLeft</include>
				<include condition="!Skin.HasSetting(VerticalMenuTextAlignLeft)">MenuTextAlignRight</include>
				<aligny>center</aligny>
				<textcolor>$VAR[LabelTextColor]</textcolor>
				<shadowcolor>ShadowDark</shadowcolor>
				<label>$INFO[ListItem.Label]</label>
				<scroll>false</scroll>
				<include condition="!Skin.HasSetting(Vertical.BiggerFont)">NormalVerticalFont</include>
			</control>
		</itemlayout>
		<focusedlayout height="80" width="650"  condition="!Skin.HasSetting(Vertical.BiggerFont)">
			<control type="label">
				<width>650</width>
				<include condition="Skin.HasSetting(VerticalMenuTextAlignLeft)">MenuTextAlignLeft</include>
				<include condition="!Skin.HasSetting(VerticalMenuTextAlignLeft)">MenuTextAlignRight</include>
				<aligny>center</aligny>
				<textcolor>$VAR[HighlightColor]</textcolor>
				<shadowcolor>ShadowDark</shadowcolor>
				<label>$INFO[ListItem.Label]</label>
				<include condition="!Skin.HasSetting(Vertical.BiggerFont)">NormalVerticalFont</include>
			</control>
		</focusedlayout>
		<content>
			<include>skinshortcuts-mainmenu</include>
		</content>
	</include>
	
	<include name="submenuContentText">
	    <control type="list" id="9001">
			<visible allowhiddenfocus="true">Control.HasFocus(9001)</visible>
			<include>VisibleFadeEffect</include>
			<animation effect="slide" start="0,0" end="450,0" time="250" delay="0" condition="Control.HasFocus(9001)">conditional</animation>
			<animation effect="fade" time="300" start="100" end="0" delay="0" reversible="true" condition="!Control.HasFocus(9001)">Conditional</animation>
			<animation effect="slide" start="0,0" end="0,60" time="0" delay="0" condition="Integer.IsLess(Container(9001).NumItems,10)">conditional</animation>
			<animation effect="slide" start="0,0" end="0,60" time="0" delay="0" condition="Integer.IsLess(Container(9001).NumItems,8)">conditional</animation>
			<animation effect="slide" start="0,0" end="0,60" time="0" delay="0" condition="Integer.IsLess(Container(9001).NumItems,6)">conditional</animation>
			<posx>-450</posx>
			<posy>210</posy>
			<width>400</width>
			<height>850</height>
            <onleft condition="Control.isVisible(12001)">12001</onleft>
            <onleft condition="!Control.isVisible(12001)">300</onleft>
			<onright>300</onright>
			<onup>9001</onup>
			<ondown>9001</ondown>
			<onback>300</onback>
			<onfocus>ClearProperty(ShowWidgetPopup,Home)</onfocus>
			<itemlayout width="400" height="60">
				<control type="image">
					<width>400</width>
					<height>60</height>
					<texture border="3">buttons/ButtonNF.png</texture>
				</control>
				<control type="label" description="Main Label">
					<posx>30</posx>
					<width>360</width>
					<height>60</height>
					<label>$INFO[ListItem.Label]</label>
				</control>
			</itemlayout>
			<focusedlayout width="400" height="60">
				<control type="image">
					<width>400</width>
					<height>60</height>
					<texture border="4" colordiffuse="$VAR[HighlightColor]">img/WhiteRoundedST2.png</texture>
				</control>
				<control type="label" description="Main Label">
					<posx>30</posx>
					<width>360</width>
					<height>60</height>
					<textcolor>$VAR[FocusedTextColor]</textcolor>
					<shadowcolor></shadowcolor>
					<label>$INFO[ListItem.Label]</label>
				</control>
			</focusedlayout>
			<content>
				<include>skinshortcuts-submenu</include>
			</content>
		</control>
	</include>
	
	<include name="submenuContentIcon">
	    <control type="list" id="9001">
			<visible allowhiddenfocus="true">Control.HasFocus(9001)</visible>
			<include>VisibleFadeEffect</include>
			<animation effect="slide" start="0,0" end="250,0" time="250" delay="0" condition="Control.HasFocus(9001)">conditional</animation>
			<animation effect="fade" time="300" start="100" end="0" delay="0" reversible="true" condition="!Control.HasFocus(9001)">Conditional</animation>
			<animation effect="slide" start="0,0" end="0,60" time="0" delay="0" condition="Integer.IsLess(Container(9001).NumItems,10)">conditional</animation>
			<animation effect="slide" start="0,0" end="0,60" time="0" delay="0" condition="Integer.IsLess(Container(9001).NumItems,8)">conditional</animation>
			<animation effect="slide" start="0,0" end="0,60" time="0" delay="0" condition="Integer.IsLess(Container(9001).NumItems,6)">conditional</animation>
			<posx>-250</posx>
			<posy>80</posy>
			<width>200</width>
			<height>890</height>
            <onleft condition="Control.isVisible(12001)">12001</onleft>
            <onleft condition="!Control.isVisible(12001)">300</onleft>
			<onright>300</onright>
			<onup>9001</onup>
			<ondown>9001</ondown>
			<onback>300</onback>
			<onfocus>ClearProperty(ShowWidgetPopup,Home)</onfocus>
			<itemlayout height="120" width="120">
			    <control type="image">
			        <posx>0</posx>
			        <width>120</width>
			        <height>120</height>
			        <texture>$INFO[ListItem.Icon]</texture>
				    <align>center</align>
				    <aligny>center</aligny>
		        </control>
		    </itemlayout>
		    <focusedlayout height="120" width="120">
			    <control type="image">
			        <posx>0</posx>
			        <width>120</width>
			        <height>120</height>
			        <texture colordiffuse="$VAR[HighlightColor]">$INFO[ListItem.Icon]</texture>
				    <align>center</align>
				    <aligny>center</aligny>
		        </control>
		    </focusedlayout>
			<content>
				<include>skinshortcuts-submenu</include>
			</content>
		</control>
	</include>

	<include name="Vertical_Home_Layout">
	
	    <!-- Now Playing -->
		<control type="group">
			<visible>Player.HasMedia + ![Skin.HasSetting(Hide.NowPlaying) | Window.Next(musicplaylist) | Window.Next(visualisation)]</visible>
			<include>AnimationVisibleFade</include>
			<include content="AnimationSlideBottomWindow">
				<param name="slide">540</param>
			</include>
			<include content="AnimationSlideBottomVisible">
				<param name="slide">540</param>
			</include>
			<include>HomeNowPlaying</include>
		</control>
		
		<!-- Widgets -->
		<control type="group" id="700">
            <visible>!Skin.HasSetting(Hide.AllShelves)</visible>
            <animation effect="fade" start="100" end="0" time="480" condition="[!Skin.HasSetting(Hide.NowPlaying) + Player.HasAudio + !ControlGroup(700).HasFocus] | 
			                                                                   [!Skin.HasSetting(Hide.NowPlaying) + Player.HasVideo + !ControlGroup(700).HasFocus] | 
																			   [!String.IsEmpty(Container(300).ListItem.Property(widgetsHide)) + !ControlGroup(700).HasFocus] | 
																			   [Player.HasVideo + Skin.HasSetting(Shelf.PlayTrailers) + !String.IsEmpty(Window(Home).Property(ShelfTrailerPlaying)) + 
																			    ControlGroup(700).HasFocus]">Conditional</animation>
			
			<animation effect="slide" start="0,0" end="-420,0" time="250" tween="sine" easing="in" condition="Skin.HasSetting(Vertical.HideFocusShelves) + ControlGroup(700).HasFocus + !Skin.HasSetting(Vertical.IconOnly)">conditional</animation>
			<animation effect="slide" start="0,0" end="-120,0" time="250" tween="sine" easing="in" condition="Skin.HasSetting(Vertical.HideFocusShelves) + ControlGroup(700).HasFocus + Skin.HasSetting(Vertical.IconOnly)">conditional</animation>
			
			<top>95</top>
			
			<include condition="Skin.HasSetting(Vertical.IconOnly)">widgetsLeftVerticalIcon</include>
			<include condition="!Skin.HasSetting(Vertical.IconOnly)">widgetsLeftVerticalText</include>
			
			<include>skinshortcuts-template-shelfgroup2shelvesbackground</include>
			<include>skinshortcuts-template-shelfgroup3shelvesbackground</include>
			<include>skinshortcuts-template-shelfgroup3shelvesbackgroundlarge</include>
			<include>skinshortcuts-template-shelfgroup1</include>
			<include>skinshortcuts-template-shelfgroup2</include>
			<include>skinshortcuts-template-shelfgroup3</include>
			<include>skinshortcuts-template-shelfgroup4</include>
			<include>skinshortcuts-template-shelfgroup5</include>
			<include>skinshortcuts-template-shelfgroup6</include>
			<include>skinshortcuts-template-ShelfIndicator</include>
            <control type="group">
                <include>PVRRecordingWidgets</include>
			</control>
		</control>
		
		<include condition="!Skin.HasSetting(Vertical.HideFocusShelves)">ShelfTrailerInfo</include>
		<include condition="Skin.HasSetting(Vertical.HideFocusShelves)" content="ShelfTrailerInfo">
		    <param name="left">0</param>
			<param name="top">900</param>
		</include>
		
		<control type="group">
			<control type="group" description="Furniture">
				<control type="image" description="Main Left Blade">
					
					<animation effect="slide" start="0,0" end="-440,0" time="250" tween="sine" easing="in" condition="Skin.HasSetting(Vertical.HideFocusShelves) + ControlGroup(700).HasFocus + !Skin.HasSetting(Vertical.IconOnly)">conditional</animation>
					<animation effect="slide" start="0,0" end="-120,0" time="250" tween="sine" easing="in" condition="Skin.HasSetting(Vertical.HideFocusShelves) + ControlGroup(700).HasFocus + Skin.HasSetting(Vertical.IconOnly)">conditional</animation>
					
					<include condition="Skin.HasSetting(Vertical.IconOnly)">menuWidthVerticalIcon</include>
			        <include condition="!Skin.HasSetting(Vertical.IconOnly)">menuWidthVerticalText</include>
					
					<height>1080</height>
					<texture border="0,0,30,0" colordiffuse="$VAR[VertMenuBladeColor]">common/ViewMenuHome.png</texture>
				</control>
			</control>
			<include condition="Skin.HasSetting(VerticalNavWrap)">VerticalMenuWrapped</include>
			<include condition="!Skin.HasSetting(VerticalNavWrap)">VerticalMenuFixed</include>
		</control>
		<control type="image" description="Sub Left Blade">
			<include>VisibleFadeEffect</include>
			<animation effect="slide" start="0,0" end="389,0" time="250" delay="0" reversible="true" condition="Control.HasFocus(9001)">conditional</animation>
			<posx>-518</posx>
			<include condition="Skin.HasSetting(Vertical.IconOnly)">submenuWidthVerticalIcon</include>
			<include condition="!Skin.HasSetting(Vertical.IconOnly)">submenuWidthVerticalText</include>
			<height>1080</height>
			<texture border="0,0,30,0"  colordiffuse="$VAR[VertMenuBladeColor]">common/ViewMenu.png</texture>
		</control>
		
		<include condition="Skin.HasSetting(Vertical.IconOnly)">submenuContentIcon</include>
		<include condition="!Skin.HasSetting(Vertical.IconOnly)">submenuContentText</include>
		
		<include condition="Skin.HasSetting(ShowInfoLine) + !Skin.HasSetting(ShowInfoLineShelf)">Library_Count</include>
		<include condition="Skin.HasSetting(VerticalHome) + Skin.HasSetting(Vertical.IconOnly) + Skin.HasSetting(Vertical.IconShowLabel) + !Skin.HasSetting(IconShowLabel.InTopBar)">ShowIconMenuLabel</include>
		
	</include>

</includes>