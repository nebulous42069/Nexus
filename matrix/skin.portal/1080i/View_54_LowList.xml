<?xml version="1.0" encoding="UTF-8"?>
<includes>
	<include name="View_54_LowList">
		<param name="ListType">list</param>
		<definition>
			<control type="group">
				
				<include condition="Skin.HasSetting(ShowSetCount)">LowListMovieSetDiscs</include>
				
				<include content="ListMusicDisc">
				    <param name="viewid">54</param>
	                <param name="discsize">275</param>
		            <param name="left">40</param>
		            <param name="top">420</param>
				</include>	
				
				<include content="BackgroundOverlay">
					<param name="overlayheight" value="517"/>
					<param name="overlaytop" value="563"/>
					<param name="parentid" value="54"/>
				</include>
				<visible>Control.IsVisible(54)</visible>
				<include>ContentFade</include>

				<control type="$PARAM[ListType]" id="54">
					<viewtype label="$LOCALIZE[31962]">list</viewtype>
					<visible>[$EXP[Exp_View_54] + Skin.HasSetting(Enable.NewViewSelector)] | [!Skin.HasSetting(hide.lowlistview) + !Skin.HasSetting(Enable.NewViewSelector)]</visible>
					<posx>340</posx>
					<posy>633</posy>
					<width>1540</width>
					<height>441</height>
					<pagecontrol>64</pagecontrol>				
					<onleft condition="!Skin.HasSetting(KioskMode.Enabled)">9000</onleft>
					<onleft condition="!Skin.HasSetting(KioskMode.Enabled)">SetProperty(MediaMenu,true,Home)</onleft>
					<onleft condition="Skin.HasSetting(KioskMode.Enabled)">noop</onleft>
					
					<oninfo condition="System.AddonIsEnabled(script.extendedinfo) + Skin.HasSetting(AutoExtendedInfo) + String.IsEqual(ListItem.DBType,movie)">RunScript(script.extendedinfo,info=extendedinfo,dbid=$INFO[ListItem.DBID],id=$INFO[ListItem.UniqueID(tmdb)],imdb_id=$INFO[ListItem.IMDBNumber],name=$INFO[Listitem.Title])</oninfo>
				    <oninfo condition="System.AddonIsEnabled(script.extendedinfo) + Skin.HasSetting(AutoExtendedInfo) + String.IsEqual(ListItem.DBType,tvshow)">RunScript(script.extendedinfo,info=extendedtvinfo,dbid=$INFO[ListItem.DBID],id=$INFO[ListItem.UniqueID(tmdb)],tvdb_id=$INFO[ListItem.UniqueID(tvdb)],name=$INFO[Listitem.Title])</oninfo>
				    <oninfo condition="System.AddonIsEnabled(script.extendedinfo) + Skin.HasSetting(AutoExtendedInfo) + String.IsEqual(ListItem.DBType,season)">RunScript(script.extendedinfo,info=seasoninfo,tvshow=$INFO[Listitem.TVShowTitle],season=$INFO[ListItem.Season])</oninfo>
				    <oninfo condition="System.AddonIsEnabled(script.extendedinfo) + Skin.HasSetting(AutoExtendedInfo) + String.IsEqual(ListItem.DBType,episode)">RunScript(script.extendedinfo,info=extendedepisodeinfo,tvshow=$INFO[Listitem.TVShowTitle],season=$INFO[ListItem.Season],episode=$INFO[ListItem.Episode])</oninfo>
					
					<oninfo condition="ListItem.IsCollection + !String.Contains(System.BuildVersion,19)">ActivateWindow(1127)</oninfo>
					<onright condition="!Control.IsVisible(615) | [Control.IsVisible(615) + Control.IsVisible(64)]">64</onright>
					<onright condition="Control.IsVisible(615)">615</onright>
					<onup>54</onup>
					<ondown>54</ondown>
					<preloaditems>4</preloaditems>
					<include condition="Skin.HasSetting(ListCenterFocus)">ListCenterFocusParamsLowList</include>
					<include condition="!Skin.HasSetting(Show.MoreItems.List)" content="LowList_Layout">
						<param name="id">54</param>
						<param name="ListLabelFont">font16</param>
						<param name="ListLabel2Font">ListDetails</param>
						<param name="itemheight">72</param>
						<param name="BGposy">15</param>
					</include>
					<include condition="Skin.HasSetting(Show.MoreItems.List)" content="LowList_Layout">
						<param name="id">54</param>
						<param name="ListLabelFont">ListDetails</param>
						<param name="ListLabel2Font">ListDetails</param>
						<param name="itemheight">52</param>
						<param name="BGposy">5</param>
					</include>                
				</control>

				<control type="scrollbar" id="64">
					<animation effect="slide" start="0,0" end="-8,0" time="150">Focus</animation>
					<animation effect="slide" start="-8,0" end="0,0" time="300">UnFocus</animation>
					<posx>20r</posx>
					<posy>600</posy>
					<height>460</height>
					<width>36</width>
					<texturesliderbackground></texturesliderbackground>
					<texturesliderbar></texturesliderbar>
					<texturesliderbarfocus></texturesliderbarfocus>
					<textureslidernib border="18">OSD/ScrollbarNibNF.png</textureslidernib>
					<textureslidernibfocus border="18" colordiffuse="$VAR[HighlightColor]">OSD/ScrollbarNibFO.png</textureslidernibfocus>
					<showonepage>false</showonepage>
					<orientation>vertical</orientation>
					<onleft>54</onleft>
					<onright>54</onright>
					<visible>!Skin.HasSetting(Show.JumpToLetter) | ![String.IsEqual(Container.SortMethod,$LOCALIZE[551]) | String.IsEqual(Container.SortMethod,$LOCALIZE[556]) | String.IsEqual(Container.SortMethod,$LOCALIZE[561]) | String.IsEqual(Container.SortMethod,$LOCALIZE[558]) | String.IsEqual(Container.SortMethod,$LOCALIZE[557])]</visible>
				</control>

				<control type="button" id="64">
					<visible>Control.IsVisible(54)</visible>
					<visible>Skin.HasSetting(Show.JumpToLetter) + !Skin.HasSetting(Show.EHJumpToLetter) + [String.IsEqual(Container.SortMethod,$LOCALIZE[551]) | String.IsEqual(Container.SortMethod,$LOCALIZE[556]) | String.IsEqual(Container.SortMethod,$LOCALIZE[561]) | String.IsEqual(Container.SortMethod,$LOCALIZE[558]) | String.IsEqual(Container.SortMethod,$LOCALIZE[557])]</visible>
					<font />
					<texturefocus />
					<texturenofocus />
					<width>40</width>
					<onleft>54</onleft>
					<posx>50r</posx>
					<posy>600</posy>
					<height>460</height>
					<ondown>SetFocus(54)</ondown>
					<ondown>Action(nextletter)</ondown>
					<ondown condition="!Container.HasNext | String.IsEqual(ListItem.SortLetter,Z)">Action(jumpsms2)</ondown>
					<ondown condition="!Container.HasNext | String.IsEqual(ListItem.SortLetter,Z)">Action(prevletter)</ondown>
					<ondown condition="!Container.HasNext | String.IsEqual(ListItem.SortLetter,Z)">Action(prevletter)</ondown>
					<ondown condition="!Container.HasNext | String.IsEqual(ListItem.SortLetter,Z)">Action(prevletter)</ondown>
					<ondown>SetFocus(64)</ondown>
					<onup>SetFocus(54)</onup>
					<onup>Action(prevletter)</onup>
					<onup condition="!Container.HasPrevious | $EXP[Exp_SortLetterIsNumber]">Action(jumpsms9)</onup>
					<onup condition="!Container.HasPrevious | $EXP[Exp_SortLetterIsNumber]">Action(nextletter)</onup>
					<onup condition="!Container.HasPrevious | $EXP[Exp_SortLetterIsNumber]">Action(nextletter)</onup>
					<onup condition="!Container.HasPrevious | $EXP[Exp_SortLetterIsNumber]">Action(nextletter)</onup>
					<onup>SetFocus(64)</onup>
				</control>            

				<control type="grouplist" id="64541">
					<posx>36r</posx>
					<posy>600</posy>
					<height>460</height>
					<width>42</width>
					<itemgap>0</itemgap>
					<orientation>vertical</orientation>
					<animation effect="fade" start="100" end="0" time="400" condition="!Control.HasFocus(64) + !Container.Scrolling">Conditional</animation>
					<include>AlphabetNumber</include>
					<include content="AlphabetLetter"><param name="label" value="A" /></include>
					<include content="AlphabetLetter"><param name="label" value="B" /></include>
					<include content="AlphabetLetter"><param name="label" value="C" /></include>
					<include content="AlphabetLetter"><param name="label" value="D" /></include>
					<include content="AlphabetLetter"><param name="label" value="E" /></include>
					<include content="AlphabetLetter"><param name="label" value="F" /></include>
					<include content="AlphabetLetter"><param name="label" value="G" /></include>
					<include content="AlphabetLetter"><param name="label" value="H" /></include>
					<include content="AlphabetLetter"><param name="label" value="I" /></include>
					<include content="AlphabetLetter"><param name="label" value="J" /></include>
					<animation effect="fade" start="100" end="0" condition="[String.IsEqual(ListItem.SortLetter,K) | 
                                                                         String.IsEqual(ListItem.SortLetter,L) | 
                                                                         String.IsEqual(ListItem.SortLetter,M) | 
                                                                         String.IsEqual(ListItem.SortLetter,N) | 
                                                                         String.IsEqual(ListItem.SortLetter,O) | 
                                                                         String.IsEqual(ListItem.SortLetter,P) | 
                                                                         String.IsEqual(ListItem.SortLetter,Q) | 
                                                                         String.IsEqual(ListItem.SortLetter,R) | 
                                                                         String.IsEqual(ListItem.SortLetter,S) | 
                                                                         String.IsEqual(ListItem.SortLetter,T) | 
                                                                         String.IsEqual(ListItem.SortLetter,U) | 
                                                                         String.IsEqual(ListItem.SortLetter,V) | 
                                                                         String.IsEqual(ListItem.SortLetter,W) | 
                                                                         String.IsEqual(ListItem.SortLetter,X) | 
                                                                         String.IsEqual(ListItem.SortLetter,Y) | 
                                                                         String.IsEqual(ListItem.SortLetter,Z)]">Conditional</animation>
					<visible>Control.IsVisible(54)</visible>
					<visible>Skin.HasSetting(Show.JumpToLetter) + !Skin.HasSetting(Show.EHJumpToLetter) + [String.IsEqual(Container.SortMethod,$LOCALIZE[551]) | String.IsEqual(Container.SortMethod,$LOCALIZE[556]) | String.IsEqual(Container.SortMethod,$LOCALIZE[561]) | String.IsEqual(Container.SortMethod,$LOCALIZE[558]) | String.IsEqual(Container.SortMethod,$LOCALIZE[557])]</visible>
				</control>

				<control type="grouplist" id="64542">
					<posx>36r</posx>
					<posy>600</posy>
					<height>460</height>
					<width>42</width>
					<itemgap>0</itemgap>
					<orientation>vertical</orientation>
					<animation effect="fade" start="100" end="0" time="400" condition="!Control.HasFocus(64) + !Container.Scrolling">Conditional</animation>
					<include content="AlphabetLetter"><param name="label" value="H" /></include>
					<include content="AlphabetLetter"><param name="label" value="I" /></include>
					<include content="AlphabetLetter"><param name="label" value="J" /></include>                
					<include content="AlphabetLetter"><param name="label" value="K" /></include>
					<include content="AlphabetLetter"><param name="label" value="L" /></include>
					<include content="AlphabetLetter"><param name="label" value="M" /></include>
					<include content="AlphabetLetter"><param name="label" value="N" /></include>
					<include content="AlphabetLetter"><param name="label" value="O" /></include>
					<include content="AlphabetLetter"><param name="label" value="P" /></include>
					<include content="AlphabetLetter"><param name="label" value="Q" /></include>
					<include content="AlphabetLetter"><param name="label" value="R" /></include>
					<animation effect="fade" start="100" end="0" condition="![String.IsEqual(ListItem.SortLetter,K) | 
                                                                          String.IsEqual(ListItem.SortLetter,L) | 
                                                                          String.IsEqual(ListItem.SortLetter,M) | 
                                                                          String.IsEqual(ListItem.SortLetter,N) | 
                                                                          String.IsEqual(ListItem.SortLetter,O) | 
                                                                          String.IsEqual(ListItem.SortLetter,P) | 
                                                                          String.IsEqual(ListItem.SortLetter,Q) | 
                                                                          String.IsEqual(ListItem.SortLetter,R)]">Conditional</animation>
					<visible>Control.IsVisible(54)</visible>
					<visible>Skin.HasSetting(Show.JumpToLetter) + !Skin.HasSetting(Show.EHJumpToLetter) + [String.IsEqual(Container.SortMethod,$LOCALIZE[551]) | String.IsEqual(Container.SortMethod,$LOCALIZE[556]) | String.IsEqual(Container.SortMethod,$LOCALIZE[561]) | String.IsEqual(Container.SortMethod,$LOCALIZE[558]) | String.IsEqual(Container.SortMethod,$LOCALIZE[557])]</visible>
				</control>

				<control type="grouplist" id="64543">
					<posx>36r</posx>
					<posy>600</posy>
					<height>460</height>
					<width>42</width>
					<itemgap>0</itemgap>
					<orientation>vertical</orientation>
					<animation effect="fade" start="100" end="0" time="400" condition="!Control.HasFocus(64) + !Container.Scrolling">Conditional</animation>
					<include content="AlphabetLetter"><param name="label" value="P" /></include>
					<include content="AlphabetLetter"><param name="label" value="Q" /></include>
					<include content="AlphabetLetter"><param name="label" value="R" /></include>
					<include content="AlphabetLetter"><param name="label" value="S" /></include>
					<include content="AlphabetLetter"><param name="label" value="T" /></include>
					<include content="AlphabetLetter"><param name="label" value="U" /></include>
					<include content="AlphabetLetter"><param name="label" value="V" /></include>
					<include content="AlphabetLetter"><param name="label" value="W" /></include>
					<include content="AlphabetLetter"><param name="label" value="X" /></include>
					<include content="AlphabetLetter"><param name="label" value="Y" /></include>
					<include content="AlphabetLetter"><param name="label" value="Z" /></include>
					<animation effect="fade" start="100" end="0" condition="![String.IsEqual(ListItem.SortLetter,S) | 
                                                                          String.IsEqual(ListItem.SortLetter,T) | 
                                                                          String.IsEqual(ListItem.SortLetter,U) | 
                                                                          String.IsEqual(ListItem.SortLetter,V) | 
                                                                          String.IsEqual(ListItem.SortLetter,W) | 
                                                                          String.IsEqual(ListItem.SortLetter,X) | 
                                                                          String.IsEqual(ListItem.SortLetter,Y) | 
                                                                          String.IsEqual(ListItem.SortLetter,Z)]">Conditional</animation>
					<visible>Control.IsVisible(54)</visible>
					<visible>Skin.HasSetting(Show.JumpToLetter) + !Skin.HasSetting(Show.EHJumpToLetter) + [String.IsEqual(Container.SortMethod,$LOCALIZE[551]) | String.IsEqual(Container.SortMethod,$LOCALIZE[556]) | String.IsEqual(Container.SortMethod,$LOCALIZE[561]) | String.IsEqual(Container.SortMethod,$LOCALIZE[558]) | String.IsEqual(Container.SortMethod,$LOCALIZE[557])]</visible>
				</control>            

                <!-- Info panels in original position -->
				<include content="PanelTemplate">
					<param name="lowpanel">true</param>
					<param name="top">600</param>
					<param name="left">355</param>
					<param name="groupheight">365</param>
					<param name="footertop">965</param>
		            <param name="footerheight">115</param>
					<param name="height">205</param>
					<param name="width">850</param>
					<param name="heading">$VAR[panelheading]</param>
					<param name="subheading">$VAR[panelsubheading]</param>
					<param name="subheading2">$VAR[panelsubheading2]</param>
					<param name="subheading2_visible">[Container.content(movies) | Container.content(episodes)] + [Skin.HasSetting(ShowAudioSub) + ![String.IsEmpty(ListItem.Property(AudioLanguage.1)) + String.IsEmpty(ListItem.Property(SubtitleLanguage.1))]]</param>
					<param name="plot">$VAR[Plots]</param>
					<param name="footer">$VAR[panelfooter]</param>
					<param name="footertop">910</param>
					<param name="visibility">$EXP[PanelShouldShow] + ![$EXP[LowListPanelIsDisabled]] + ![$EXP[LowListPanelIsSwapped]] + [Container.Content(videos) | Container.Content(files) | Container.Content() | Container.content(movies) | Container.Content(musicvideos) | Container.Content(episodes)]</param>
				</include>

				<include content="PanelTemplate">
					<param name="lowpanel">true</param>
					<param name="top">610</param>
					<param name="left">355</param>
					<param name="height">205</param>
					<param name="width">850</param>
					<param name="heading">$VAR[panelheading]</param>
					<param name="subheading">$VAR[panelsubheading]</param>
					<param name="subheading2">$VAR[panelsubheading2]</param>
					<param name="subheading2_visible">!String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.Next_Aired))</param>
					<param name="plot">$VAR[Plots]</param>
					<param name="footer">$VAR[panelfooter]</param>
					<param name="showflags">false</param>
					<param name="footertop">990</param>
		            <param name="footerheight">90</param>
					<param name="visibility">![$EXP[LowListPanelIsDisabled]] + ![$EXP[LowListPanelIsSwapped]] + [Container.content(seasons) | Container.Content(tvshows)] + $EXP[PanelShouldShow]</param>
				</include>            
				<include content="PanelTemplate">
					<param name="lowpanel">true</param>
					<param name="top">610</param>
					<param name="left">355</param>
					<param name="height">280</param>
					<param name="width">850</param>
					<param name="heading">$VAR[panelheading]</param>
					<param name="subheading">$VAR[panelsubheading]</param>
					<param name="plot">$VAR[Plots]</param>
					<param name="footer">$VAR[panelfooter]</param>
					<param name="footertop">1035</param>
					<param name="showfooter">false</param>
					<param name="visibility">![$EXP[LowListPanelIsDisabled]] + ![$EXP[LowListPanelIsSwapped]] + [Container.content(addons) | Container.content(images) | Container.content(games) | Container.Content(sets)]</param>
				</include>
				<include content="PanelTemplate">
					<param name="lowpanel">true</param>
					<param name="top">610</param>
					<param name="left">355</param>
					<param name="height">280</param>
					<param name="width">850</param>
					<param name="heading">$VAR[panelheading]</param>
					<param name="subheading">$VAR[panelsubheading]</param>
					<param name="plot">$VAR[Plots]</param>
					<param name="subcontent_label">$INFO[ListItem.Label]$INFO[ListItem.Year,  (,)]</param>
					<param name="subcontent_path">$INFO[ListItem.FolderPath]</param>
					<param name="subcontent_visible">String.IsEmpty(ListItem.Property(Artist_Description))</param>
					<param name="subcontent_image_visible">false</param>
					<param name="showfooter">false</param>
					<param name="footer">$VAR[panelfooter]</param>
					<param name="footertop">1000</param>
		            <param name="footerheight">75</param>
					<param name="showflags">false</param>
					<param name="visibility">Container.Content(artists) + ![$EXP[LowListPanelIsDisabled]] + ![$EXP[LowListPanelIsSwapped]]</param>
				</include>
				<include content="PanelTemplate">
					<param name="lowpanel">true</param>
					<param name="top">610</param>
					<param name="left">355</param>
					<param name="height">240</param>
					<param name="width">850</param>
					<param name="heading">$VAR[panelheading]</param>
					<param name="subheading">$VAR[panelsubheading]</param>
					<param name="plot">$VAR[Plots]</param>
					<param name="subcontent_label1">$INFO[ListItem.TrackNumber,,. ]$INFO[ListItem.Label]$INFO[ListItem.Duration,  (,)]</param>
					<param name="subcontent_label2">$INFO[ListItem.TrackNumber,,. ]$INFO[ListItem.Label]$VAR[ItemDurationHrMins,  (,)]</param>
					<param name="subcontent_path">$INFO[ListItem.FolderPath]</param>
					<param name="subcontent_sortby" value="track" />
					<param name="subcontent_sortorder" value="ascending" />
					<param name="subcontent_visible">String.IsEmpty(ListItem.Property(Album_Description))</param>
					<param name="subcontent_image_visible">false</param>
					<param name="footer">$VAR[panelfooter]</param>
					<param name="footertop">1000</param>
		            <param name="footerheight">75</param>
					<param name="showflags">false</param>
					<param name="visibility">Container.Content(albums) + ![$EXP[LowListPanelIsDisabled]] + ![$EXP[LowListPanelIsSwapped]]</param>
				</include>
				
				<!-- Info panels in swapped position -->
				<include content="PanelTemplate">
					<param name="lowpanel">true</param>
					<param name="top">600</param>
					<param name="left">1020</param>
					<param name="groupheight">365</param>
					<param name="footertop">965</param>
		            <param name="footerheight">115</param>
					<param name="height">205</param>
					<param name="width">850</param>
					<param name="heading">$VAR[panelheading]</param>
					<param name="subheading">$VAR[panelsubheading]</param>
					<param name="subheading2">$VAR[panelsubheading2]</param>
					<param name="subheading2_visible">[Container.content(movies) | Container.content(episodes)] + [Skin.HasSetting(ShowAudioSub) + ![String.IsEmpty(ListItem.Property(AudioLanguage.1)) + String.IsEmpty(ListItem.Property(SubtitleLanguage.1))]]</param>
					<param name="plot">$VAR[Plots]</param>
					<param name="footer">$VAR[panelfooter]</param>
					<param name="footertop">910</param>
					<param name="visibility">$EXP[PanelShouldShow] + ![$EXP[LowListPanelIsDisabled]] + $EXP[LowListPanelIsSwapped] + [Container.Content(videos) | Container.Content(files) | Container.Content() | Container.content(movies) | Container.Content(musicvideos) | Container.Content(episodes)]</param>
				</include>

				<include content="PanelTemplate">
					<param name="lowpanel">true</param>
					<param name="top">610</param>
					<param name="left">1020</param>
					<param name="height">205</param>
					<param name="width">850</param>
					<param name="heading">$VAR[panelheading]</param>
					<param name="subheading">$VAR[panelsubheading]</param>
					<param name="subheading2">$VAR[panelsubheading2]</param>
					<param name="subheading2_visible">!String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.Next_Aired))</param>
					<param name="plot">$VAR[Plots]</param>
					<param name="footer">$VAR[panelfooter]</param>
					<param name="showflags">false</param>
					<param name="footertop">990</param>
		            <param name="footerheight">90</param>
					<param name="visibility">![$EXP[LowListPanelIsDisabled]] + $EXP[LowListPanelIsSwapped] + [Container.content(seasons) | Container.Content(tvshows)] + $EXP[PanelShouldShow]</param>
				</include>            
				<include content="PanelTemplate">
					<param name="lowpanel">true</param>
					<param name="top">610</param>
					<param name="left">1030</param>
					<param name="height">280</param>
					<param name="width">850</param>
					<param name="heading">$VAR[panelheading]</param>
					<param name="subheading">$VAR[panelsubheading]</param>
					<param name="plot">$VAR[Plots]</param>
					<param name="footer">$VAR[panelfooter]</param>
					<param name="footertop">1035</param>
					<param name="showfooter">false</param>
					<param name="visibility">![$EXP[LowListPanelIsDisabled]] + $EXP[LowListPanelIsSwapped] + [Container.content(addons) | Container.content(images) | Container.content(games) | Container.Content(sets)]</param>
				</include>
				<include content="PanelTemplate">
					<param name="lowpanel">true</param>
					<param name="top">610</param>
					<param name="left">1020</param>
					<param name="height">280</param>
					<param name="width">850</param>
					<param name="heading">$VAR[panelheading]</param>
					<param name="subheading">$VAR[panelsubheading]</param>
					<param name="plot">$VAR[Plots]</param>
					<param name="subcontent_label">$INFO[ListItem.Label]$INFO[ListItem.Year,  (,)]</param>
					<param name="subcontent_path">$INFO[ListItem.FolderPath]</param>
					<param name="subcontent_visible">String.IsEmpty(ListItem.Property(Artist_Description))</param>
					<param name="subcontent_image_visible">false</param>
					<param name="showfooter">false</param>
					<param name="footer">$VAR[panelfooter]</param>
					<param name="footertop">1000</param>
		            <param name="footerheight">75</param>
					<param name="showflags">false</param>
					<param name="visibility">Container.Content(artists) + ![$EXP[LowListPanelIsDisabled]] + $EXP[LowListPanelIsSwapped]</param>
				</include>
				<include content="PanelTemplate">
					<param name="lowpanel">true</param>
					<param name="top">610</param>
					<param name="left">1020</param>
					<param name="height">240</param>
					<param name="width">850</param>
					<param name="heading">$VAR[panelheading]</param>
					<param name="subheading">$VAR[panelsubheading]</param>
					<param name="plot">$VAR[Plots]</param>
					<param name="subcontent_label1">$INFO[ListItem.TrackNumber,,. ]$INFO[ListItem.Label]$INFO[ListItem.Duration,  (,)]</param>
					<param name="subcontent_label2">$INFO[ListItem.TrackNumber,,. ]$INFO[ListItem.Label]$VAR[ItemDurationHrMins,  (,)]</param>
					<param name="subcontent_path">$INFO[ListItem.FolderPath]</param>
					<param name="subcontent_sortby" value="track" />
					<param name="subcontent_sortorder" value="ascending" />
					<param name="subcontent_visible">String.IsEmpty(ListItem.Property(Album_Description))</param>
					<param name="subcontent_image_visible">false</param>
					<param name="footer">$VAR[panelfooter]</param>
					<param name="footertop">1000</param>
		            <param name="footerheight">75</param>
					<param name="showflags">false</param>
					<param name="visibility">Container.Content(albums) + ![$EXP[LowListPanelIsDisabled]] + $EXP[LowListPanelIsSwapped]</param>
				</include>
				
				<control type="group" description="50 MediaInfo">
					<posx>30</posx>
					<posy>620</posy>
					<width>600</width>
					<control type="label">
						<left>0</left>
						<top>-10</top>
						<width>295</width>
						<height>45</height>
						<label>$VAR[listmediaheader]</label>
						<textcolor>$VAR[HighlightColor]</textcolor>
						<wrapmultiline>true</wrapmultiline>
						<align>center</align>
						<aligny>center</aligny>
						<font>ListDetails</font>
					</control>
					<include content="ShadowedImage">
						<param name="top">-11</param>
						<param name="width">295</param>
						<param name="height">450</param>
						<param name="texture">$VAR[Poster]</param>
						<param name="aspect">stretch</param>
						<param name="visibility">[Container.Content(movies) | Container.Content(tvshows) | Container.Content(sets) | Container.Content(seasons)]</param>
					</include>
					<include content="ShadowedImage">
						<param name="top">-11</param>
						<param name="width">295</param>
						<param name="height">450</param>
						<param name="texture">$VAR[Episode]</param>
						<param name="visibility">Container.Content(episodes) + !Skin.HasSetting(EpisodesUsePoster)</param>
					</include>
					<include content="ShadowedImage">
						<param name="top">-11</param>
						<param name="width">295</param>
						<param name="height">450</param>
						<param name="texture">$VAR[Poster]</param>
						<param name="aspect">stretch</param>
						<param name="visibility">Container.Content(episodes) + Skin.HasSetting(EpisodesUsePoster)</param>
					</include>
					<include content="ShadowedImage">
						<param name="top">-11</param>
						<param name="width">295</param>
						<param name="height">450</param>
						<param name="texture">$VAR[Square]</param>
						<param name="visibility">![Container.Content(images) | Container.Content(movies) | Container.Content(tvshows) | Container.Content(sets) | Container.Content(seasons) | Container.Content(episodes)]</param>
					</include>
					<include content="ShadowedImage">
						<param name="top">-11</param>
						<param name="width">295</param>
						<param name="height">450</param>
						<param name="texture">$VAR[Square]</param>
						<param name="visibility">Container.Content(images) + [!Skin.HasSetting(54_Images_DisablePanel) | !Skin.HasSetting(54_Images_LargeImage)]</param>
					</include>
					<include content="ShadowedImage">
						<param name="top">-11</param>
						<param name="width">710</param>
						<param name="height">450</param>
						<param name="texture">$VAR[Square]</param>
						<param name="visibility">Container.Content(images) + Skin.HasSetting(54_Images_DisablePanel) + Skin.HasSetting(54_Images_LargeImage)</param>
					</include>
					
					<control type="label">
						<top>385</top>
						<left>0</left>
						<width>295</width>
						<height>45</height>
						<align>center</align>
						<label>$VAR[listmediafooter]</label>
						<textcolor>$VAR[HighlightColor]</textcolor>
						<font>ListDetails</font>
					</control>
					
					<!-- Rating overlay -->
					<control type="group">
					    <visible>Skin.HasSetting(ShowRatingOverlays) + $EXP[canShowRatingOverlay]</visible>
					    <control type="group">
				            <visible>[String.IsEqual(ListItem.DBType,movie) | String.IsEqual(ListItem.DBType,set) | String.IsEqual(ListItem.DBType,tvshow) | 
							          [String.IsEqual(ListItem.DBType,episode) + Skin.HasSetting(EpisodesUsePoster)]]</visible>
							<control type="image">
				                <texture background="true" flipx="true" colordiffuse="$VAR[HighlightColor]">overlays/toprightempty2.png</texture>
				                <top>-11</top>
				                <left>0</left>
				                <height>102</height>
				                <width>102</width>
			                </control>
					        <control type="label" description="l2">
					            <left>-20</left>
				                <top>-1</top>
					            <height>40</height>
					            <width>100</width>
					            <font>font12_title</font>
					            <align>center</align>
					            <shadowcolor></shadowcolor>
					            <label>$VAR[ContainerRatingOverlayVar]</label>
					            <textcolor>$VAR[HighlightColor]</textcolor>
					            <colordiffuse>$VAR[HighlightColor]</colordiffuse>
				            </control>
						</control>
                        <control type="group">
				            <visible>[String.IsEqual(ListItem.DBType,episode) + !Skin.HasSetting(EpisodesUsePoster)]</visible>
							<control type="image">
				                <texture background="true" flipx="true" colordiffuse="$VAR[HighlightColor]">overlays/toprightempty2.png</texture>
				                <top>131</top>
				                <left>0</left>
				                <height>102</height>
				                <width>102</width>
			                </control>
					        <control type="label" description="l2">
					            <left>-19</left>
				                <top>141</top>
					            <height>40</height>
					            <width>100</width>
					            <font>font12_title</font>
					            <align>center</align>
					            <shadowcolor></shadowcolor>
					            <label>$VAR[ContainerRatingOverlayVar]</label>
					            <textcolor>$VAR[HighlightColor]</textcolor>
					            <colordiffuse>$VAR[HighlightColor]</colordiffuse>
				            </control>
						</control>						
					</control>
					
				</control>
				
				<include condition="!String.IsEqual(Skin.String(MediaViewsExtraArt),discart)" content="ListViewsDiscArt">
				    <param name="viewid">54</param>
					<param name="posx">40</param>
		            <param name="posy">775</param>
		            <param name="discsize">275</param>
				</include>
				
				<include condition="!Skin.String(MediaViewsExtraArt,none)" content="ShowMediaViewsExtraArt">
				    <param name="logoleft">1380</param>
					<param name="logotop">40</param>
					<param name="logowidth">500</param>
					<param name="logoheight">290</param>
					<param name="discleft">1560</param>
					<param name="disctop">80</param>
					<param name="discheight">320</param>
					<param name="characterleft">1420</param>
					<param name="charactertop">110</param>
					<param name="characterheight">420</param>
					<param name="clearartleft">1351</param>
					<param name="cleararttop">267</param>
					<param name="clearartwidth">569</param>
					<param name="clearartheight">320</param>
				</include>
				
				<control type="image">
				    <left>-5</left>
					<width>405</width>
				    <top>40</top>
					<height>90</height>
				    <texture colordiffuse="FFFFFFFF">common/list_shadow.png</texture>
					<visible>Skin.HasSetting(Enable.TouchSupport)</visible>
     			</control>
				
				<include condition="Skin.HasSetting(Enable.TouchSupport)" content="TouchButtons">
		            <param name="ButtonsTop">40</param>
					<param name="left">-5</param>
			        <param name="id">54</param>
		        </include>
				
			</control>
		</definition>
	</include>
</includes>
