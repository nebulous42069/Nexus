<?xml version="1.0" encoding="UTF-8"?>
<includes>
    
	<variable name="ShelfPopupPoster">
        <value condition="String.IsEqual(Window(1144).Property(DBType),episode) + !String.IsEmpty(Window(1144).Property(Art.season.poster))">$INFO[Window(1144).Property(Art.season.poster)]</value>
        <value condition="String.IsEqual(Window(1144).Property(DBType),episode) + String.IsEmpty(Window(1144).Property(Art.season.poster)) + !String.IsEmpty(Window(1144).Property(Art.tvshow.poster))">$INFO[Window(1144).Property(Art.tvshow.poster)]</value>
		<value condition="String.IsEqual(Window(1144).Property(DBType),movie) | String.IsEqual(Window(1144).Property(DBType),tvshow)">$INFO[Window(1144).Property(Art.Poster)]</value>
		<value condition="String.IsEqual(Window(1144).Property(DBType),musicvideo) + !String.IsEmpty(Window(1144).Property(Art.Poster))">$INFO[Window(1144).Property(Art.Poster)]</value>
		<value condition="String.IsEqual(Window(1144).Property(DBType),musicvideo) + String.IsEmpty(Window(1144).Property(Art.Poster))">$INFO[Window(1144).Property(Art.Thumb)]</value>
    </variable>
	
	<variable name="ShelfPopupSquare">
        <value condition="!String.IsEmpty(Window(1144).Property(Art.Thumb))">$INFO[Window(1144).Property(Art.Thumb)]</value>
		<value>$INFO[Window(1144).Property(Icon)]</value>
    </variable>
	
	<variable name="ShelfPopupLogo">
        <value condition="String.IsEqual(Window(1144).Property(DBType),movie) | String.IsEqual(Window(1144).Property(DBType),tvshow) | String.IsEqual(Window(1144).Property(DBType),musicvideo) | String.IsEqual(Window(1144).Property(DBType),artist)">$INFO[Window(1144).Property(Art.ClearLogo)]</value>
        <value condition="String.IsEqual(Window(1144).Property(DBType),episode)">$INFO[Window(1144).Property(Art.tvshow.clearlogo)]</value>
		<value condition="[String.IsEqual(Window(1144).Property(DBType),album) | String.IsEqual(Window(1144).Property(DBType),song)] + !String.IsEmpty(Window(1144).Property(Art.artist.clearlogo))">$INFO[Window(1144).Property(Art.artist.clearlogo)]</value>
		<value condition="[String.IsEqual(Window(1144).Property(DBType),album) | String.IsEqual(Window(1144).Property(DBType),song)] + String.IsEmpty(Window(1144).Property(Art.artist.clearlogo))">$INFO[Window(1144).Property(Art.albumartist.clearlogo)]</value>
    </variable>
	
    <variable name="ShelfPopupCertFlag">
        <value condition="[String.IsEmpty(Window(1144).Property(MPAA)) | String.Contains(Window(1144).Property(MPAA),NR) | String.IsEqual(Window(1144).Property(MPAA),Rated) | String.IsEqual(Window(1144).Property(MPAA),Rated ) | String.IsEqual(Window(1144).Property(MPAA),Not Rated) | String.IsEqual(Window(1144).Property(MPAA),Rated Not Rated)]">badges/mpaa/NR.png</value>
        <value condition="String.Contains(Window(1144).Property(MPAA),US:R) | String.Contains(Window(1144).Property(MPAA),United States:R) | String.Contains(Window(1144).Property(MPAA),USA:R) | String.IsEqual(Window(1144).Property(MPAA),Rated R) | String.IsEqual(Window(1144).Property(MPAA),R)">badges/mpaa/R.png</value>
        <value condition="String.Contains(Window(1144).Property(MPAA),US:X) | String.Contains(Window(1144).Property(MPAA),United States:X) | String.Contains(Window(1144).Property(MPAA),USA:X) | String.IsEqual(Window(1144).Property(MPAA),Rated X) | String.IsEqual(Window(1144).Property(MPAA),X)">badges/mpaa/X.png</value>
        <value condition="String.Contains(Window(1144).Property(MPAA),US:NC-17) | String.Contains(Window(1144).Property(MPAA),United States:NC-17) | String.Contains(Window(1144).Property(MPAA),USA:NC-17) | String.IsEqual(Window(1144).Property(MPAA),Rated NC-17) | String.IsEqual(Window(1144).Property(MPAA),NC-17)">badges/mpaa/NC-17.png</value>
        <value condition="String.Contains(Window(1144).Property(MPAA),US:PG-13) | String.Contains(Window(1144).Property(MPAA),United States:PG-13) | String.Contains(Window(1144).Property(MPAA),USA:PG-13) | String.IsEqual(Window(1144).Property(MPAA),Rated PG-13) | String.IsEqual(Window(1144).Property(MPAA),PG-13)">badges/mpaa/PG-13.png</value>
        <value condition="String.Contains(Window(1144).Property(MPAA),US:PG) | String.Contains(Window(1144).Property(MPAA),United States:PG) | String.Contains(Window(1144).Property(MPAA),USA:PG) | String.IsEqual(Window(1144).Property(MPAA),Rated PG) | String.IsEqual(Window(1144).Property(MPAA),PG)">badges/mpaa/PG.png</value>
        <value condition="String.Contains(Window(1144).Property(MPAA),US:G) | String.Contains(Window(1144).Property(MPAA),United States:G) | String.Contains(Window(1144).Property(MPAA),USA:G) | String.IsEqual(Window(1144).Property(MPAA),Rated G) | String.IsEqual(Window(1144).Property(MPAA),G) | String.IsEqual(Window(1144).Property(MPAA),Rated Approved) | String.Contains(Window(1144).Property(MPAA),Approved) | String.IsEqual(Window(1144).Property(MPAA),Rated Passed) | String.Contains(Window(1144).Property(MPAA),Passed)">badges/mpaa/G.png</value>
        <value condition="String.Contains(Window(1144).Property(MPAA),US:TV-Y) | String.Contains(Window(1144).Property(MPAA),United States:TV-Y) | String.Contains(Window(1144).Property(MPAA),USA:TV-Y) | String.IsEqual(Window(1144).Property(MPAA),Rated TV-Y) | String.IsEqual(Window(1144).Property(MPAA),TV-Y)">badges/mpaa/TV-Y.png</value>
        <value condition="String.Contains(Window(1144).Property(MPAA),US:TV-Y7) | String.Contains(Window(1144).Property(MPAA),United States:TV-Y7) | String.Contains(Window(1144).Property(MPAA),USA:TV-Y7) | String.IsEqual(Window(1144).Property(MPAA),Rated TV-Y7) | String.IsEqual(Window(1144).Property(MPAA),TV-Y7)">badges/mpaa/TV-Y7.png</value>
        <value condition="String.Contains(Window(1144).Property(MPAA),US:TV-G) | String.Contains(Window(1144).Property(MPAA),United States:TV-G) | String.Contains(Window(1144).Property(MPAA),USA:TV-G) | String.IsEqual(Window(1144).Property(MPAA),Rated TV-G) | String.IsEqual(Window(1144).Property(MPAA),TV-G)">badges/mpaa/TV-G.png</value>
        <value condition="String.Contains(Window(1144).Property(MPAA),US:TV-PG) | String.Contains(Window(1144).Property(MPAA),United States:TV-PG) | String.Contains(Window(1144).Property(MPAA),USA:TV-PG) | String.IsEqual(Window(1144).Property(MPAA),Rated TV-PG) | String.IsEqual(Window(1144).Property(MPAA),TV-PG)">badges/mpaa/TV-PG.png</value>
        <value condition="String.Contains(Window(1144).Property(MPAA),US:TV-14) | String.Contains(Window(1144).Property(MPAA),United States:TV-14) | String.Contains(Window(1144).Property(MPAA),USA:TV-14) | String.IsEqual(Window(1144).Property(MPAA),Rated TV-14) | String.IsEqual(Window(1144).Property(MPAA),TV-14)">badges/mpaa/TV-14.png</value>
        <value condition="String.Contains(Window(1144).Property(MPAA),US:TV-MA) | String.Contains(Window(1144).Property(MPAA),United States:TV-MA) | String.Contains(Window(1144).Property(MPAA),USA:TV-MA) | String.IsEqual(Window(1144).Property(MPAA),Rated TV-MA) | String.IsEqual(Window(1144).Property(MPAA),TV-MA)">badges/mpaa/TV-MA.png</value>
        <value condition="String.Contains(Window(1144).Property(MPAA),UK:U) | String.Contains(Window(1144).Property(MPAA),United Kingdom:U) | String.IsEqual(Window(1144).Property(MPAA),UK:U)">badges/mpaa/UK_BBFC_U.png</value>
        <value condition="String.Contains(Window(1144).Property(MPAA),UK:A) | String.Contains(Window(1144).Property(MPAA),United Kingdom:A) | String.Contains(Window(1144).Property(MPAA),UK:PG) | String.Contains(Window(1144).Property(MPAA),United Kingdom:PG) | String.IsEqual(Window(1144).Property(MPAA),UK:PG)">badges/mpaa/UK_BBFC_PG.png</value>
        <value condition="String.Contains(Window(1144).Property(MPAA),UK:12A) | String.Contains(Window(1144).Property(MPAA),United Kingdom:12A) | String.IsEqual(Window(1144).Property(MPAA),UK:12A)">badges/mpaa/UK_BBFC_12A.png</value>
        <value condition="String.Contains(Window(1144).Property(MPAA),UK:12) | String.Contains(Window(1144).Property(MPAA),United Kingdom:12) | String.IsEqual(Window(1144).Property(MPAA),UK:12)">badges/mpaa/UK_BBFC_12.png</value>
        <value condition="String.Contains(Window(1144).Property(MPAA),UK:15) | String.Contains(Window(1144).Property(MPAA),United Kingdom:15) | String.IsEqual(Window(1144).Property(MPAA),UK:15)">badges/mpaa/UK_BBFC_15.png</value>
        <value condition="String.Contains(Window(1144).Property(MPAA),UK:18) | String.Contains(Window(1144).Property(MPAA),United Kingdom:18) | String.IsEqual(Window(1144).Property(MPAA),UK:18)">badges/mpaa/UK_BBFC_18.png</value>
        <value condition="String.Contains(Window(1144).Property(MPAA),UK:R18) | String.Contains(Window(1144).Property(MPAA),United Kingdom:R18) | String.IsEqual(Window(1144).Property(MPAA),UK:R18)">badges/mpaa/UK_BBFC_R18.png</value>
        <value condition="String.Contains(Window(1144).Property(MPAA),Germany:16) | String.Contains(Window(1144).Property(MPAA),ab 16) | String.Contains(Window(1144).Property(MPAA),FSK 16)">badges/mpaa/Germany_16.png</value>
        <value condition="String.Contains(Window(1144).Property(MPAA),Germany:0) | String.Contains(Window(1144).Property(MPAA),ab 0) | String.Contains(Window(1144).Property(MPAA),FSK 0)">badges/mpaa/Germany_0.png</value>
        <value condition="String.Contains(Window(1144).Property(MPAA),Germany:6) | String.Contains(Window(1144).Property(MPAA),ab 6) | String.Contains(Window(1144).Property(MPAA),FSK 6)">badges/mpaa/Germany_6.png</value>
        <value condition="String.Contains(Window(1144).Property(MPAA),Germany:12) | String.Contains(Window(1144).Property(MPAA),ab 12) | String.Contains(Window(1144).Property(MPAA),FSK 12)">badges/mpaa/Germany_12.png</value>
        <value condition="String.Contains(Window(1144).Property(MPAA),Germany:18) | String.Contains(Window(1144).Property(MPAA),ab 18) | String.Contains(Window(1144).Property(MPAA),FSK 18)">badges/mpaa/Germany_18.png</value>
        <value condition="String.Contains(Window(1144).Property(MPAA),Germany) | String.Contains(Window(1144).Property(MPAA),FSK) | String.Contains(Window(1144).Property(MPAA),o.A)">badges/mpaa/Germany_0.png</value>
        <value condition="String.Contains(Window(1144).Property(MPAA),France:U) | String.Contains(Window(1144).Property(MPAA),Tous publics)">badges/mpaa/France_-10.png</value>
        <value condition="String.Contains(Window(1144).Property(MPAA),France:10) | String.Contains(Window(1144).Property(MPAA),Interdit aux moins de 10 ans)">badges/mpaa/France_-10.png</value>
        <value condition="String.Contains(Window(1144).Property(MPAA),France:12) | String.Contains(Window(1144).Property(MPAA),Interdit aux moins de 12 ans)">badges/mpaa/France_-12.png</value>
        <value condition="String.Contains(Window(1144).Property(MPAA),France:16) | String.Contains(Window(1144).Property(MPAA),Interdit aux moins de 16 ans)">badges/mpaa/France_-16.png</value>
        <value condition="String.Contains(Window(1144).Property(MPAA),France:18) | String.Contains(Window(1144).Property(MPAA),Interdit aux moins de 18 ans)">badges/mpaa/France_-18.png</value>
        <value condition="String.Contains(Window(1144).Property(MPAA),Brazil:L) | String.Contains(Window(1144).Property(MPAA),Brazil:Livre) | String.Contains(Window(1144).Property(MPAA),Livre) | String.IsEqual(Window(1144).Property(MPAA),Brazil:L) | String.IsEqual(Window(1144).Property(MPAA),Brazil:Livre) | String.IsEqual(Window(1144).Property(MPAA),classificação L) | String.IsEqual(Window(1144).Property(MPAA),classificação Livre)">badges/mpaa/Brazil_L.png</value>
        <value condition="String.Contains(Window(1144).Property(MPAA),Brazil:10) | String.Contains(Window(1144).Property(MPAA),10 anos) | String.IsEqual(Window(1144).Property(MPAA),Brazil:10) | String.IsEqual(Window(1144).Property(MPAA),classificação 10)">badges/mpaa/Brazil_10.png</value>
        <value condition="String.Contains(Window(1144).Property(MPAA),Brazil:12) | String.Contains(Window(1144).Property(MPAA),12 anos) | String.IsEqual(Window(1144).Property(MPAA),Brazil:12) | String.IsEqual(Window(1144).Property(MPAA),classificação 12)">badges/mpaa/Brazil_12.png</value>
        <value condition="String.Contains(Window(1144).Property(MPAA),Brazil:14) | String.Contains(Window(1144).Property(MPAA),14 anos) | String.IsEqual(Window(1144).Property(MPAA),Brazil:14) | String.IsEqual(Window(1144).Property(MPAA),classificação 14)">badges/mpaa/Brazil_14.png</value>
        <value condition="String.Contains(Window(1144).Property(MPAA),Brazil:16) | String.Contains(Window(1144).Property(MPAA),16 anos) | String.IsEqual(Window(1144).Property(MPAA),Brazil:16) | String.IsEqual(Window(1144).Property(MPAA),classificação 16)">badges/mpaa/Brazil_16.png</value>
        <value condition="String.Contains(Window(1144).Property(MPAA),Brazil:18) | String.Contains(Window(1144).Property(MPAA),18 anos) | String.IsEqual(Window(1144).Property(MPAA),Brazil:18) | String.IsEqual(Window(1144).Property(MPAA),classificação 18)">badges/mpaa/Brazil_18.png</value>
        <value condition="String.Contains(Window(1144).Property(MPAA),Australia:MA15)">badges/mpaa/australia_MA15.png</value>
        <value condition="String.Contains(Window(1144).Property(MPAA),Australia:R18)">badges/mpaa/australia_R18.png</value>
        <value condition="String.Contains(Window(1144).Property(MPAA),Australia:M)">badges/mpaa/Australia_M.png</value>
        <value condition="String.Contains(Window(1144).Property(MPAA),Australia:PG)">badges/mpaa/Australia_PG.png</value>
        <value condition="String.Contains(Window(1144).Property(MPAA),Australia:G)">badges/mpaa/Australia_G.png</value>
        <value condition="String.Contains(Window(1144).Property(MPAA),Australia:E)">badges/mpaa/Australia_E.png</value>
        <value condition="String.Contains(Window(1144).Property(MPAA),NL-AL) | String.Contains(Window(1144).Property(MPAA),Netherlands:AL)">badges/mpaa/NL_AL.png</value>
        <value condition="String.Contains(Window(1144).Property(MPAA),NL-6) | String.Contains(Window(1144).Property(MPAA),Netherlands:6)">badges/mpaa/NL_6.png</value>
        <value condition="String.Contains(Window(1144).Property(MPAA),NL-9) | String.Contains(Window(1144).Property(MPAA),Netherlands:9)">badges/mpaa/NL_9.png</value>
        <value condition="String.Contains(Window(1144).Property(MPAA),NL-12) | String.Contains(Window(1144).Property(MPAA),Netherlands:12)">badges/mpaa/NL_12.png</value>
        <value condition="String.Contains(Window(1144).Property(MPAA),NL-16) | String.Contains(Window(1144).Property(MPAA),Netherlands:16)">badges/mpaa/NL_16.png</value>
        <value condition="String.Contains(Window(1144).Property(MPAA),NL-18) | String.Contains(Window(1144).Property(MPAA),Netherlands:18)">badges/mpaa/NL_18.png</value>
        <value>$INFO[Window(1144).Property(MPAA),badges/mpaa,.png]</value>
	</variable>	
	
	<!-- TV Show studio icon -->
    <variable name="ShelfPopupStudios">
        <value condition="!String.IsEmpty(Skin.String(studiosResource.path)) + String.Contains(Skin.String(studiosResource.path),coloured)">resource://resource.images.studios.coloured/$INFO[Window(1144).Property(Studio),,.png]</value>
        <value condition="!String.IsEmpty(Skin.String(studiosResource.path)) + String.Contains(Skin.String(studiosResource.path),white)">resource://resource.images.studios.white/$INFO[Window(1144).Property(Studio),,.png]</value>
        <value>DefaultStudios.png</value>
    </variable>
	
	<variable name="ShelfPopupSeasonEpisodeLabel">
        <value condition="Integer.IsLess(Window(1144).Property(Episode),10) + Integer.IsLess(Window(1144).Property(Season),10)">$INFO[Window(1144).Property(Season),s0,]$INFO[Window(1144).Property(Episode),e0,]</value>
        <value condition="Integer.IsLess(Window(1144).Property(Episode),10) + !Integer.IsLess(Window(1144).Property(Season),10)">$INFO[Window(1144).Property(Season),s,]$INFO[Window(1144).Property(Episode),e0,]</value>
        <value condition="!Integer.IsLess(Window(1144).Property(Episode),10) + Integer.IsLess(Window(1144).Property(Season),10)">$INFO[Window(1144).Property(Season),s0,]$INFO[Window(1144).Property(Episode),e,]</value>
        <value condition="!Integer.IsLess(Window(1144).Property(Episode),10) + !Integer.IsLess(Window(1144).Property(Season),10)">$INFO[Window(1144).Property(Season),s,]$INFO[Window(1144).Property(Episode),e,]</value>
    </variable>
	
	<variable name="ShelfPopupDetails">
	    <value condition="!String.IsEmpty(Window(1144).Property(Top250)) + !Skin.HasSetting(Enable.HourMinutes)">[COLOR=$VAR[HighlightColor]]$LOCALIZE[31037]: [/COLOR]$INFO[Window(1144).Property(Rating)] / [COLOR=$VAR[HighlightColor]]$LOCALIZE[13409] # [/COLOR]$INFO[Window(1144).Property(Top250)]  [COLOR=$VAR[HighlightColor]]$LOCALIZE[345]: [/COLOR]$INFO[Window(1144).Property(Year)]  [COLOR=$VAR[HighlightColor]]$LOCALIZE[2050]: [/COLOR]$INFO[Window(Home).Property(WidgetItemDurationMins),, $LOCALIZE[12391]]</value>
		<value condition="!String.IsEmpty(Window(1144).Property(Top250)) + Skin.HasSetting(Enable.HourMinutes)">[COLOR=$VAR[HighlightColor]]$LOCALIZE[31037]: [/COLOR]$INFO[Window(1144).Property(Rating)] / [COLOR=$VAR[HighlightColor]]$LOCALIZE[13409] # [/COLOR]$INFO[Window(1144).Property(Top250)]  [COLOR=$VAR[HighlightColor]]$LOCALIZE[345]: [/COLOR]$INFO[Window(1144).Property(Year)]  [COLOR=$VAR[HighlightColor]]$LOCALIZE[2050]: [/COLOR]$VAR[WidgetItemDurationVar]</value>
		<value condition="String.IsEmpty(Window(1144).Property(Top250)) + !Skin.HasSetting(Enable.HourMinutes)">[COLOR=$VAR[HighlightColor]]$LOCALIZE[31037]: [/COLOR]$INFO[Window(1144).Property(Rating)]  [COLOR=$VAR[HighlightColor]]$LOCALIZE[345]: [/COLOR]$INFO[Window(1144).Property(Year)]  [COLOR=$VAR[HighlightColor]]$LOCALIZE[2050]: [/COLOR]$INFO[Window(Home).Property(WidgetItemDurationMins),, $LOCALIZE[12391]]</value>
		<value condition="String.IsEmpty(Window(1144).Property(Top250)) + Skin.HasSetting(Enable.HourMinutes)">[COLOR=$VAR[HighlightColor]]$LOCALIZE[31037]: [/COLOR]$INFO[Window(1144).Property(Rating)]  [COLOR=$VAR[HighlightColor]]$LOCALIZE[345]: [/COLOR]$INFO[Window(1144).Property(Year)]  [COLOR=$VAR[HighlightColor]]$LOCALIZE[2050]: [/COLOR]$VAR[WidgetItemDurationVar]</value>
	</variable>
	
	<variable name="ShelfPopupDetailsEpisodes">
	    <value condition="!String.IsEmpty(Window(1144).Property(Rating)) + !Skin.HasSetting(Enable.HourMinutes)">[COLOR=$VAR[HighlightColor]]$LOCALIZE[31037]: [/COLOR]$INFO[Window(1144).Property(Rating)]  [COLOR=$VAR[HighlightColor]]$LOCALIZE[20416]: [/COLOR]$INFO[Window(1144).Property(Premiered)]  [COLOR=$VAR[HighlightColor]]$LOCALIZE[2050]: [/COLOR]$INFO[Window(Home).Property(WidgetItemDurationMins),, $LOCALIZE[12391]]</value>
		<value condition="!String.IsEmpty(Window(1144).Property(Rating)) + Skin.HasSetting(Enable.HourMinutes)">[COLOR=$VAR[HighlightColor]]$LOCALIZE[31037]: [/COLOR]$INFO[Window(1144).Property(Rating)]  [COLOR=$VAR[HighlightColor]]$LOCALIZE[20416]: [/COLOR]$INFO[Window(1144).Property(Premiered)]  [COLOR=$VAR[HighlightColor]]$LOCALIZE[2050]: [/COLOR]$VAR[WidgetItemDurationVar]</value>
		<value condition="String.IsEmpty(Window(1144).Property(Rating)) + !Skin.HasSetting(Enable.HourMinutes)">[COLOR=$VAR[HighlightColor]]$LOCALIZE[20416]: [/COLOR]$INFO[Window(1144).Property(Premiered)]  [COLOR=$VAR[HighlightColor]]$LOCALIZE[2050]: [/COLOR]$INFO[Window(Home).Property(WidgetItemDurationMins),, $LOCALIZE[12391]]</value>
		<value condition="String.IsEmpty(Window(1144).Property(Rating)) + Skin.HasSetting(Enable.HourMinutes)">[COLOR=$VAR[HighlightColor]]$LOCALIZE[20416]: [/COLOR]$INFO[Window(1144).Property(Premiered)]  [COLOR=$VAR[HighlightColor]]$LOCALIZE[2050]: [/COLOR]$VAR[WidgetItemDurationVar]</value>
	</variable>
	
	<variable name="ShelfPopupSeasonsLabel">
		<value condition="String.IsEqual(Window(1144).Property(TotalSeasons),1)">$LOCALIZE[20373]</value>
		<value>$LOCALIZE[33054]</value>
	</variable>
	<variable name="ShelfPopupEpisodesLabel">
		<value condition="String.IsEqual(Window(1144).Property(TotalEpisodes),1)">$LOCALIZE[20359]</value>
		<value>$LOCALIZE[20360]</value>
	</variable>
	
	<variable name="PopupVideoResolutionFlagVar">
		<value>$VAR[MediaFlagsPathVar]/videoresolution/$INFO[Window(1144).Property(VideoResolution),,.png]</value>
	</variable>
	
	<variable name="PopupVideoCodecFlagVar">
		<value condition="[String.Contains(Window(1144).Property(FileNameAndPath),pdtv) | String.Contains(Window(1144).Property(FileNameAndPath),sdtv) | String.Contains(Window(1144).Property(FileNameAndPath),sd-tv)]">$VAR[MediaFlagsPathVar]/videocodec/sdtv.png</value>
		<value condition="[String.Contains(Window(1144).Property(FileNameAndPath),hdtv) | String.Contains(Window(1144).Property(FileNameAndPath),hd-tv) | String.Contains(Window(1144).Property(FileNameAndPath),dsr)]">$VAR[MediaFlagsPathVar]/videocodec/hdtv.png</value>
		<value condition="[String.Contains(Window(1144).Property(FileNameAndPath),hddvd) | String.Contains(Window(1144).Property(FileNameAndPath),hd-dvd)]">$VAR[MediaFlagsPathVar]/videocodec/hddvd.png</value>
		<value condition="[String.Contains(Window(1144).Property(FileNameAndPath),blu-ray) | String.Contains(Window(1144).Property(FileNameAndPath),bluray) | String.Contains(Window(1144).Property(FileNameAndPath),bdrip) | String.Contains(Window(1144).Property(FileNameAndPath),brrip) | String.Contains(Window(1144).Property(FileNameAndPath),bd25) | String.Contains(Window(1144).Property(FileNameAndPath),bd50) | String.IsEqual(Window(1144).Property(FileExtension),bdmv)]">$VAR[MediaFlagsPathVar]/videocodec/bluray.png</value>
		<value condition="String.Contains(Window(1144).Property(FileNameAndPath),web-dl) | String.Contains(Window(1144).Property(FileNameAndPath),webdl) | String.Contains(Window(1144).Property(FileNameAndPath),webrip) | String.EndsWith(Window(1144).Property(FileNameAndPath),.strm)">$VAR[MediaFlagsPathVar]/videocodec/webdl.png</value>
		<value condition="String.Contains(Window(1144).Property(FilenameAndPath),dvd) | String.IsEqual(Window(1144).Property(FileExtension),iso) | String.IsEqual(Window(1144).Property(FileExtension),ifo)">$VAR[MediaFlagsPathVar]/videocodec/dvd.png</value>
		<value>$VAR[MediaFlagsPathVar]/videocodec/$INFO[Window(1144).Property(VideoCodec),,.png]</value>
	</variable>
	
	<variable name="PopupAudioCodecFlagVar">
		<value condition="[String.Contains(Window(1144).Property(FileNameAndPath),atmos)  | String.Contains(Window(1144).Property(AudioCodec),atmos)]">$VAR[MediaFlagsPathVar]/audiocodec/atmos.png</value>
		<value condition="String.Contains(Window(1144).Property(FileNameAndPath),dtsx) | String.Contains(Window(1144).Property(FileNameAndPath),dts-x)">$VAR[MediaFlagsPathVar]/audiocodec/dtsx.png</value>
		<value condition="String.Contains(Window(1144).Property(AudioCodec),aac)">$VAR[MediaFlagsPathVar]/audiocodec/aac.png</value>
		<value condition="[String.Contains(Window(1144).Property(AudioCodec),ac3) | String.Contains(Window(1144).Property(AudioCodec),ac-3) | String.Contains(Window(1144).Property(AudioCodec),a-c-3)]">$VAR[MediaFlagsPathVar]/audiocodec/ac3.png</value>
		<value>$VAR[MediaFlagsPathVar]/audiocodec/$INFO[Window(1144).Property(AudioCodec),,.png]</value>
	</variable>
	
	<variable name="PopupHDRFlagVar">
		<value condition="String.Contains(Window(1144).Property(FileNameAndPath),hdr) | String.Contains(Window(1144).Property(FileNameAndPath),HDR)">$VAR[MediaFlagsPathVar]/colorrange/hdr.png</value>
		<value condition="String.Contains(Window(1144).Property(FileNameAndPath),sdr) | String.Contains(Window(1144).Property(FileNameAndPath),SDR)">$VAR[MediaFlagsPathVar]/colorrange/sdr.png</value>
		<value></value>
	</variable>
	
	<variable name="PopupBitDepthFlagVar">
		<value condition="String.Contains(Window(1144).Property(FileNameAndPath),8bit) | String.Contains(Window(1144).Property(FileNameAndPath),8-bit)">$VAR[MediaFlagsPathVar]/colorrange/8bit.png</value>
		<value condition="String.Contains(Window(1144).Property(FileNameAndPath),10bit) | String.Contains(Window(1144).Property(FileNameAndPath),10-bit)">$VAR[MediaFlagsPathVar]/colorrange/10bit.png</value>
		<value condition="String.Contains(Window(1144).Property(FileNameAndPath),12bit) | String.Contains(Window(1144).Property(FileNameAndPath),12-bit)">$VAR[MediaFlagsPathVar]/colorrange/12bit.png</value>
		<value></value>
	</variable>
	
	<include name="PopupLeftHorizontal">
	    <left>277</left>
	</include>
	
	<include name="PopupLeftVertical">
	    <left>397</left>
	</include>
	
	<include name="ShelfPopup1">
	    <visible>System.IdleTime(1)</visible>
	</include>
	
	<include name="ShelfPopup2">
	    <visible>System.IdleTime(2)</visible>
	</include>
	
	<include name="ShelfPopup3">
	    <visible>System.IdleTime(3)</visible>
	</include>
	
	<include name="ShelfPopup4">
	    <visible>System.IdleTime(4)</visible>
	</include>
	
	<include name="ShelfPopup5">
	    <visible>System.IdleTime(5)</visible>
	</include>
	
	<include name="ShelfPopup6">
	    <visible>System.IdleTime(6)</visible>
	</include>
	
	<include name="PopupMediaFlagItems">
		<param name="itemwidth" default="90"/>
		<param name="itemheight" default="80"/>
		<param name="diffuse">Silver</param>
		<definition>
			<control type="image">
				<visible>!String.IsEmpty(Window(1144).Property(VideoResolution))</visible>
				<visible>!Skin.HasSetting(coloredflags)</visible>
				<height>$PARAM[itemheight]</height>
				<width>$PARAM[itemwidth]</width>
				<bordersize>3</bordersize>
				<aspectratio>keep</aspectratio>
				<colordiffuse>$PARAM[diffuse]</colordiffuse>
				<texture align="left">$VAR[PopupVideoResolutionFlagVar]</texture>
			</control>
			<control type="image">
				<visible>!String.IsEmpty(Window(1144).Property(VideoResolution))</visible>
				<visible>Skin.HasSetting(coloredflags)</visible>
				<height>$PARAM[itemheight]</height>
				<width>$PARAM[itemwidth]</width>
				<left>-25</left>
				<bordersize>3</bordersize>
				<aspectratio>keep</aspectratio>
				<colordiffuse>$PARAM[diffuse]</colordiffuse>
				<texture align="left">$VAR[PopupVideoResolutionFlagVar]</texture>
			</control>
			<control type="image">
				<visible>!String.IsEmpty(Window(1144).Property(VideoCodec))</visible>
				<height>$PARAM[itemheight]</height>
				<width>$PARAM[itemwidth]</width>
				<bordersize>3</bordersize>
				<aspectratio>keep</aspectratio>
				<colordiffuse>$PARAM[diffuse]</colordiffuse>
				<texture>$VAR[PopupVideoCodecFlagVar]</texture>
			</control>
			<control type="image">
				<visible>!String.IsEmpty(Window(1144).Property(VideoAspect))</visible>
				<height>$PARAM[itemheight]</height>
				<width>$PARAM[itemwidth]</width>
				<bordersize>3</bordersize>
				<aspectratio>keep</aspectratio>
				<colordiffuse>$PARAM[diffuse]</colordiffuse>
				<texture>$VAR[MediaFlagsPathVar]/aspectratio/$INFO[Window(1144).Property(VideoAspect),,.png]</texture>
			</control>
			<control type="image">
				<visible>Window(1144).Property(IsStereoscopic)</visible>
				<height>$PARAM[itemheight]</height>
				<width>$PARAM[itemwidth]</width>
				<bordersize>3</bordersize>
				<aspectratio>keep</aspectratio>
				<colordiffuse>$PARAM[diffuse]</colordiffuse>
				<texture>badges/3D.png</texture>
			</control> 
            <control type="image">
				<visible>!String.IsEmpty(Window(1144).Property(VideoResolution))</visible>
				<visible>Skin.HasSetting(Show.ColorRangeFlags) + [String.Contains(Window(1144).Property(FileNameAndPath),hdr) | String.Contains(Window(1144).Property(FileNameAndPath),sdr)]</visible>
				<height>$PARAM[itemheight]</height>
				<width>$PARAM[itemwidth]</width>
				<bordersize>3</bordersize>
				<aspectratio>keep</aspectratio>
				<colordiffuse>$PARAM[diffuse]</colordiffuse>
				<texture>$VAR[PopupHDRFlagVar]</texture>
			</control>
			<control type="image">
				<visible>!String.IsEmpty(Window(1144).Property(VideoResolution))</visible>
				<visible>Skin.HasSetting(Show.ColorRangeFlags) + 
				         [[String.Contains(Window(1144).Property(FileNameAndPath),8bit) | String.Contains(Window(1144).Property(FileNameAndPath),8-bit)] | 
						  [String.Contains(Window(1144).Property(FileNameAndPath),10bit) | String.Contains(Window(1144).Property(FileNameAndPath),10-bit)] | 
						  [String.Contains(Window(1144).Property(FileNameAndPath),12bit) | String.Contains(Window(1144).Property(FileNameAndPath),12-bit)]]</visible>
				<height>$PARAM[itemheight]</height>
				<width>$PARAM[itemwidth]</width>
				<bordersize>3</bordersize>
				<aspectratio>keep</aspectratio>
				<colordiffuse>$PARAM[diffuse]</colordiffuse>
				<texture>$VAR[PopupBitDepthFlagVar]</texture>
			</control>		
			<control type="image">
				<visible>!String.IsEmpty(Window(1144).Property(AudioCodec))</visible>
				<height>$PARAM[itemheight]</height>
				<width>$PARAM[itemwidth]</width>
				<bordersize>3</bordersize>
				<aspectratio>keep</aspectratio>
				<colordiffuse>$PARAM[diffuse]</colordiffuse>
				<texture>$VAR[PopupAudioCodecFlagVar]</texture>
			</control>
			<control type="image">
				<visible>!String.IsEmpty(Window(1144).Property(FileExtension)) + String.IsEqual(Window(1144).Property(DBType),song)</visible>
				<height>$PARAM[itemheight]</height>
				<width>$PARAM[itemwidth]</width>
				<bordersize>3</bordersize>
				<aspectratio>keep</aspectratio>
				<colordiffuse>$PARAM[diffuse]</colordiffuse>
				<texture>$VAR[MediaFlagsPathVar]/audiocodec/$INFO[Window(1144).Property(FileExtension),,.png]</texture>
			</control>
			<control type="image">
				<visible>!String.IsEmpty(Window(1144).Property(AudioChannels)) + !String.IsEqual(Window(1144).Property(DBType),song)</visible>
				<height>$PARAM[itemheight]</height>
				<width>$PARAM[itemwidth]</width>
				<bordersize>3</bordersize>
				<aspectratio>keep</aspectratio>
				<colordiffuse>$PARAM[diffuse]</colordiffuse>
				<texture>$VAR[MediaFlagsPathVar]/audiochannels/channels$INFO[Window(1144).Property(AudioChannels),,.png]</texture>
			</control>
			<control type="image">
				<visible>!String.IsEmpty(Window(1144).Property(MusicChannels)) + String.IsEqual(Window(1144).Property(DBType),song)</visible>
				<height>$PARAM[itemheight]</height>
				<width>$PARAM[itemwidth]</width>
				<bordersize>3</bordersize>
				<aspectratio>keep</aspectratio>
				<colordiffuse>$PARAM[diffuse]</colordiffuse>
				<texture>$VAR[MediaFlagsPathVar]/audiochannels/channels$INFO[Window(1144).Property(MusicChannels),,.png]</texture>
			</control>
		</definition>
	</include>
	
	
	<include name="SetShelfItemDuration">
	    <control type="button">
			<include>HiddenButton</include>
			<onfocus>SetProperty(WidgetItemDuration,$INFO[ListItem.Duration],Home)</onfocus>
	        <onfocus>SetProperty(WidgetItemDurationHr,$INFO[ListItem.Duration(h)],Home)</onfocus>
	        <onfocus>SetProperty(WidgetItemDurationMin,$INFO[ListItem.Duration(m)],Home)</onfocus>
	        <onfocus>SetProperty(WidgetItemDurationMins,$INFO[ListItem.Duration(mins)],Home)</onfocus>
	        <onfocus>SetProperty(WidgetItemDurationSec,$INFO[ListItem.Duration(ss)],Home)</onfocus>
		</control>	
	</include>
	
	<include name="ClearPopupProps">
        <onfocus>ClearProperty(DBType,1144)</onfocus>
        <onfocus>ClearProperty(Title,1144)</onfocus>
	    <onfocus>ClearProperty(Label,1144)</onfocus>
	    <onfocus>ClearProperty(TVShowTitle,1144)</onfocus>
        <onfocus>ClearProperty(Director,1144)</onfocus>
        <onfocus>ClearProperty(Year,1144)</onfocus>
        <onfocus>ClearProperty(Rating,1144)</onfocus>
	    <onfocus>ClearProperty(MPAA,1144)</onfocus>
	    <onfocus>ClearProperty(Genre,1144)</onfocus>
	    <onfocus>ClearProperty(Top250,144)</onfocus>
	    <onfocus>ClearProperty(Premiered,1144)</onfocus>
	    <onfocus>ClearProperty(Plot,1144)</onfocus>
        <onfocus>ClearProperty(Studio,1144)</onfocus>
        <onfocus>ClearProperty(Season,1144)</onfocus>
	    <onfocus>ClearProperty(Episode,1144)</onfocus>
		<onfocus>ClearProperty(FileNameAndPath,1144)</onfocus>
		<onfocus>ClearProperty(FileExtension,1144)</onfocus>
		<onfocus>ClearProperty(VideoAspect,1144)</onfocus>
		<onfocus>ClearProperty(VideoCodec,1144)</onfocus>
		<onfocus>ClearProperty(VideoResolution,1144)</onfocus>
		<onfocus>ClearProperty(IsStereoscopic,1144)</onfocus>
		<onfocus>ClearProperty(AudioCodec,1144)</onfocus>
		<onfocus>ClearProperty(AudioChannels,1144)</onfocus>
		<onfocus>ClearProperty(MusicChannels,1144)</onfocus>
	    <onfocus>ClearProperty(TotalSeasons,1144)</onfocus>
	    <onfocus>ClearProperty(TotalEpisodes,1144)</onfocus>
	    <onfocus>ClearProperty(UnwatchedEpisodes,1144)</onfocus>
        <onfocus>ClearProperty(Art.ClearLogo,1144)</onfocus>
	    <onfocus>ClearProperty(Art.tvshow.clearlogo,1144)</onfocus>
	    <onfocus>ClearProperty(Art.tvshow.poster,1144)</onfocus>
	    <onfocus>ClearProperty(Art.season.poster,1144)</onfocus>
        <onfocus>ClearProperty(Art.Poster,1144)</onfocus>
		<onfocus>ClearProperty(Art.Thumb,1144)</onfocus>
		<onfocus>ClearProperty(Icon,1144)</onfocus>
		<onfocus>ClearProperty(Art.artist.clearlogo,1144)</onfocus>
		<onfocus>ClearProperty(Art.albumartist.clearlogo,1144)</onfocus>
		<onfocus>ClearProperty(Artist,1144)</onfocus>
		<onfocus>ClearProperty(Album,1144)</onfocus>
		<onfocus>ClearProperty(Comment,1144)</onfocus>
		<onfocus>ClearProperty(TrackNumber,1144)</onfocus>
		<onfocus>ClearProperty(Artist_Formed,1144)</onfocus>
		<onfocus>ClearProperty(Artist_YearsActive,1144)</onfocus>
		<onfocus>ClearProperty(Artist_Genre,1144)</onfocus>
		<onfocus>ClearProperty(Artist_Style,1144)</onfocus>
		<onfocus>ClearProperty(Artist_Mood,1144)</onfocus>
		<onfocus>ClearProperty(Artist_Description,1144)</onfocus>
		<onfocus>ClearProperty(Album_Description,1144)</onfocus>
		<onfocus>ClearProperty(Album_Label,1144)</onfocus>
		<onfocus>ClearProperty(Album_Style,1144)</onfocus>
		<onfocus>ClearProperty(Album_Mood,1144)</onfocus>
		<onfocus>ClearProperty(ShelfDelay,1144)</onfocus>
	</include>
	
	<include name="SetShelfPopupProps">
	    <param name="EnableProp">false</param>
		<param name="ShelfDelay">3</param>
		<definition>
	        <control type="button">
			    <include>HiddenButton</include>
		        <include>ClearPopupProps</include>
				<onfocus>SetProperty(DBType,"$INFO[ListItem.DBType]",1144)</onfocus>
                <onfocus>SetProperty(Title,"$INFO[ListItem.Title]",1144)</onfocus>
			    <onfocus>SetProperty(Label,"$INFO[ListItem.Label]",1144)</onfocus>
			    <onfocus>SetProperty(TVShowTitle,"$INFO[ListItem.TVShowTitle]",1144)</onfocus>
                <onfocus>SetProperty(Director,"$INFO[ListItem.Director]",1144)</onfocus>
                <onfocus>SetProperty(Year,"$INFO[ListItem.Year]",1144)</onfocus>
                <onfocus>SetProperty(Rating,"$INFO[ListItem.Rating]",1144)</onfocus>
			    <onfocus>SetProperty(MPAA,"$INFO[ListItem.MPAA]",1144)</onfocus>
			    <onfocus>SetProperty(Genre,"$INFO[ListItem.Genre]",1144)</onfocus>
			    <onfocus>SetProperty(Top250,"$INFO[ListItem.Top250]",1144)</onfocus>
			    <onfocus>SetProperty(Premiered,"$INFO[ListItem.Premiered]",1144)</onfocus>
			    <onfocus>SetProperty(Plot,"$INFO[ListItem.Plot]",1144)</onfocus>
                <onfocus>SetProperty(Studio,"$INFO[ListItem.Studio]",1144)</onfocus>
                <onfocus>SetProperty(Season,"$INFO[ListItem.Season]",1144)</onfocus>
			    <onfocus>SetProperty(Episode,"$INFO[ListItem.Episode]",1144)</onfocus>
				<onfocus>SetProperty(FileNameAndPath,"$INFO[ListItem.FileNameAndPath]",1144)</onfocus>
				<onfocus>SetProperty(FileExtension,"$INFO[ListItem.FileExtension]",1144)</onfocus>
				<onfocus>SetProperty(VideoAspect,"$INFO[ListItem.VideoAspect]",1144)</onfocus>
				<onfocus>SetProperty(VideoCodec,"$INFO[ListItem.VideoCodec]",1144)</onfocus>
				<onfocus>SetProperty(VideoResolution,"$INFO[ListItem.VideoResolution]",1144)</onfocus>
				<onfocus>SetProperty(IsStereoscopic,"$INFO[ListItem.IsStereoscopic]",1144)</onfocus>
				<onfocus>SetProperty(AudioCodec,"$INFO[ListItem.AudioCodec]",1144)</onfocus>
				<onfocus>SetProperty(AudioChannels,"$INFO[ListItem.AudioChannels]",1144)</onfocus>
				<onfocus>SetProperty(MusicChannels,"$INFO[ListItem.MusicChannels]",1144)</onfocus>
			    <onfocus>SetProperty(TotalSeasons,"$INFO[ListItem.Property(TotalSeasons)]",1144)</onfocus>
			    <onfocus>SetProperty(TotalEpisodes,"$INFO[ListItem.Property(TotalEpisodes)]",1144)</onfocus>
			    <onfocus>SetProperty(UnwatchedEpisodes,"$INFO[ListItem.Property(UnwatchedEpisodes)]",1144)</onfocus>
                <onfocus>SetProperty(Art.ClearLogo,"$INFO[ListItem.Art(clearlogo)]",1144)</onfocus>
			    <onfocus>SetProperty(Art.tvshow.clearlogo,"$INFO[ListItem.Art(tvshow.clearlogo)]",1144)</onfocus>
			    <onfocus>SetProperty(Art.tvshow.poster,"$INFO[ListItem.Art(tvshow.poster)]",1144)</onfocus>
			    <onfocus>SetProperty(Art.season.poster,"$INFO[ListItem.Art(season.poster)]",1144)</onfocus>
                <onfocus>SetProperty(Art.Poster,"$INFO[ListItem.Art(poster)]",1144)</onfocus>
				<onfocus>SetProperty(Art.Thumb,"$INFO[ListItem.Art(thumb)]",1144)</onfocus>
				<onfocus>SetProperty(Icon,"$INFO[ListItem.Icon]",1144)</onfocus>
				<onfocus>SetProperty(Art.artist.clearlogo,"$INFO[ListItem.Art(artist.clearlogo)]",1144)</onfocus>
				<onfocus>SetProperty(Art.albumartist.clearlogo,"$INFO[ListItem.Art(albumartist.clearlogo)]",1144)</onfocus>
				<onfocus>SetProperty(Artist,"$INFO[ListItem.Artist]",1144)</onfocus>
				<onfocus>SetProperty(Album,"$INFO[ListItem.Album]",1144)</onfocus>
				<onfocus>SetProperty(Comment,"$INFO[ListItem.Comment]",1144)</onfocus>
				<onfocus>SetProperty(TrackNumber,"$INFO[ListItem.TrackNumber]",1144)</onfocus>
				<onfocus>SetProperty(Artist_Formed,"$INFO[ListItem.Property(Artist_Formed)]",1144)</onfocus>
				<onfocus>SetProperty(Artist_YearsActive,"$INFO[ListItem.Property(Artist_YearsActive)]",1144)</onfocus>
				<onfocus>SetProperty(Artist_Genre,"$INFO[ListItem.Property(Artist_Genre)]",1144)</onfocus>
				<onfocus>SetProperty(Artist_Style,"$INFO[ListItem.Property(Artist_Style)]",1144)</onfocus>
				<onfocus>SetProperty(Artist_Mood,"$INFO[ListItem.Property(Artist_Mood)]",1144)</onfocus>
				<onfocus>SetProperty(Artist_Description,"$INFO[ListItem.Property(Artist_Description)]",1144)</onfocus>
				<onfocus>SetProperty(Album_Description,"$INFO[ListItem.Property(Album_Description)]",1144)</onfocus>
				<onfocus>SetProperty(Album_Label,"$INFO[ListItem.Property(Album_Label)]",1144)</onfocus>
				<onfocus>SetProperty(Album_Style,"$INFO[ListItem.Property(Album_Style)]",1144)</onfocus>
				<onfocus>SetProperty(Album_Mood,"$INFO[ListItem.Property(Album_Mood)]",1144)</onfocus>
			    <onfocus condition="$PARAM[EnableProp]">SetProperty(ShowWidgetPopup,True,Home)</onfocus>
				<onfocus>SetProperty(ShelfPopupDelay,"$PARAM[ShelfDelay]",1144)</onfocus>
		    </control>
		</definition>	
	</include>
	
</includes>	