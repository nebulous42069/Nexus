<?xml version="1.0" encoding="utf-8"?>
<includes>
	
	<variable name="RightListRottenFreshLogoVar">
        <value condition="Integer.IsGreaterOrEqual(Container(4460).ListItem.Rating(tomatometerallcritics),8.0)">badges/ratings/certified2.png</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallcritics),7.9)">badges/ratings/certified2.png</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallcritics),7.8)">badges/ratings/certified2.png</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallcritics),7.7)">badges/ratings/certified2.png</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallcritics),7.6)">badges/ratings/certified2.png</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallcritics),7.5)">badges/ratings/certified2.png</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallcritics),7.4)">badges/ratings/fresh2.png</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallcritics),7.3)">badges/ratings/fresh2.png</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallcritics),7.2)">badges/ratings/fresh2.png</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallcritics),7.1)">badges/ratings/fresh2.png</value>
        <value condition="Integer.IsLess(Container(4460).ListItem.Rating(tomatometerallcritics),6.0)">badges/ratings/rotten2.png</value>
        <value>badges/ratings/fresh2.png</value>
    </variable>

    <!-- The amount of conditions is necessary to be able to display as percent -->
    <variable name="RightListRottenFreshLabelVar">
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallcritics),0.0)">0</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallcritics),0.1)">1</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallcritics),0.2)">2</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallcritics),0.3)">3</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallcritics),0.4)">4</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallcritics),0.5)">5</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallcritics),0.6)">6</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallcritics),0.7)">7</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallcritics),0.8)">8</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallcritics),0.9)">9</value>        
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallcritics),1.0)">10</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallcritics),1.1)">11</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallcritics),1.2)">12</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallcritics),1.3)">13</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallcritics),1.4)">14</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallcritics),1.5)">15</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallcritics),1.6)">16</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallcritics),1.7)">17</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallcritics),1.8)">18</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallcritics),1.9)">19</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallcritics),2.0)">20</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallcritics),2.1)">21</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallcritics),2.2)">22</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallcritics),2.3)">23</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallcritics),2.4)">24</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallcritics),2.5)">25</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallcritics),2.6)">26</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallcritics),2.7)">27</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallcritics),2.8)">28</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallcritics),2.9)">29</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallcritics),3.0)">30</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallcritics),3.1)">31</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallcritics),3.2)">32</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallcritics),3.3)">33</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallcritics),3.4)">34</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallcritics),3.5)">35</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallcritics),3.6)">36</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallcritics),3.7)">37</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallcritics),3.8)">38</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallcritics),3.9)">39</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallcritics),4.0)">40</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallcritics),4.1)">41</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallcritics),4.2)">42</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallcritics),4.3)">43</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallcritics),4.4)">44</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallcritics),4.5)">45</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallcritics),4.6)">46</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallcritics),4.7)">47</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallcritics),4.8)">48</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallcritics),4.9)">49</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallcritics),5.0)">50</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallcritics),5.1)">51</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallcritics),5.2)">52</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallcritics),5.3)">53</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallcritics),5.4)">54</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallcritics),5.5)">55</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallcritics),5.6)">56</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallcritics),5.7)">57</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallcritics),5.8)">58</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallcritics),5.9)">59</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallcritics),6.0)">60</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallcritics),6.1)">61</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallcritics),6.2)">62</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallcritics),6.3)">63</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallcritics),6.4)">64</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallcritics),6.5)">65</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallcritics),6.6)">66</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallcritics),6.7)">67</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallcritics),6.8)">68</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallcritics),6.9)">69</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallcritics),7.0)">70</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallcritics),7.1)">71</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallcritics),7.2)">72</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallcritics),7.3)">73</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallcritics),7.4)">74</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallcritics),7.5)">75</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallcritics),7.6)">76</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallcritics),7.7)">77</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallcritics),7.8)">78</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallcritics),7.9)">79</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallcritics),8.0)">80</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallcritics),8.1)">81</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallcritics),8.2)">82</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallcritics),8.3)">83</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallcritics),8.4)">84</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallcritics),8.5)">85</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallcritics),8.6)">86</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallcritics),8.7)">87</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallcritics),8.8)">88</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallcritics),8.9)">89</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallcritics),9.0)">90</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallcritics),9.1)">91</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallcritics),9.2)">92</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallcritics),9.3)">93</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallcritics),9.4)">94</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallcritics),9.5)">95</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallcritics),9.6)">96</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallcritics),9.7)">97</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallcritics),9.8)">98</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallcritics),9.9)">99</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallcritics),10.0)">100</value>        
    </variable>

    <variable name="RightListRottenFreshAudienceLogoVar">
        <value condition="Integer.IsGreaterOrEqual(Container(4460).ListItem.Rating(tomatometerallaudience),6.0)">badges/ratings/popcorn12.png</value>
        <value>badges/ratings/popcorn22.png</value>
    </variable>
    <!-- Rotten Tomatoes Average Audience Rating Percent Variable-->
    <variable name="RightListRottenFreshAudienceLabelVar">
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallaudience),0.0)">0</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallaudience),0.1)">1</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallaudience),0.2)">2</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallaudience),0.3)">3</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallaudience),0.4)">4</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallaudience),0.5)">5</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallaudience),0.6)">6</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallaudience),0.7)">7</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallaudience),0.8)">8</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallaudience),0.9)">9</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallaudience),1.0)">10</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallaudience),1.1)">11</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallaudience),1.2)">12</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallaudience),1.3)">13</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallaudience),1.4)">14</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallaudience),1.5)">15</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallaudience),1.6)">16</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallaudience),1.7)">17</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallaudience),1.8)">18</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallaudience),1.9)">19</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallaudience),2.0)">20</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallaudience),2.1)">21</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallaudience),2.2)">22</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallaudience),2.3)">23</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallaudience),2.4)">24</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallaudience),2.5)">25</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallaudience),2.6)">26</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallaudience),2.7)">27</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallaudience),2.8)">28</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallaudience),2.9)">29</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallaudience),3.0)">30</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallaudience),3.1)">31</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallaudience),3.2)">32</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallaudience),3.3)">33</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallaudience),3.4)">34</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallaudience),3.5)">35</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallaudience),3.6)">36</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallaudience),3.7)">37</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallaudience),3.8)">38</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallaudience),3.9)">39</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallaudience),4.0)">40</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallaudience),4.1)">41</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallaudience),4.2)">42</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallaudience),4.3)">43</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallaudience),4.4)">44</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallaudience),4.5)">45</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallaudience),4.6)">46</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallaudience),4.7)">47</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallaudience),4.8)">48</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallaudience),4.9)">49</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallaudience),5.0)">50</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallaudience),5.1)">51</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallaudience),5.2)">52</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallaudience),5.3)">53</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallaudience),5.4)">54</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallaudience),5.5)">55</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallaudience),5.6)">56</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallaudience),5.7)">57</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallaudience),5.8)">58</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallaudience),5.9)">59</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallaudience),6.0)">60</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallaudience),6.1)">61</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallaudience),6.2)">62</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallaudience),6.3)">63</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallaudience),6.4)">64</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallaudience),6.5)">65</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallaudience),6.6)">66</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallaudience),6.7)">67</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallaudience),6.8)">68</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallaudience),6.9)">69</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallaudience),7.0)">70</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallaudience),7.1)">71</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallaudience),7.2)">72</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallaudience),7.3)">73</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallaudience),7.4)">74</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallaudience),7.5)">75</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallaudience),7.6)">76</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallaudience),7.7)">77</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallaudience),7.8)">78</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallaudience),7.9)">79</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallaudience),8.0)">80</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallaudience),8.1)">81</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallaudience),8.2)">82</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallaudience),8.3)">83</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallaudience),8.4)">84</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallaudience),8.5)">85</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallaudience),8.6)">86</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallaudience),8.7)">87</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallaudience),8.8)">88</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallaudience),8.9)">89</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallaudience),9.0)">90</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallaudience),9.1)">91</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallaudience),9.2)">92</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallaudience),9.3)">93</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallaudience),9.4)">94</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallaudience),9.5)">95</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallaudience),9.6)">96</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallaudience),9.7)">97</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallaudience),9.8)">98</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallaudience),9.9)">99</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(tomatometerallaudience),10.0)">100</value>
    </variable>    
    <!-- Metacritic Rating Variable-->
    <variable name="RightListMetacriticLabelVar">
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(metacritic),0.0)">0</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(metacritic),0.1)">1</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(metacritic),0.2)">2</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(metacritic),0.3)">3</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(metacritic),0.4)">4</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(metacritic),0.5)">5</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(metacritic),0.6)">6</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(metacritic),0.7)">7</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(metacritic),0.8)">8</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(metacritic),0.9)">9</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(metacritic),1.0)">10</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(metacritic),1.1)">11</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(metacritic),1.2)">12</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(metacritic),1.3)">13</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(metacritic),1.4)">14</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(metacritic),1.5)">15</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(metacritic),1.6)">16</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(metacritic),1.7)">17</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(metacritic),1.8)">18</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(metacritic),1.9)">19</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(metacritic),2.0)">20</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(metacritic),2.1)">21</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(metacritic),2.2)">22</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(metacritic),2.3)">23</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(metacritic),2.4)">24</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(metacritic),2.5)">25</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(metacritic),2.6)">26</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(metacritic),2.7)">27</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(metacritic),2.8)">28</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(metacritic),2.9)">29</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(metacritic),3.0)">30</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(metacritic),3.1)">31</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(metacritic),3.2)">32</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(metacritic),3.3)">33</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(metacritic),3.4)">34</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(metacritic),3.5)">35</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(metacritic),3.6)">36</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(metacritic),3.7)">37</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(metacritic),3.8)">38</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(metacritic),3.9)">39</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(metacritic),4.0)">40</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(metacritic),4.1)">41</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(metacritic),4.2)">42</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(metacritic),4.3)">43</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(metacritic),4.4)">44</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(metacritic),4.5)">45</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(metacritic),4.6)">46</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(metacritic),4.7)">47</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(metacritic),4.8)">48</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(metacritic),4.9)">49</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(metacritic),5.0)">50</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(metacritic),5.1)">51</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(metacritic),5.2)">52</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(metacritic),5.3)">53</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(metacritic),5.4)">54</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(metacritic),5.5)">55</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(metacritic),5.6)">56</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(metacritic),5.7)">57</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(metacritic),5.8)">58</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(metacritic),5.9)">59</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(metacritic),6.0)">60</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(metacritic),6.1)">61</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(metacritic),6.2)">62</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(metacritic),6.3)">63</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(metacritic),6.4)">64</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(metacritic),6.5)">65</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(metacritic),6.6)">66</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(metacritic),6.7)">67</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(metacritic),6.8)">68</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(metacritic),6.9)">69</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(metacritic),7.0)">70</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(metacritic),7.1)">71</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(metacritic),7.2)">72</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(metacritic),7.3)">73</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(metacritic),7.4)">74</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(metacritic),7.5)">75</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(metacritic),7.6)">76</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(metacritic),7.7)">77</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(metacritic),7.8)">78</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(metacritic),7.9)">79</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(metacritic),8.0)">80</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(metacritic),8.1)">81</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(metacritic),8.2)">82</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(metacritic),8.3)">83</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(metacritic),8.4)">84</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(metacritic),8.5)">85</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(metacritic),8.6)">86</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(metacritic),8.7)">87</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(metacritic),8.8)">88</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(metacritic),8.9)">89</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(metacritic),9.0)">90</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(metacritic),9.1)">91</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(metacritic),9.2)">92</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(metacritic),9.3)">93</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(metacritic),9.4)">94</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(metacritic),9.5)">95</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(metacritic),9.6)">96</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(metacritic),9.7)">97</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(metacritic),9.8)">98</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(metacritic),9.9)">99</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(metacritic),10.0)">100</value>
    </variable>
    <!-- TMDB Rating Variable-->
    <variable name="RightListTheMovieDBLabelVar">
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(themoviedb),0.0)">0</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(themoviedb),0.1)">1</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(themoviedb),0.2)">2</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(themoviedb),0.3)">3</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(themoviedb),0.4)">4</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(themoviedb),0.5)">5</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(themoviedb),0.6)">6</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(themoviedb),0.7)">7</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(themoviedb),0.8)">8</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(themoviedb),0.9)">9</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(themoviedb),1.0)">10</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(themoviedb),1.1)">11</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(themoviedb),1.2)">12</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(themoviedb),1.3)">13</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(themoviedb),1.4)">14</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(themoviedb),1.5)">15</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(themoviedb),1.6)">16</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(themoviedb),1.7)">17</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(themoviedb),1.8)">18</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(themoviedb),1.9)">19</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(themoviedb),2.0)">20</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(themoviedb),2.1)">21</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(themoviedb),2.2)">22</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(themoviedb),2.3)">23</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(themoviedb),2.4)">24</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(themoviedb),2.5)">25</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(themoviedb),2.6)">26</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(themoviedb),2.7)">27</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(themoviedb),2.8)">28</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(themoviedb),2.9)">29</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(themoviedb),3.0)">30</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(themoviedb),3.1)">31</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(themoviedb),3.2)">32</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(themoviedb),3.3)">33</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(themoviedb),3.4)">34</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(themoviedb),3.5)">35</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(themoviedb),3.6)">36</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(themoviedb),3.7)">37</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(themoviedb),3.8)">38</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(themoviedb),3.9)">39</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(themoviedb),4.0)">40</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(themoviedb),4.1)">41</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(themoviedb),4.2)">42</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(themoviedb),4.3)">43</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(themoviedb),4.4)">44</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(themoviedb),4.5)">45</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(themoviedb),4.6)">46</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(themoviedb),4.7)">47</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(themoviedb),4.8)">48</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(themoviedb),4.9)">49</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(themoviedb),5.0)">50</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(themoviedb),5.1)">51</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(themoviedb),5.2)">52</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(themoviedb),5.3)">53</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(themoviedb),5.4)">54</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(themoviedb),5.5)">55</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(themoviedb),5.6)">56</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(themoviedb),5.7)">57</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(themoviedb),5.8)">58</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(themoviedb),5.9)">59</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(themoviedb),6.0)">60</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(themoviedb),6.1)">61</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(themoviedb),6.2)">62</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(themoviedb),6.3)">63</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(themoviedb),6.4)">64</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(themoviedb),6.5)">65</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(themoviedb),6.6)">66</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(themoviedb),6.7)">67</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(themoviedb),6.8)">68</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(themoviedb),6.9)">69</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(themoviedb),7.0)">70</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(themoviedb),7.1)">71</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(themoviedb),7.2)">72</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(themoviedb),7.3)">73</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(themoviedb),7.4)">74</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(themoviedb),7.5)">75</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(themoviedb),7.6)">76</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(themoviedb),7.7)">77</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(themoviedb),7.8)">78</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(themoviedb),7.9)">79</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(themoviedb),8.0)">80</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(themoviedb),8.1)">81</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(themoviedb),8.2)">82</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(themoviedb),8.3)">83</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(themoviedb),8.4)">84</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(themoviedb),8.5)">85</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(themoviedb),8.6)">86</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(themoviedb),8.7)">87</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(themoviedb),8.8)">88</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(themoviedb),8.9)">89</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(themoviedb),9.0)">90</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(themoviedb),9.1)">91</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(themoviedb),9.2)">92</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(themoviedb),9.3)">93</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(themoviedb),9.4)">94</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(themoviedb),9.5)">95</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(themoviedb),9.6)">96</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(themoviedb),9.7)">97</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(themoviedb),9.8)">98</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(themoviedb),9.9)">99</value>
        <value condition="String.IsEqual(Container(4460).ListItem.Rating(themoviedb),10.0)">100</value>
    </variable>
	
	<!-- Movie/TV Show studio icon -->
    <variable name="RightListStudios">
        <value condition="!String.IsEmpty(Skin.String(studiosResource.path)) + String.Contains(Skin.String(studiosResource.path),coloured)">resource://resource.images.studios.coloured/$INFO[Listitem.Studio,,.png]</value>
        <value condition="!String.IsEmpty(Skin.String(studiosResource.path)) + String.Contains(Skin.String(studiosResource.path),white)">resource://resource.images.studios.white/$INFO[Listitem.Studio,,.png]</value>
        <value>DefaultStudios.png</value>
    </variable>
    <!-- Set's first movie studio icon -->
    <variable name="RightListStudiosSets">
        <value condition="!String.IsEmpty(Skin.String(studiosResource.path)) + String.Contains(Skin.String(studiosResource.path),coloured)">resource://resource.images.studios.coloured/$INFO[Window(Home).Property(SkinInfo.Set.Movies.Single.Studio),,.png]</value>
        <value condition="!String.IsEmpty(Skin.String(studiosResource.path)) + String.Contains(Skin.String(studiosResource.path),white)">resource://resource.images.studios.white/$INFO[Window(Home).Property(SkinInfo.Set.Movies.Single.Studio),,.png]</value>
        <value>DefaultStudios.png</value>
    </variable>
	
	<variable name="RightListNextAiredStatus">
		<value condition="!String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.Status))">$INFO[Window(Home).Property(TMDbHelper.ListItem.Status)]</value>
		<value condition="Window(Home).Property(NextAired.Status)">$INFO[Window(Home).Property(NextAired.Status)]</value>
	</variable>
	
	<variable name="RightListNextAiredStatusImage">
		<value condition="!String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.Status))">$VAR[MediaFlagsPathVar]/nextaired/$INFO[Window(Home).Property(TMDbHelper.ListItem.Status),,.png]</value>
		<value condition="!String.IsEmpty(Window(Home).Property(NextAired.Status))">$VAR[MediaFlagsPathVar]/nextaired/$INFO[Window(Home).Property(NextAired.Status),,.png]</value>
	</variable>
	
	<variable name="RightListNextEpisode">
		<value condition="!String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.Next_Aired))">$INFO[Window(Home).Property(TMDbHelper.ListItem.Next_Aired.Long)]</value>
		<value condition="!String.IsEmpty(Window(Home).Property(NextAired.Label)) + !String.IsEmpty(Window(Home).Property(NextAired.NextDay))">$INFO[Window(Home).Property(NextAired.NextDay)]</value>
		<value>$LOCALIZE[32404]</value>
	</variable>
	<variable name="RightListLastEpisode">
		<value condition="!String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.Last_Aired))">$INFO[Window(Home).Property(TMDbHelper.ListItem.Last_Aired)]</value>
		<value condition="!String.IsEmpty(Window(Home).Property(NextAired.Label))">$INFO[Window(Home).Property(NextAired.LatestDate)]</value>
		<value>$LOCALIZE[32404]</value>
	</variable>
	
	<variable name="RightListHeadingLabel">
		<value condition="String.IsEmpty(ListItem.Title)">$INFO[ListItem.Label]</value>
		<value>$INFO[ListItem.Title]</value>
	</variable>
	<variable name="RightListSubheadingLabel">
		<value condition="String.Contains(Container.FolderPath,videodb://recentlyaddedepisodes/) + !String.Contains(ListItem.Episode,S)">$INFO[ListItem.TVShowTitle]$INFO[ListItem.Season, • $LOCALIZE[20373] ]</value>
		<value condition="Container.Content(movies)">$INFO[ListItem.Year]$INFO[ListItem.Duration, • , $LOCALIZE[12391]]$INFO[ListItem.Rating, • ]</value>
		<value>$INFO[ListItem.Date]$INFO[ListItem.Rating, • ]</value>
	</variable>
	
	<variable name="RightListInfoPopupDelay">
		<value condition="String.IsEmpty(Skin.String(RightListInfoPopup.Delay))">Skin.SetString(RightListInfoPopup.Delay,2)</value>
		<value condition="String.IsEqual(Skin.String(RightListInfoPopup.Delay),2)">Skin.SetString(RightListInfoPopup.Delay,3)</value>
		<value condition="String.IsEqual(Skin.String(RightListInfoPopup.Delay),3)">Skin.SetString(RightListInfoPopup.Delay,4)</value>
		<value condition="String.IsEqual(Skin.String(RightListInfoPopup.Delay),4)">Skin.SetString(RightListInfoPopup.Delay,5)</value>
		<value condition="String.IsEqual(Skin.String(RightListInfoPopup.Delay),5)">Skin.SetString(RightListInfoPopup.Delay,2)</value>
	</variable>
	
	<variable name="RightListPopupDetails">
	    <value condition="!String.IsEqual(ListItem.DBType,set) + !String.IsEmpty(ListItem.Top250) + !Skin.HasSetting(Enable.HourMinutes)">[COLOR=$VAR[HighlightColor]]$LOCALIZE[31037]: [/COLOR]$INFO[ListItem.Rating] / [COLOR=$VAR[HighlightColor]]$LOCALIZE[13409] # [/COLOR]$INFO[ListItem.Top250]  [COLOR=$VAR[HighlightColor]]$LOCALIZE[345]: [/COLOR]$INFO[ListItem.Year]  [COLOR=$VAR[HighlightColor]]$LOCALIZE[2050]: [/COLOR]$INFO[ListItem.Duration(mins),, $LOCALIZE[12391]]</value>
		<value condition="!String.IsEqual(ListItem.DBType,set) + !String.IsEmpty(ListItem.Top250) + Skin.HasSetting(Enable.HourMinutes)">[COLOR=$VAR[HighlightColor]]$LOCALIZE[31037]: [/COLOR]$INFO[ListItem.Rating] / [COLOR=$VAR[HighlightColor]]$LOCALIZE[13409] # [/COLOR]$INFO[ListItem.Top250]  [COLOR=$VAR[HighlightColor]]$LOCALIZE[345]: [/COLOR]$INFO[ListItem.Year]  [COLOR=$VAR[HighlightColor]]$LOCALIZE[2050]: [/COLOR]$VAR[ItemDurationVar,,]</value>
		<value condition="!String.IsEqual(ListItem.DBType,set) + String.IsEmpty(ListItem.Top250) + !Skin.HasSetting(Enable.HourMinutes)">[COLOR=$VAR[HighlightColor]]$LOCALIZE[31037]: [/COLOR]$INFO[ListItem.Rating]  [COLOR=$VAR[HighlightColor]]$LOCALIZE[345]: [/COLOR]$INFO[ListItem.Year]  [COLOR=$VAR[HighlightColor]]$LOCALIZE[2050]: [/COLOR]$INFO[ListItem.Duration(mins),, $LOCALIZE[12391]]</value>
		<value condition="!String.IsEqual(ListItem.DBType,set) + String.IsEmpty(ListItem.Top250) + Skin.HasSetting(Enable.HourMinutes)">[COLOR=$VAR[HighlightColor]]$LOCALIZE[31037]: [/COLOR]$INFO[ListItem.Rating]  [COLOR=$VAR[HighlightColor]]$LOCALIZE[345]: [/COLOR]$INFO[ListItem.Year]  [COLOR=$VAR[HighlightColor]]$LOCALIZE[2050]: [/COLOR]$VAR[ItemDurationVar,,]</value>
		<value condition="String.IsEqual(ListItem.DBType,set)">[COLOR=$VAR[HighlightColor]]$LOCALIZE[31037]: [/COLOR]$INFO[ListItem.Rating]  [COLOR=$VAR[HighlightColor]]$LOCALIZE[345]: [/COLOR]$INFO[Window(Home).Property(SkinInfo.Set.Movies.Years)]  [COLOR=$VAR[HighlightColor]]$LOCALIZE[2050]: [/COLOR]$INFO[Window(Home).Property(SkinInfo.Set.Movies.Runtime),, $LOCALIZE[12391]]</value>
	</variable>
	
	<variable name="RightListPopupDetailsEpisodes">
	    <value condition="!String.IsEmpty(ListItem.Rating) + !Skin.HasSetting(Enable.HourMinutes)">[COLOR=$VAR[HighlightColor]]$LOCALIZE[31037]: [/COLOR]$INFO[ListItem.Rating]  [COLOR=$VAR[HighlightColor]]$LOCALIZE[20416]: [/COLOR]$INFO[ListItem.Premiered]  [COLOR=$VAR[HighlightColor]]$LOCALIZE[2050]: [/COLOR]$INFO[ListItem.Duration(mins),, $LOCALIZE[12391]]</value>
		<value condition="!String.IsEmpty(ListItem.Rating) + Skin.HasSetting(Enable.HourMinutes)">[COLOR=$VAR[HighlightColor]]$LOCALIZE[31037]: [/COLOR]$INFO[ListItem.Rating]  [COLOR=$VAR[HighlightColor]]$LOCALIZE[20416]: [/COLOR]$INFO[ListItem.Premiered]  [COLOR=$VAR[HighlightColor]]$LOCALIZE[2050]: [/COLOR]$VAR[ItemDurationVar,,]</value>
		<value condition="String.IsEmpty(ListItem.Rating) + !Skin.HasSetting(Enable.HourMinutes)">[COLOR=$VAR[HighlightColor]]$LOCALIZE[20416]: [/COLOR]$INFO[ListItem.Premiered]  [COLOR=$VAR[HighlightColor]]$LOCALIZE[2050]: [/COLOR]$INFO[ListItem.Duration(mins),, $LOCALIZE[12391]]</value>
		<value condition="String.IsEmpty(ListItem.Rating) + Skin.HasSetting(Enable.HourMinutes)">[COLOR=$VAR[HighlightColor]]$LOCALIZE[20416]: [/COLOR]$INFO[ListItem.Premiered]  [COLOR=$VAR[HighlightColor]]$LOCALIZE[2050]: [/COLOR]$VAR[ItemDurationVar,,]</value>
	</variable>
	
	<variable name="RightListSeasonsLabel">
		<value condition="String.IsEqual(ListItem.Property(TotalSeasons),1)">$LOCALIZE[20373]</value>
		<value>$LOCALIZE[33054]</value>
	</variable>
	<variable name="RightListEpisodesLabel">
		<value condition="String.IsEqual(Container.ListItem.Property(TotalEpisodes),1) | String.IsEqual(ListItem.Property(TotalEpisodes),1)">$LOCALIZE[20359]</value>
		<value>$LOCALIZE[20360]</value>
	</variable>
	
	<include name="RightListFade">
        <animation effect="fade" start="100" end="60" time="100" condition="Skin.HasSetting(502_FadeUnfocused)">Conditional</animation>
	</include>
	
	<include name="RightListCertInfo">
	    <param name="leftUSA">620</param>
		<param name="leftNonUSA">650</param>
		<param name="widthUSA">133</param>
        <param name="topUSA">985</param>
        <param name="topNonUSA">995</param>
		<param name="certsource">ListItem.MPAA</param>
		<param name="certvar">$VAR[CertFlag]</param>
	    <definition>
		    <control type="image" description="Certification flag USA">
			    <left>$PARAM[leftUSA]</left>
			    <top>$PARAM[topUSA]</top>
			    <height>90</height>
                <width>$PARAM[widthUSA]</width>
                <aspectratio>keep</aspectratio>
                <align>center</align>
                <texture fallback="badges/mpaa/NR.png">$PARAM[certvar]</texture>
			    <visible>!String.Contains($PARAM[certsource],Brazil) + 
                         !String.Contains($PARAM[certsource],UK) + 
                         !String.Contains($PARAM[certsource],United Kingdom) + 
                         !String.Contains($PARAM[certsource],classificação) + 
                         !String.Contains($PARAM[certsource],France) + 
                         !String.Contains($PARAM[certsource],Germany) + 
                         !String.Contains($PARAM[certsource],Australia) + 
                         !String.Contains($PARAM[certsource],Netherlands) + 
                         !String.Contains($PARAM[certsource],NL) + !String.IsEmpty($PARAM[certsource])</visible>
            </control>
		    <control type="group">
			    <left>$PARAM[leftNonUSA]</left>
			    <top>$PARAM[topNonUSA]</top>
			    <control type="image" description="Certification flag Non USA">
    			    <height>55</height>
                    <width>55</width>
                    <aspectratio>keep</aspectratio>
                    <align>center</align>
                    <texture fallback="badges/mpaa/NR.png">$PARAM[certvar]</texture>
			   	    <visible>!String.IsEmpty($PARAM[certsource]) + [String.Contains($PARAM[certsource],Brazil) | 
                             String.Contains($PARAM[certsource],classificação) | 
                             String.Contains($PARAM[certsource],France) | 
                             String.Contains($PARAM[certsource],Germany) | 
                             String.Contains($PARAM[certsource],Australia) | 
                             String.Contains($PARAM[certsource],Netherlands) | 
                             String.Contains($PARAM[certsource],NL)]</visible>
                </control>
    		    <control type="image" description="Certification flag UK">
	    		    <height>65</height>
                    <width>55</width>
                    <aspectratio>keep</aspectratio>
                    <align>center</align>
                    <texture fallback="badges/mpaa/NR.png">$PARAM[certvar]</texture>
			        <visible>!String.IsEmpty($PARAM[certsource]) + [String.Contains($PARAM[certsource],UK) | String.Contains($PARAM[certsource],United Kingdom)]</visible>
                </control>
			</control>
        </definition>
    </include>

    <include name="RightListStudioInfo">
		<param name="includeSets">true</param>
	    <definition>
		    <control type="image" description="Studio">
			    <texture>$VAR[RightListStudios]</texture>
			    <width>150</width>
			    <height>84</height>
			    <aspectratio align="center" aligny="center">keep</aspectratio>
                <visible>!String.IsEmpty(ListItem.Studio) + !String.Contains(ListItem.Studio,/) + !String.IsEqual(ListItem.DBType,set)</visible>
            </control>
			<control type="image" description="Studio - TMDb Helper">
			    <texture>$INFO[Window(Home).Property(TMDbHelper.ListItem.Studio.1.Icon)]</texture>
                <width>150</width>
				<height>84</height>
				<aspectratio align="center" aligny="center">keep</aspectratio>
                <visible>[String.Contains(ListItem.Studio,/)] + !String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.Studio))</visible>
            </control>
            <control type="image" description="1st. Studio - Sets">
			    <texture>$VAR[RightListStudiosSets]</texture>
			    <width>150</width>
			    <height>84</height>
			    <aspectratio align="center" aligny="center">keep</aspectratio>
                <visible>String.IsEqual(ListItem.DBType,set) + !String.IsEmpty(Window(Home).Property(SkinInfo.Set.Movies.Single.Studio)) + $PARAM[includeSets]</visible>
            </control>
        </definition>
    </include>	
	
	<include name="RightListAudioSubInfo">
	    <control type="grouplist">
			<height>90</height>
			<width>35</width>
			<itemgap>-5</itemgap>
			<control type="image">
				<width>30</width>
				<height>30</height>
				<aspectratio>keep</aspectratio>
				<texture>badges/audio.png</texture>
				<visible>!String.IsEmpty(ListItem.Property(AudioLanguage.1)) | [!String.IsEmpty(ListItem.Property(AudioLanguage.2)) + !String.IsEqual(ListItem.Property(AudioLanguage.1),ListItem.Property(AudioLanguage.2))]</visible>
			</control>
			<control type="image">
				<width>30</width>
				<height>30</height>
				<aspectratio>keep</aspectratio>
				<texture>badges/language/default/$INFO[ListItem.Property(AudioLanguage.1),,.png]</texture>
				<visible>!String.IsEmpty(ListItem.Property(AudioLanguage.1))</visible>
			</control>
			<control type="image">
				<width>30</width>
				<height>30</height>
				<aspectratio>keep</aspectratio>
				<texture>badges/language/default/$INFO[ListItem.Property(AudioLanguage.2),,.png]</texture>
				<visible>!String.IsEmpty(ListItem.Property(AudioLanguage.2)) + !String.IsEqual(ListItem.Property(AudioLanguage.2),ListItem.Property(AudioLanguage.1))</visible>
			</control>
		</control>
		<control type="grouplist">
			<left>32</left>
			<height>90</height>
			<width>35</width>
			<itemgap>-5</itemgap>
			<control type="image">
				<width>30</width>
				<height>30</height>
				<aspectratio>keep</aspectratio>
				<texture>badges/subtitles.png</texture>
				<visible>!String.IsEmpty(ListItem.Property(SubtitleLanguage.1)) | [!String.IsEmpty(ListItem.Property(SubtitleLanguage.2)) + !String.IsEqual(ListItem.Property(SubtitleLanguage.1),ListItem.Property(SubtitleLanguage.2))]</visible>
			</control>
			<control type="image">
				<width>30</width>
				<height>30</height>
				<aspectratio>keep</aspectratio>
				<texture>badges/language/default/$INFO[ListItem.Property(SubtitleLanguage.1),,.png]</texture>
				<visible>!String.IsEmpty(ListItem.Property(SubtitleLanguage.1))</visible>
			</control>
			<control type="image">
				<width>30</width>
				<height>30</height>
				<aspectratio>keep</aspectratio>
				<texture>badges/language/default/$INFO[ListItem.Property(SubtitleLanguage.2),,.png]</texture>
				<visible>!String.IsEmpty(ListItem.Property(SubtitleLanguage.2))</visible>
				<visible>!String.IsEqual(ListItem.Property(SubtitleLanguage.1),ListItem.Property(SubtitleLanguage.2))</visible>
			</control>
		</control>
	</include>

    <include name="RightListRatings">
	    <control type="grouplist" description="Ratings">
            <top>1010</top>
            <left>1180</left>
            <width>800</width>
            <height>40</height>
            <itemgap>10</itemgap>
            <orientation>horizontal</orientation>
            <align>left</align>
            <visible>Skin.HasSetting(ShowRatingMain)</visible>
            <control type="grouplist" description="IMDb Rating or Main Rating">
                <width>130</width>
                <orientation>horizontal</orientation>
                <itemgap>5</itemgap>
                <visible>!String.IsEmpty(Container(4460).ListItem.Rating(imdb))</visible>
                <control type="image" description="IMDb logo">
                    <height>40</height>
                    <width>83</width>
                    <aligny>center</aligny>
                    <align>center</align>
                    <aspectratio>keep</aspectratio>
                    <texture>badges/ratings/imdb2.png</texture>
                </control>
                <control type="label" description="IMDb Rating and Votes">
                    <width>auto</width>
                    <height>40</height>
                    <font>ListDetails</font>
                    <textcolor>$VAR[HighlightColor]</textcolor>
                    <align>left</align>
                    <label>$INFO[Container(4460).ListItem.Rating(imdb)]</label>
                    <visible>!String.IsEmpty(Container(4460).ListItem.Rating(imdb))</visible>
                </control>
            </control>
			<control type="grouplist" description="Main Rating for sets">
                <width>180</width>
                <orientation>horizontal</orientation>
                <itemgap>5</itemgap>
                <visible>!String.IsEmpty(ListItem.Rating) + String.IsEqual(ListItem.DBType,set)</visible>
                <control type="image" description="IMDb logo">
                    <height>40</height>
                    <width>83</width>
                    <aligny>center</aligny>
                    <align>center</align>
                    <aspectratio>keep</aspectratio>
                    <texture>badges/ratings/imdb2.png</texture>
                </control>
                <control type="label" description="Main Rating and Votes">
                    <width>auto</width>
                    <height>40</height>
                    <font>ListDetails</font>
                    <textcolor>$VAR[HighlightColor]</textcolor>
                    <align>left</align>
                    <label>$INFO[ListItem.Rating]$INFO[ListItem.Votes, (, $LOCALIZE[205])]</label>
                    <visible>!String.IsEmpty(ListItem.Votes) + !String.IsEqual(ListItem.Votes,0)</visible>
                </control>
                <control type="label" description="Main Rating No Votes">
                    <width>auto</width>
                    <height>40</height>
                    <font>ListDetails</font>
                    <textcolor>$VAR[HighlightColor]</textcolor>
                    <align>left</align>
                    <label>$INFO[ListItem.Rating]</label>
                    <visible>[String.IsEmpty(ListItem.Votes) | String.IsEqual(ListItem.Votes,0)]</visible>
                </control>             
            </control>
            <control type="grouplist" description="IMDb Top 250 rank">
                <visible>!string.IsEmpty(ListItem.Top250) + !Skin.HasSetting(HideTop250MediaViews)</visible>
				<width>100</width>
                <orientation>horizontal</orientation>
                <itemgap>3</itemgap>
                <control type="label" description="IMDb Top 250">
                    <width>auto</width>
                    <height>40</height>
                    <font>ListDetails</font>
                    <align>left</align>
                    <textcolor>$VAR[HighlightColor]</textcolor>
                    <label>[B]$INFO[ListItem.Top250,#][/B]</label>
					
                </control>
            </control>
            <control type="grouplist" description="RT Critics rating">
                <visible>!String.IsEmpty(Container(4460).ListItem.Rating(tomatometerallcritics))</visible>
                <width>130</width>
                <orientation>horizontal</orientation>
                <align>left</align>
                <itemgap>3</itemgap>            
                <control type="image">
                    <width>40</width>
                    <height>40</height>
                    <texture>$VAR[RightListRottenFreshLogoVar]</texture>
                    <aspectratio>keep</aspectratio>
                </control>
                <control type="label">
                    <height>40</height>
                    <width>60</width>
                    <font>ListDetails</font>
                    <textcolor>$VAR[HighlightColor]</textcolor>
                    <label>$VAR[RightListRottenFreshLabelVar]%</label>
                </control>
            </control>
            <control type="grouplist" description="RT Audience rating">
                <visible>!String.IsEmpty(Container(4460).ListItem.Rating(tomatometerallaudience))</visible>
                <width>130</width>
                <orientation>horizontal</orientation>
                <align>left</align>
                <itemgap>3</itemgap>            
                <control type="image">
                    <width>40</width>
                    <height>40</height>
                    <texture>$VAR[RightListRottenFreshAudienceLogoVar]</texture>
                    <aspectratio>keep</aspectratio>
                </control>
                <control type="label">
                    <height>40</height>
                    <width>60</width>
                    <font>ListDetails</font>
                    <textcolor>$VAR[HighlightColor]</textcolor>
                    <label>$VAR[RightListRottenFreshAudienceLabelVar]%</label>
                </control>
            </control>
            <control type="grouplist" description="Metacritic rating">
                <visible>!String.IsEmpty(Container(4460).ListItem.Rating(metacritic))</visible>
                <width>90</width>
                <orientation>horizontal</orientation>
                <align>left</align>
                <itemgap>5</itemgap>            
                <control type="image">
                    <width>40</width>
                    <height>40</height>
                    <texture>badges/ratings/metacritic2.png</texture>
                    <aspectratio>keep</aspectratio>
                </control>
                <control type="label">
                    <height>40</height>
                    <width>50</width>
                    <font>ListDetails</font>
                    <textcolor>$VAR[HighlightColor]</textcolor>
                    <label>$VAR[RightListMetacriticLabelVar]</label>
                </control>
            </control>
            <control type="grouplist" description="TMDB rating">
                <visible>!String.IsEmpty(Container(4460).ListItem.Rating(themoviedb))</visible>
                <width>115</width>
                <orientation>horizontal</orientation>
                <itemgap>5</itemgap>  
                <align>left</align>
                <control type="image" description="TMDB logo">
                    <height>40</height>
                    <width>45</width>
                    <texture>badges/ratings/themoviedb3.png</texture>
                    <aspectratio>keep</aspectratio>
                </control>
                <control type="label" description="TMDB Rating">
                    <width>60</width>
                    <height>40</height>
                    <font>ListDetails</font>
                    <textcolor>$VAR[HighlightColor]</textcolor>
                    <label>$VAR[RightListTheMovieDBLabelVar]%</label>
                </control>
            </control>
            <control type="grouplist" description="TVDB rating and votes">
                <visible>!String.IsEmpty(ListItem.Rating(tvdb))</visible>
                <width>100</width>
                <orientation>horizontal</orientation>
                <itemgap>5</itemgap>
                <align>left</align>                
                <control type="image" description="TVDB logo">
                    <height>40</height>
                    <width>71</width>
                    <aligny>center</aligny>
                    <texture>badges/ratings/tvdb2.png</texture>
                    <aspectratio>keep</aspectratio>
                </control>
                <control type="label" description="TVDB Rating">
                    <width>auto</width>
                    <height>40</height>
                    <font>ListDetails</font>
                    <align>left</align>
                    <textcolor>$VAR[HighlightColor]</textcolor>
                    <label>$INFO[Container(4460).ListItem.Rating(tvdb)]</label>
                </control>
            </control>
			<control type="grouplist" description="Trakt rating">
                <visible>!String.IsEmpty(Container(4460).ListItem.Rating(trakt))</visible>
                <width>90</width>
                <orientation>horizontal</orientation>
                <itemgap>5</itemgap>
                <align>left</align>                
                <control type="image" description="Trakt logo">
					<height>40</height>
                    <width>40</width>
                    <aligny>center</aligny>
                    <texture>badges/ratings/trakt.png</texture>
                    <aspectratio>keep</aspectratio>
                </control>
                <control type="label" description="Trakt Rating">
                    <width>auto</width>
                    <height>40</height>
                    <font>ListDetails</font>
                    <align>left</align>
                    <textcolor>$VAR[HighlightColor]</textcolor>
                    <label>$INFO[Container(4460).ListItem.Rating(trakt)]</label>
                </control>
            </control>
            <control type="grouplist" description="User rating">
                <visible>Skin.HasSetting(ShowRatingUser)</visible>
                <width>80</width>
                <orientation>horizontal</orientation>
                <itemgap>0</itemgap>
                <align>left</align>                
                <control type="image" description="User Rating logo">
                    <height>40</height>
                    <width>40</width>
                    <texture>badges/ratings/userrating2.png</texture>
                </control>
                <control type="label" description="User Rating">
                    <width>40</width>
                    <height>40</height>
                    <font>ListDetails</font>
                    <align>left</align>
                    <textcolor>$VAR[HighlightColor]</textcolor>
                    <label>$INFO[ListItem.UserRating]</label>
					<visible>!String.IsEmpty(ListItem.UserRating)</visible>
                </control>
				<control type="label" description="User Rating">
                    <width>40</width>
                    <height>40</height>
                    <font>ListDetails</font>
                    <align>left</align>
                    <textcolor>$VAR[HighlightColor]</textcolor>
                    <label>-</label>
					<visible>String.IsEmpty(ListItem.UserRating)</visible>
                </control>
            </control>
            <control type="grouplist" description="Awards">
                <width>115</width>
                <orientation>horizontal</orientation>
                <itemgap>1</itemgap>
				<align>left</align>
                <visible>[!String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.Oscar_Wins)) + !String.IsEqual(Window(Home).Property(TMDbHelper.ListItem.Oscar_Wins),N/A)] | 
				         [!String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.GoldenGlobe_Wins)) + !String.IsEqual(Window(Home).Property(TMDbHelper.ListItem.GoldenGlobe_Wins),N/A)]</visible>
				<visible>!Skin.HasSetting(Disable.OnlineTMDbInfo)</visible>
                <control type="image" description="Oscars logo">
                    <height>40</height>
                    <width>30</width>
                    <aligny>center</aligny>
                    <align>right</align>
                    <aspectratio>keep</aspectratio>
                    <texture>badges/ratings/oscars.png</texture>
					<visible>[!String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.Oscar_Wins)) + !String.IsEqual(Window(Home).Property(TMDbHelper.ListItem.Oscar_Wins),N/A)]</visible>
                </control>
                <control type="label" description="Oscar wins">
                    <width>30</width>
                    <height>40</height>
                    <font>ListDetails</font>
                    <textcolor>$VAR[HighlightColor]</textcolor>
                    <align>left</align>
					<aligny>center</aligny>
                    <label>$INFO[Window(Home).Property(TMDbHelper.ListItem.Oscar_Wins)]</label>
					<visible>[!String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.Oscar_Wins)) + !String.IsEqual(Window(Home).Property(TMDbHelper.ListItem.Oscar_Wins),N/A)]</visible>
                </control>
				<control type="image" description="Golden Globes logo">
                    <height>40</height>
                    <width>30</width>
                    <aligny>center</aligny>
                    <align>right</align>
                    <aspectratio>keep</aspectratio>
                    <texture>badges/ratings/goldenglobes.png</texture>
					<visible>[!String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.GoldenGlobe_Wins)) + !String.IsEqual(Window(Home).Property(TMDbHelper.ListItem.GoldenGlobe_Wins),N/A)]</visible>
                </control>
                <control type="label" description="Golden Globe wins">
                    <width>20</width>
                    <height>40</height>
                    <font>ListDetails</font>
                    <textcolor>$VAR[HighlightColor]</textcolor>
                    <align>left</align>
					<aligny>center</aligny>
                    <label>$INFO[Window(Home).Property(TMDbHelper.ListItem.GoldenGlobe_Wins)]</label>
					<visible>[!String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.GoldenGlobe_Wins)) + !String.IsEqual(Window(Home).Property(TMDbHelper.ListItem.GoldenGlobe_Wins),N/A)]</visible>
                </control>
            </control>            
        </control>
    </include>	
	
	<include name="RightListFixed">
		<control type="fixedlist" id="502">
			<movement>3</movement>
			<focusposition>3</focusposition>
			<include>502ListContent</include>
		</control>
	</include>
	<include name="RightListStandard">
		<control type="list" id="502">
			<include>502ListContent</include>
		</control>
	</include>
	
	<include name="502ListContent">
	    <left>580</left>
		<top>70</top>
		<width>1400</width>
		<height>915</height>
		<viewtype label="$LOCALIZE[31648]">list</viewtype>
		<scrolltime>100</scrolltime>
		<orientation>vertical</orientation>
		<onup>502</onup>
		<ondown>502</ondown>
		<pagecontrol>6502</pagecontrol>
        <onleft condition="!Skin.HasSetting(KioskMode.Enabled)">9000</onleft>
        <onleft condition="!Skin.HasSetting(KioskMode.Enabled)">SetProperty(MediaMenu,true,Home)</onleft>
		<onleft condition="Skin.HasSetting(KioskMode.Enabled)">noop</onleft>
        
		<oninfo condition="System.AddonIsEnabled(script.extendedinfo) + Skin.HasSetting(AutoExtendedInfo) + String.IsEqual(ListItem.DBType,movie)">RunScript(script.extendedinfo,info=extendedinfo,dbid=$INFO[ListItem.DBID],id=$INFO[ListItem.UniqueID(tmdb)],imdb_id=$INFO[ListItem.IMDBNumber],name=$INFO[Listitem.Title])</oninfo>
		<oninfo condition="System.AddonIsEnabled(script.extendedinfo) + Skin.HasSetting(AutoExtendedInfo) + String.IsEqual(ListItem.DBType,tvshow)">RunScript(script.extendedinfo,info=extendedtvinfo,dbid=$INFO[ListItem.DBID],id=$INFO[ListItem.UniqueID(tmdb)],tvdb_id=$INFO[ListItem.UniqueID(tvdb)],name=$INFO[Listitem.Title])</oninfo>
		<oninfo condition="System.AddonIsEnabled(script.extendedinfo) + Skin.HasSetting(AutoExtendedInfo) + String.IsEqual(ListItem.DBType,season)">RunScript(script.extendedinfo,info=seasoninfo,tvshow=$INFO[Listitem.TVShowTitle],season=$INFO[ListItem.Season])</oninfo>
		<oninfo condition="System.AddonIsEnabled(script.extendedinfo) + Skin.HasSetting(AutoExtendedInfo) + String.IsEqual(ListItem.DBType,episode)">RunScript(script.extendedinfo,info=extendedepisodeinfo,tvshow=$INFO[Listitem.TVShowTitle],season=$INFO[ListItem.Season],episode=$INFO[ListItem.Episode])</oninfo>
		
		<oninfo condition="ListItem.IsCollection + !String.Contains(System.BuildVersion,19)">ActivateWindow(1127)</oninfo>
        <onright condition="!Control.IsVisible(615) | [Control.IsVisible(615) + Control.IsVisible(6502)]">6502</onright>
		<onright condition="Control.IsVisible(615)">615</onright>
		<preloaditems>2</preloaditems>
		<animation effect="slide" end="-40,0" time="240" tween="cubic" easing="inout" condition="Control.HasFocus(6502)">Conditional</animation>
		<animation effect="slide" end="-40,0" time="240" tween="cubic" easing="inout" condition="Control.HasFocus(615)">Conditional</animation>
		<animation effect="slide" end="-40,-20" time="240" tween="cubic" easing="inout" condition="Container.Content(episodes)">Conditional</animation>
		<animation effect="slide" end="0,-20" time="240" tween="cubic" easing="inout" condition="Skin.HasSetting(502_UseLogo)">Conditional</animation>
		<visible>[$EXP[Exp_View_502] + Skin.HasSetting(Enable.NewViewSelector)] | [!Skin.HasSetting(hide.rightlistview) + !Skin.HasSetting(Enable.NewViewSelector)]</visible>
		<include condition="Window.IsActive(music)">RightListMusicLayouts</include>
		<include condition="!Window.IsActive(music)">RightListVideoLayouts</include>
	</include>
	
	
	
	<!-- Info Popup -->
	<include name="RightListInfoPopup">
		<definition>
			<control type="image">
				<include>Dimensions_Fullscreen</include>
				<texture>colors/black.png</texture>
				<animation effect="fade" start="0" end="40" time="320">Visible</animation>
				<visible>[[String.IsEqual(Skin.String(RightListInfoPopup.Delay),2) + System.IdleTime(2)] | [String.IsEqual(Skin.String(RightListInfoPopup.Delay),3) + System.IdleTime(3)] | [String.IsEqual(Skin.String(RightListInfoPopup.Delay),4) + System.IdleTime(4)] | [String.IsEqual(Skin.String(RightListInfoPopup.Delay),5) + System.IdleTime(5)]] + [Container.Content(movies) | Container.Content(tvshows) | Container.Content(episodes) | Container.Content(sets)]</visible>
			</control>
			<control type="group" id="14000">
				<top>254</top>
				<left>277</left>
				<animation type="Visible" reversible="false">
					<effect type="zoom" start="80" end="100" center="960,540" delay="160" tween="back" time="240" />
					<effect type="fade" delay="160" end="100" time="240" />
				</animation>
				<visible>[String.IsEqual(Skin.String(RightListInfoPopup.Delay),2) + System.IdleTime(2) | String.IsEqual(Skin.String(RightListInfoPopup.Delay),3) + System.IdleTime(3) | String.IsEqual(Skin.String(RightListInfoPopup.Delay),4) + System.IdleTime(4) | String.IsEqual(Skin.String(RightListInfoPopup.Delay),5) + System.IdleTime(5)] + [Container.Content(movies) | Container.Content(tvshows) | Container.Content(episodes) | Container.Content(sets)]</visible>
				<control type="image">
					<top>2</top>
					<left>22</left>
					<width>1303</width>
					<height>598</height>
					<texture border="40">dialogs/DialogBG.png</texture>
				</control>
				<!-- Logo -->
				<control type="image">
					<top>40</top>
					<left>420</left>
					<width>210</width>
					<height>80</height>
					<aspectratio align="left" aligny="bottom">stretch</aspectratio>
					<texture background="true">$VAR[ClearLogo]</texture>
				</control>
				<!-- Title if no logo -->
				<control type="label">
					<top>40</top>
					<left>420</left>
					<width>865</width>
					<height>80</height>
					<font>font30_title</font>
					<label>$INFO[ListItem.Label]</label>
					<textcolor>$VAR[HighlightColor]</textcolor>
					<visible>[String.IsEmpty(ListItem.Art(clearlogo)) + !Container.Content(episodes)]</visible>
				</control>
				<control type="label">
					<top>40</top>
					<left>420</left>
					<width>865</width>
					<height>80</height>
					<font>font30_title</font>
					<label>$INFO[ListItem.TVShowTitle]</label>
					<scroll>true</scroll>
					<textcolor>$VAR[HighlightColor]</textcolor>
					<visible>[String.IsEmpty(ListItem.Art(tvshow.clearlogo)) + Container.Content(episodes)]</visible>
				</control>
				<control type="group">
					<visible>Container.Content(movies) | Container.Content(sets) | Container.Content(episodes)</visible>
					<control type="grouplist">
						<top>130</top>
						<left>420</left>
						<width>900</width>
						<height>145</height>
						<!-- Non Set info -->
						<control type="grouplist">
							<visible>!ListItem.IsCollection</visible>
							<control type="label">
								<width>889</width>
								<height>47.5</height>
								<font>font24_title</font>
								<label>[COLOR=$VAR[HighlightColor]]$LOCALIZE[20359]: [/COLOR]$VAR[SeasonEpisodeLabel] - $INFO[ListItem.Title]</label>
								<visible>!String.IsEmpty(ListItem.Title) + Container.Content(episodes)</visible>
								<scroll>true</scroll>
							</control>
							<control type="label">
								<width>889</width>
								<height>47.5</height>
								<font>font20_title</font>
								<label>[COLOR=$VAR[HighlightColor]]$LOCALIZE[20339]: [/COLOR]$INFO[ListItem.Director]</label>
								<visible>!String.IsEmpty(ListItem.Director)</visible>
								<scroll>true</scroll>
							</control>
							<control type="label">
								<width>889</width>
								<height>47.5</height>
								<font>font20_title</font>
								<label>[COLOR=$VAR[HighlightColor]]$LOCALIZE[515]: [/COLOR]$INFO[ListItem.Genre]</label>
								<visible>!String.IsEmpty(ListItem.Genre)</visible>
								<scroll>true</scroll>
							</control>
						</control>
						<!-- Set info -->
						<control type="grouplist">
							<visible>ListItem.IsCollection</visible>
							<control type="label">
								<width>889</width>
								<height>47.5</height>
								<font>font24_title</font>
								<label>[COLOR=$VAR[HighlightColor]]$LOCALIZE[20342]: [/COLOR]$INFO[Container(4450).NumItems]</label>
								<visible>Skin.HasSetting(ShowSetCount)</visible>
							</control>
							<control type="label">
								<width>889</width>
								<height>47.5</height>
								<font>font20_title</font>
								<label>[COLOR=$VAR[HighlightColor]]$LOCALIZE[20339]: [/COLOR]$INFO[Window(Home).Property(SkinInfo.Set.Movies.Director)]</label>
								<visible>!String.IsEmpty(Window(Home).Property(SkinInfo.Set.Movies.Director))</visible>
								<scroll>true</scroll>
							</control>
							<control type="label">
								<width>889</width>
								<height>47.5</height>
								<font>font20_title</font>
								<label>[COLOR=$VAR[HighlightColor]]$LOCALIZE[515]: [/COLOR]$INFO[Window(Home).Property(SkinInfo.Set.Movies.Genre)]</label>
								<visible>!String.IsEmpty(Window(Home).Property(SkinInfo.Set.Movies.Genre))</visible>
								<scroll>true</scroll>
							</control>
						</control>
					</control>
					<!-- Non episode details -->
					<control type="label">
						<top>227</top>
						<left>420</left>
						<width>889</width>
						<height>45</height>
						<font>font20_title</font>
						<label>$VAR[RightListPopupDetails]</label>
						<visible>!Container.Content(episodes) + !ListItem.IsCollection</visible>
					</control>
					<control type="label">
						<top>277</top>
						<left>420</left>
						<width>889</width>
						<height>45</height>
						<font>font20_title</font>
						<label>$VAR[RightListPopupDetails]</label>
						<visible>ListItem.IsCollection</visible>
					</control>
					<!-- Episode details -->
					<control type="label">
						<top>277</top>
						<left>420</left>
						<width>889</width>
						<height>45</height>
						<font>font20_title</font>
						<label>$VAR[RightListPopupDetailsEpisodes]</label>
						<visible>Container.Content(episodes) + ![String.IsEmpty(ListItem.Genre) | String.IsEmpty(ListItem.Director)]</visible>
					</control>
					<control type="label">
						<top>227</top>
						<left>420</left>
						<width>889</width>
						<height>45</height>
						<font>font20_title</font>
						<label>$VAR[RightListPopupDetailsEpisodes]</label>
						<visible>Container.Content(episodes) + [String.IsEmpty(ListItem.Genre) | String.IsEmpty(ListItem.Director)]</visible>
					</control>
				</control>
				<!-- Next/Last Episode details -->
				<control type="grouplist">
					<top>130</top>
					<left>420</left>
					<width>855</width>
					<height>110</height>
					<itemgap>-15</itemgap>
					<visible>Container.Content(tvshows)</visible>
					<control type="label">
						<scroll>false</scroll>
						<width>auto</width>
						<font>font24_title</font>
						<label>[COLOR=$VAR[HighlightColor]]$LOCALIZE[209]: [/COLOR]$INFO[Window(Home).Property(TMDbHelper.ListItem.Next_Aired.Season),S]$INFO[Window(Home).Property(TMDbHelper.ListItem.Next_Aired.Episode),E]$INFO[Window(Home).Property(TMDbHelper.ListItem.Next_Aired.Name), - ]$INFO[Window(Home).Property(TMDbHelper.ListItem.Next_Aired), (,)]</label>
						<visible>[!String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.Next_Aired)) | !String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.Next_Aired.Name))]</visible>
					</control>
					<control type="label">
						<scroll>false</scroll>
						<width>auto</width>
						<font>font24_title</font>
						<label>[COLOR=$VAR[HighlightColor]]$LOCALIZE[210]: [/COLOR]$INFO[Window(Home).Property(TMDbHelper.ListItem.Last_Aired.Season),S]$INFO[Window(Home).Property(TMDbHelper.ListItem.Last_Aired.Episode),E]$INFO[Window(Home).Property(TMDbHelper.ListItem.Last_Aired.Name), - ]$INFO[Window(Home).Property(TMDbHelper.ListItem.Last_Aired), (,)]</label>
						<visible>!String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.Last_Aired))</visible>
					</control>
				</control>
				<!-- Plot -->
				<control type="textbox">
					<top>272</top>
					<left>420</left>
					<width>870</width>
					<height>240</height>
					<font>InfoPlot</font>
					<label>$VAR[Plots]</label>
					<autoscroll delay="5000" time="4000" repeat="8000">Skin.HasSetting(AutoScroll)</autoscroll>
					<visible>Container.Content(movies) + !ListItem.IsCollection</visible>
				</control>
				<control type="textbox">
					<top>332</top>
					<left>420</left>
					<width>870</width>
					<height>240</height>
					<font>InfoPlot</font>
					<label>$VAR[Plots]</label>
					<autoscroll delay="5000" time="4000" repeat="8000">Skin.HasSetting(AutoScroll)</autoscroll>
					<visible>ListItem.IsCollection</visible>
				</control>
				<control type="textbox">
					<top>332</top>
					<left>420</left>
					<width>870</width>
					<height>165</height>
					<font>InfoPlot</font>
					<label>$VAR[Plots]</label>
					<autoscroll delay="5000" time="4000" repeat="8000">Skin.HasSetting(AutoScroll)</autoscroll>
					<visible>Container.Content(episodes) + ![String.IsEmpty(ListItem.Genre) | String.IsEmpty(ListItem.Director)]</visible>
				</control>
				<control type="textbox">
					<top>282</top>
					<left>420</left>
					<width>870</width>
					<height>205</height>
					<font>InfoPlot</font>
					<label>$VAR[Plots]</label>
					<autoscroll delay="5000" time="4000" repeat="8000">Skin.HasSetting(AutoScroll)</autoscroll>
					<visible>Container.Content(episodes) + [String.IsEmpty(ListItem.Genre) | String.IsEmpty(ListItem.Director)]</visible>
				</control>
				<control type="textbox">
					<top>238</top>
					<left>420</left>
					<width>870</width>
					<height>240</height>
					<font>InfoPlot</font>
					<label>$VAR[Plots]</label>
					<autoscroll delay="5000" time="4000" repeat="8000">Skin.HasSetting(AutoScroll)</autoscroll>
					<visible>Container.Content(tvshows)</visible>
				</control>
				<!-- Media flags -->
				<control type="group">
				    <top>497</top>
					<left>420</left>
					<visible>Container.Content(movies) | Container.Content(episodes)</visible>
				    <control type="group">
		                <visible>!Skin.HasSetting(coloredflags)</visible>
			            <include>ContentFade</include>
			            <control type="grouplist">
			                <width>730</width>
			                <height>90</height>
			                <itemgap>20</itemgap>
			                <orientation>horizontal</orientation>
			                <align>left</align>
			                <include content="MediaFlagItems">
				                <param name="itemwidth">100</param>
		                        <param name="itemheight">90</param>
							    <param name="showvideobadge">true</param>
				                <param name="showaudiobadge">true</param>
				                <param name="showratingbadge">false</param>
				                <param name="diffuse">$VAR[LabelTextColor]</param>
			                </include>
		                </control>
		            </control>
		            <control type="group">
		                <visible>Skin.HasSetting(coloredflags)</visible>
			            <include>ContentFade</include>
			            <control type="grouplist">
			                <visible>![String.Contains(Container.ListItem.Filename,hdr) | String.Contains(Container.ListItem.Filename,sdr)]</visible>
			                <width>550</width>
			                <height>90</height>
			                <itemgap>20</itemgap>
			                <orientation>horizontal</orientation>
			                <align>left</align>
			                <include content="MediaFlagItems">
				                <param name="itemwidth">100</param>
		                        <param name="itemheight">90</param>
							    <param name="showvideobadge">true</param>
				                <param name="showaudiobadge">true</param>
				                <param name="showratingbadge">false</param>
				                <param name="diffuse">$VAR[LabelTextColor]</param>
			                </include>
		                </control>
					    <control type="grouplist">
			                <visible>[String.Contains(Container.ListItem.Filename,hdr) | String.Contains(Container.ListItem.Filename,sdr)]</visible>
			                <width>850</width>
			                <height>90</height>
			                <itemgap>10</itemgap>
			                <orientation>horizontal</orientation>
			                <align>left</align>
			                <include content="MediaFlagItems">
				                <param name="itemwidth">100</param>
		                        <param name="itemheight">90</param>
							    <param name="showvideobadge">true</param>
				                <param name="showaudiobadge">true</param>
				                <param name="showratingbadge">false</param>
				                <param name="diffuse">$VAR[LabelTextColor]</param>
			                </include>
		                </control>
		            </control>
				</control>
				<!-- TV Show additional details -->
				<control type="grouplist">
					<top>487</top>
					<left>420</left>
					<width>889</width>
					<height>90</height>
					<itemgap>20</itemgap>
					<orientation>horizontal</orientation>
					<usecontrolcoords>true</usecontrolcoords>
					<visible>Container.Content(tvshows)</visible>
					<control type="group">
				        <visible>!String.IsEmpty(ListItem.MPAA)</visible>
			            <include content="RightListCertInfo">
                            <param name="leftUSA">0</param>
	                        <param name="leftNonUSA">20</param>
                            <param name="widthUSA">120</param>
                            <param name="topUSA">0</param>
                            <param name="topNonUSA">15</param>
				        </include>	
                    </control>
					<control type="group">
						<left>110</left>
						<width>120</width>
						<height>90</height>
						<top>10</top>
						<control type="image" id="9900502" description="Studio">
				            <texture>$VAR[RightListStudios]</texture>
				            <width>120</width>
				            <height>74</height>
				            <aspectratio align="center" aligny="center">keep</aspectratio>
                            <visible>!String.IsEmpty(ListItem.Studio) + !String.Contains(ListItem.Studio,/) + !String.IsEqual(ListItem.DBType,set)</visible>
                        </control>
						<control type="image" id="9900502" description="Studio - TMDb Helper">
							<texture>$INFO[Window(Home).Property(TMDbHelper.ListItem.Studio.1.Icon)]</texture>
                            <width>120</width>
				            <height>74</height>
				            <aspectratio align="center" aligny="center">keep</aspectratio>
                            <visible>[String.Contains(ListItem.Studio,/)] + !String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.Studio))</visible>
                        </control>
						<control type="label">
							<width>120</width>
							<align>center</align>
							<font>FanartTitleFont</font>
							<wrapmultiline>true</wrapmultiline>
							<label>$INFO[ListItem.Studio]</label>
							<visible>String.IsEmpty(Control.GetLabel(9900502))</visible>
						</control>
					</control>
					<control type="group">
						<visible>Container.Content(tvshows) + !String.IsEmpty(ListItem.Property(TotalSeasons))</visible>
						<width>177</width>
						<control type="label">
							<top>2</top>
							<width>177</width>
							<height>60</height>
							<align>center</align>
							<label>[B]$INFO[ListItem.Property(TotalSeasons)][/B]</label>
							<font>MainLabelBigTitle</font>
							<wrapmultiline>true</wrapmultiline>
						</control>
						<control type="label">
							<top>52</top>
							<width>177</width>
							<height>30</height>
							<align>center</align>
							<label>[LOWERCASE]$VAR[RightListSeasonsLabel][/LOWERCASE]</label>
							<font>font12</font>
							<textcolor>$VAR[HighlightColor]</textcolor>
						</control>
					</control>
					<control type="group">
						<visible>Container.Content(tvshows) + !String.IsEmpty(ListItem.Property(TotalEpisodes))</visible>
						<width>177</width>
						<control type="label">
							<top>2</top>
							<width>177</width>
							<height>60</height>
							<align>center</align>
							<label>[B]$INFO[ListItem.Property(TotalEpisodes)][/B]</label>
							<font>MainLabelBigTitle</font>
							<wrapmultiline>true</wrapmultiline>
						</control>
						<control type="label">
							<top>52</top>
							<width>177</width>
							<height>30</height>
							<align>center</align>
							<label>[LOWERCASE]$VAR[RightListEpisodesLabel][/LOWERCASE]</label>
							<font>font12</font>
							<textcolor>$VAR[HighlightColor]</textcolor>
						</control>
					</control>
					<control type="group">
						<visible>Container.Content(tvshows) + !String.IsEmpty(ListItem.Property(UnWatchedEpisodes))</visible>
						<width>177</width>
						<control type="label">
							<top>2</top>
							<width>177</width>
							<height>60</height>
							<align>center</align>
							<label>[B]$INFO[ListItem.Property(UnWatchedEpisodes)][/B]</label>
							<font>MainLabelBigTitle</font>
							<wrapmultiline>true</wrapmultiline>
						</control>
						<control type="label">
							<top>52</top>
							<width>177</width>
							<height>30</height>
							<align>center</align>
							<label>[LOWERCASE]$LOCALIZE[16101][/LOWERCASE]</label>
							<font>font12</font>
							<textcolor>$VAR[HighlightColor]</textcolor>
						</control>
					</control>
				</control>
				<include content="ShadowedImage">
					<param name="top">36</param>
					<param name="left">54</param>
					<param name="width">347</param>
					<param name="height">521</param>
					<param name="aspect">stretch</param>
					<param name="texture">$VAR[Poster]</param>
				</include>
			</control>
		</definition>
	</include>
	
	<include name="RightListFloor">
	    <control type="group">
		    <!-- Info for movies, sets and episodes -->
			<control type="group">
			    <visible>![String.IsEqual(ListItem.DBType,tvshow) | String.IsEqual(ListItem.DBType,season)]</visible>
                <!-- Media flags -->
			    <control type="group">
		            <visible>!Skin.HasSetting(coloredflags)</visible>
		            <include>ContentFade</include>
		            <control type="group">
					    <visible>![String.Contains(Container.ListItem.Filename,hdr) | String.Contains(Container.ListItem.Filename,sdr)] + 
						         ![String.Contains(Container.ListItem.Filename,10bit) | String.Contains(Container.ListItem.Filename,10-bit)] + 
								 ![String.Contains(Container.ListItem.Filename,12bit) | String.Contains(Container.ListItem.Filename,12-bit)] + 
								 ![String.Contains(Container.ListItem.Filename,8bit) | String.Contains(Container.ListItem.Filename,8-bit)]</visible>
						<control type="grouplist">
		                    <top>990</top>
					        <left>64</left>
		                    <width>730</width>
		                    <height>95</height>
		                    <itemgap>20</itemgap>
		                    <orientation>horizontal</orientation>
		                    <align>left</align>
							<usecontrolcoords>true</usecontrolcoords>
		                    <include content="MediaFlagItems">
			                    <param name="itemwidth">100</param>
		                        <param name="itemheight">90</param>
						        <param name="showvideobadge">true</param>
			                    <param name="showaudiobadge">true</param>
			                    <param name="showratingbadge">false</param>
			                    <param name="diffuse">$VAR[LabelTextColor]</param>
		                    </include>
		                </control>
					</control>
                    <control type="group">
					    <visible>[String.Contains(Container.ListItem.Filename,hdr) | String.Contains(Container.ListItem.Filename,sdr)] + 
						         ![String.Contains(Container.ListItem.Filename,10bit) | String.Contains(Container.ListItem.Filename,10-bit)] + 
								 ![String.Contains(Container.ListItem.Filename,12bit) | String.Contains(Container.ListItem.Filename,12-bit)] + 
								 ![String.Contains(Container.ListItem.Filename,8bit) | String.Contains(Container.ListItem.Filename,8-bit)]</visible>
						<control type="grouplist">
		                    <top>990</top>
					        <left>11</left>
		                    <width>730</width>
		                    <height>95</height>
		                    <itemgap>20</itemgap>
		                    <orientation>horizontal</orientation>
		                    <align>left</align>
							<usecontrolcoords>true</usecontrolcoords>
		                    <include content="MediaFlagItems">
			                    <param name="itemwidth">100</param>
		                        <param name="itemheight">90</param>
						        <param name="showvideobadge">true</param>
			                    <param name="showaudiobadge">true</param>
			                    <param name="showratingbadge">false</param>
			                    <param name="diffuse">$VAR[LabelTextColor]</param>
		                    </include>
		                </control>
					</control>
                    <control type="group">
					    <visible>[String.Contains(Container.ListItem.Filename,hdr) | String.Contains(Container.ListItem.Filename,sdr)] + 
						         [[String.Contains(Container.ListItem.Filename,10bit) | String.Contains(Container.ListItem.Filename,10-bit)] | 
								  [String.Contains(Container.ListItem.Filename,12bit) | String.Contains(Container.ListItem.Filename,12-bit)] |
								  [String.Contains(Container.ListItem.Filename,8bit) | String.Contains(Container.ListItem.Filename,8-bit)]]</visible>
						<control type="grouplist">
		                    <top>990</top>
					        <left>11</left>
		                    <width>730</width>
		                    <height>95</height>
		                    <itemgap>20</itemgap>
		                    <orientation>horizontal</orientation>
		                    <align>left</align>
							<usecontrolcoords>true</usecontrolcoords>
		                    <include content="MediaFlagItems">
			                    <param name="itemwidth">90</param>
		                        <param name="itemheight">85</param>
						        <param name="showvideobadge">true</param>
			                    <param name="showaudiobadge">true</param>
			                    <param name="showratingbadge">false</param>
			                    <param name="diffuse">$VAR[LabelTextColor]</param>
		                    </include>
		                </control>
					</control>					
		        </control>
		        <control type="group">
		            <visible>Skin.HasSetting(coloredflags)</visible>
		            <include>ContentFade</include>
		            <control type="grouplist">
		                <visible>![String.Contains(Container.ListItem.Filename,hdr) | String.Contains(Container.ListItem.Filename,sdr)] + 
						         ![String.Contains(Container.ListItem.Filename,10bit) | String.Contains(Container.ListItem.Filename,10-bit)] + 
								 ![String.Contains(Container.ListItem.Filename,12bit) | String.Contains(Container.ListItem.Filename,12-bit)] + 
								 ![String.Contains(Container.ListItem.Filename,8bit) | String.Contains(Container.ListItem.Filename,8-bit)]</visible>
					    <top>990</top>
					    <left>35</left>
		                <width>550</width>
		                <height>95</height>
		                <itemgap>20</itemgap>
		                <orientation>horizontal</orientation>
		                <align>left</align>
		                <include content="MediaFlagItems">
			                <param name="itemwidth">100</param>
		                    <param name="itemheight">95</param>
						    <param name="showvideobadge">true</param>
			                <param name="showaudiobadge">true</param>
			                <param name="showratingbadge">false</param>
			                <param name="diffuse">$VAR[LabelTextColor]</param>
		                </include>
		            </control>
				    <control type="grouplist">
		                <visible>[String.Contains(Container.ListItem.Filename,hdr) | String.Contains(Container.ListItem.Filename,sdr)] + 
						         ![String.Contains(Container.ListItem.Filename,10bit) | String.Contains(Container.ListItem.Filename,10-bit)] + 
								 ![String.Contains(Container.ListItem.Filename,12bit) | String.Contains(Container.ListItem.Filename,12-bit)] + 
								 ![String.Contains(Container.ListItem.Filename,8bit) | String.Contains(Container.ListItem.Filename,8-bit)]</visible>
					    <top>990</top>
					    <left>35</left>
		                <width>850</width>
		                <height>95</height>
		                <itemgap>20</itemgap>
		                <orientation>horizontal</orientation>
		                <align>left</align>
		                <include content="MediaFlagItems">
			                <param name="itemwidth">100</param>
		                    <param name="itemheight">90</param>
						    <param name="showvideobadge">true</param>
			                <param name="showaudiobadge">true</param>
			                <param name="showratingbadge">false</param>
			                <param name="diffuse">$VAR[LabelTextColor]</param>
		                </include>
		            </control>
					<control type="grouplist">
		                <visible>[String.Contains(Container.ListItem.Filename,hdr) | String.Contains(Container.ListItem.Filename,sdr)] + 
						         [[String.Contains(Container.ListItem.Filename,10bit) | String.Contains(Container.ListItem.Filename,10-bit)] | 
								  [String.Contains(Container.ListItem.Filename,12bit) | String.Contains(Container.ListItem.Filename,12-bit)] |
								  [String.Contains(Container.ListItem.Filename,8bit) | String.Contains(Container.ListItem.Filename,8-bit)]]</visible>
					    <top>990</top>
					    <left>35</left>
		                <width>850</width>
		                <height>95</height>
		                <itemgap>20</itemgap>
		                <orientation>horizontal</orientation>
		                <align>left</align>
		                <include content="MediaFlagItems">
			                <param name="itemwidth">90</param>
		                    <param name="itemheight">85</param>
						    <param name="showvideobadge">true</param>
			                <param name="showaudiobadge">true</param>
			                <param name="showratingbadge">false</param>
			                <param name="diffuse">$VAR[LabelTextColor]</param>
		                </include>
		            </control>
		        </control>
			    <!-- Certification flag -->
			    <control type="group">
				    <visible>Skin.HasSetting(ShowMPAA) + [[!String.IsEmpty(ListItem.MPAA) + !ListItem.IsCollection] | [!String.IsEmpty(Window(Home).Property(SkinInfo.Set.Movie.1.MPAA)) + ListItem.IsCollection]]</visible>
				    <control type="group">
				        <visible>!String.IsEqual(ListItem.DBType,set)</visible>
						<include content="RightListCertInfo">
    	                    <param name="leftUSA">760</param>
		                    <param name="leftNonUSA">790</param>	
					    </include>
                    </control>
				    <control type="group">
				        <visible>String.IsEqual(ListItem.DBType,set)</visible>
						<include content="RightListCertInfo">
    	                    <param name="leftUSA">760</param>
		                    <param name="leftNonUSA">790</param>
							<param name="certsource">Window(Home).Property(SkinInfo.Set.Movie.1.MPAA)</param>
                            <param name="certvar">$VAR[SetsCertFlag]</param>
					    </include>
                    </control>
				</control>				
				<!-- Studio image -->
				<control type="group">
				    <top>990</top>
					<visible>Skin.HasSetting(ShowStudio)</visible>
					<control type="group">
					    <left>910</left>
						<include content="RightListStudioInfo">
						    <param name="includeSets">true</param>
                        </include>
					</control>
				</control>	
				<!-- Audio and subtitle info -->
				<control type="group">
					<top>1000</top>
					<visible>[String.IsEqual(ListItem.DBType,movie) | String.IsEqual(ListItem.DBType,episode)] + Skin.HasSetting(ShowAudioSub)</visible>
					<control type="group">
						<left>1085</left>
						<include>RightListAudioSubInfo</include>
					</control>
				</control>
				<!-- Ratings -->
				<include>RightListRatings</include>
			</control>
            <!-- Info for tvshows and seasons -->
			<control type="group">
			    <visible>[String.IsEqual(ListItem.DBType,tvshow) | String.IsEqual(ListItem.DBType,season)]</visible>
				<!-- Certification flag -->
			    <control type="group">
			        <visible>!String.IsEmpty(ListItem.MPAA) + Skin.HasSetting(ShowMPAA)</visible>
			        <include content="RightListCertInfo">
                        <param name="leftUSA">760</param>
	                    <param name="leftNonUSA">790</param>	
				    </include>	
                </control>
				<!-- Studio image -->
				<control type="group">
				    <top>990</top>
					<visible>Skin.HasSetting(ShowStudio)</visible>
					<control type="group">
					    <left>910</left> 
                        <include content="RightListStudioInfo">
						    <param name="includeSets">false</param>
                        </include>						
					</control>
				</control>
				<control type="group">
				    <visible>!String.IsEmpty(ListItem.TVShowTitle)</visible>
				    <!-- Series status -->
					<control type="group">
					    <top>985</top>
				        <control type="label">
					        <left>64</left>
					        <width>145</width>
					        <height>40</height>
					        <align>center</align>
					        <label>$VAR[RightListNextAiredStatus]</label>
					        <font>ListDetailsSmall</font>
				        </control>
				        <control type="image">
					        <left>64</left>
					        <height>80</height>
				            <width>145</width>
				            <bordersize>3</bordersize>
				            <aspectratio align="center" aligny="center">keep</aspectratio>
					        <texture background="true">$VAR[RightListNextAiredStatusImage]</texture>
				        </control>
				    </control>
					<!-- Next and Last episode dates -->
					<control type="group">
				        <top>960</top>
				        <left>225</left>
				        <control type="label">
					        <width>330</width>
					        <height>90</height>
					        <align>left</align>
					        <font>ListDetailsSmall</font>
					        <label>[COLOR=$VAR[HighlightColor]]$LOCALIZE[209]: [/COLOR][B]$VAR[RightListNextEpisode][/B]</label>
				        </control>
						<control type="label">
					        <top>30</top>
							<width>330</width>
					        <height>90</height>
					        <align>left</align>
					        <font>ListDetailsSmall</font>
					        <label>[COLOR=$VAR[HighlightColor]]$LOCALIZE[210]: [/COLOR][B]$VAR[RightListLastEpisode][/B]</label>
				        </control>
				    </control>
					<control type="grouplist">
				        <top>985</top>
				        <left>1337</left>
				        <width>591</width>
				        <height>90</height>
				        <itemgap>20</itemgap>
				        <orientation>horizontal</orientation>
				        <usecontrolcoords>true</usecontrolcoords>
				        <control type="group">
					        <visible>!String.IsEmpty(ListItem.Property(TotalSeasons))</visible>
					        <width>177</width>
					        <control type="label">
						        <top>2</top>
						        <width>177</width>
						        <height>60</height>
						        <align>center</align>
						        <label>[B]$INFO[ListItem.Property(TotalSeasons)][/B]</label>
						        <font>MainLabelBigTitle</font>
						        <wrapmultiline>true</wrapmultiline>
					        </control>
					        <control type="label">
						        <top>52</top>
						        <width>177</width>
						        <height>30</height>
						        <align>center</align>
						        <label>$VAR[RightListSeasonsLabel]</label>
						        <font>font12</font>
						        <textcolor>$VAR[HighlightColor]</textcolor>
					        </control>
				        </control>
				        <control type="group">
					        <visible>!String.IsEmpty(ListItem.Property(TotalEpisodes)) + !String.IsEmpty(ListItem.Property(TotalSeasons))</visible>
					        <width>177</width>
					        <control type="label">
						        <top>2</top>
						        <width>177</width>
						        <height>60</height>
						        <align>center</align>
						        <label>[B]$INFO[ListItem.Property(TotalEpisodes)][/B]</label>
						        <font>MainLabelBigTitle</font>
						        <wrapmultiline>true</wrapmultiline>
					        </control>
					        <control type="label">
						        <top>52</top>
						        <width>177</width>
						        <height>30</height>
						        <align>center</align>
						        <label>$VAR[RightListEpisodesLabel]</label>
						        <font>font12</font>
						        <textcolor>$VAR[HighlightColor]</textcolor>
					        </control>
				        </control>
						<control type="group">
					        <visible>!String.IsEmpty(ListItem.Property(UnWatchedEpisodes)) + !String.IsEmpty(ListItem.Property(TotalSeasons))</visible>
					        <width>177</width>
					        <control type="label">
						        <top>2</top>
						        <width>177</width>
						        <height>60</height>
						        <align>center</align>
						        <label>[B]$INFO[ListItem.Property(UnWatchedEpisodes)][/B]</label>
						        <font>MainLabelBigTitle</font>
						        <wrapmultiline>true</wrapmultiline>
					        </control>
					        <control type="label">
						        <top>52</top>
						        <width>177</width>
						        <height>30</height>
						        <align>center</align>
						        <label>$LOCALIZE[16101]</label>
						        <font>font12</font>
						        <textcolor>$VAR[HighlightColor]</textcolor>
					        </control>
						</control>	
						<control type="group">
						    <visible>String.IsEmpty(ListItem.Property(TotalSeasons))</visible>
							<left>177</left>
						    <control type="group">
					            <visible>!String.IsEmpty(ListItem.Property(TotalEpisodes))</visible>
					            <width>177</width>
    					        <control type="label">
	    					        <top>2</top>
		    				        <width>177</width>
			    			        <height>60</height>
				    		        <align>center</align>
					    	        <label>[B]$INFO[ListItem.Property(TotalEpisodes)][/B]</label>
						            <font>MainLabelBigTitle</font>
						            <wrapmultiline>true</wrapmultiline>
					            </control>
					            <control type="label">
						            <top>52</top>
						            <width>177</width>
						            <height>30</height>
						            <align>center</align>
						            <label>$VAR[RightListEpisodesLabel]</label>
						            <font>font12</font>
						            <textcolor>$VAR[HighlightColor]</textcolor>
					            </control>
				            </control>
							<control type="group">
					            <visible>!String.IsEmpty(ListItem.Property(UnWatchedEpisodes))</visible>
					            <left>177</left>
								<width>177</width>
					            <control type="label">
						            <top>2</top>
						            <width>177</width>
						            <height>60</height>
						            <align>center</align>
						            <label>[B]$INFO[ListItem.Property(UnWatchedEpisodes)][/B]</label>
						            <font>MainLabelBigTitle</font>
						            <wrapmultiline>true</wrapmultiline>
					            </control>
					            <control type="label">
						            <top>52</top>
						            <width>177</width>
						            <height>30</height>
						            <align>center</align>
						            <label>$LOCALIZE[16101]</label>
						            <font>font12</font>
						            <textcolor>$VAR[HighlightColor]</textcolor>
					            </control>
				            </control>
						</control>	
				    </control>
			    </control>
			</control>
		</control>
	</include>
	
	<include name="View_502_RightList">
	
		<control type="group">
			<visible>Control.IsVisible(502)</visible>
			<include>ContentFade</include>
			
			<!-- Background overlay -->
			<control type="image">
			    <width>100%</width>
                <height>100%</height>
				<texture>img/episodebgoverlay.png</texture>
			</control>
			<!-- Floor image -->
			<control type="group">
			    <visible>Skin.HasSetting(502_ShowFloor)</visible>
			    <control type="image" description="Footer Dim BG">
                    <posy>960</posy>
                    <width>1920</width>
                    <height>207</height>
                    <texture>img/GradientNew.png</texture>
                </control>
                <control type="image" description="Footer">
                    <posy>960</posy>
                    <width>1920</width>
                    <height>207</height>
                    <texture>OSD/FS_OSDBackground.png</texture>
                </control>
				<control type="group">
				    <visible>Skin.HasSetting(ShowMPAA) | Skin.HasSetting(ShowStudio) | Skin.HasSetting(ShowAudioSub) | Skin.HasSetting(ShowRatingMain) | !Skin.HasSetting(Hide.MediaFlagsVideo)</visible>
				    <control type="image" description="Line Split">
                        <posy>985</posy>
                        <posx>755</posx>
					    <width>1</width>
                        <height>95</height>
                        <texture>img/LineL.png</texture>
                        <aspectratio>stretch</aspectratio>
                    </control>
				    <control type="image" description="Line Split">
                        <posy>985</posy>
                        <posx>1070</posx>
					    <width>1</width>
                        <height>95</height>
                        <texture>img/LineL.png</texture>
                        <aspectratio>stretch</aspectratio>
						<visible>!Container.Content(tvshows) + !Container.Content(seasons)</visible>
                    </control>
				    <control type="image" description="Line Split">
                        <posy>985</posy>
                        <posx>1162</posx>
					    <width>1</width>
                        <height>95</height>
                        <texture>img/LineL.png</texture>
                        <aspectratio>stretch</aspectratio>
                    </control>
				</control>	
			</control>	
			
			<!-- Logo -->
			<control type="image">
				<left>92</left>
				<top>50</top>
				<width>399</width>
				<height>142</height>
				<aspectratio>keep</aspectratio>
				<texture background="true">$VAR[ClearLogo]</texture>
				<fadetime>400</fadetime>
				<visible>![Skin.HasSetting(502_UseLogo) + Container.Content(tvshows)] + Skin.HasSetting(502_ShowLogo)</visible>
				<animation type="Conditional" condition="Window.IsActive(music)">
					<effect type="zoom" end="130" center="auto" time="320" tween="cubic" easing="inout" />
					<effect type="slide" end="0,35" time="6000" />
				</animation>
			</control>
			<!-- Poster -->
			<control type="group">
				<visible>Window.IsActive(videos)</visible>
				<visible>Skin.HasSetting(502_ShowPoster)</visible>
				<include content="ShadowedImage">
					<param name="top">200</param>
					<param name="left">49</param>
					<param name="width">533</param>
					<param name="height">770</param>
					<param name="aspect">stretch</param>
					<param name="texture">$VAR[Poster]</param>
				</include>
			</control>
			
			<!-- List content, fixed or regular -->
			<include condition="Skin.HasSetting(502_FixedList)">RightListFixed</include>
			<include condition="!Skin.HasSetting(502_FixedList)">RightListStandard</include>
			
			<control type="scrollbar" id="6502">
			    <animation effect="slide" start="0,0" end="-8,0" time="150">Focus</animation>
			    <animation effect="slide" start="-8,0" end="0,0" time="300">UnFocus</animation>
			    <posx>21r</posx>
			    <posy>80</posy>
			    <width>36</width>
			    <height>895</height>
			    <texturesliderbackground></texturesliderbackground>
			    <texturesliderbar></texturesliderbar>
			    <texturesliderbarfocus></texturesliderbarfocus>
			    <textureslidernib border="18">OSD/ScrollbarNibNF.png</textureslidernib>
			    <textureslidernibfocus border="18" colordiffuse="$VAR[HighlightColor]">OSD/ScrollbarNibFO.png</textureslidernibfocus>
			    <showonepage>false</showonepage>
			    <orientation>vertical</orientation>
			    <onleft>502</onleft>
			    <onright>502</onright>
                <visible>!Skin.HasSetting(Show.JumpToLetter) | ![String.IsEqual(Container.SortMethod,$LOCALIZE[551]) | String.IsEqual(Container.SortMethod,$LOCALIZE[556]) | String.IsEqual(Container.SortMethod,$LOCALIZE[561]) | String.IsEqual(Container.SortMethod,$LOCALIZE[558]) | String.IsEqual(Container.SortMethod,$LOCALIZE[557])]</visible>
			</control>
            <!-- Non script alphabet strip -->
            <control type="button" id="6502">
                <visible>Control.IsVisible(502)</visible>
                <visible>Skin.HasSetting(Show.JumpToLetter) + !Skin.HasSetting(Show.EHJumpToLetter) + [String.IsEqual(Container.SortMethod,$LOCALIZE[551]) | String.IsEqual(Container.SortMethod,$LOCALIZE[556]) | String.IsEqual(Container.SortMethod,$LOCALIZE[561]) | String.IsEqual(Container.SortMethod,$LOCALIZE[558]) | String.IsEqual(Container.SortMethod,$LOCALIZE[557])]</visible>
                <font />
                <texturefocus />
                <texturenofocus />
                <width>40</width>
                <onleft>502</onleft>
                <posx>50r</posx>
                <posy>55</posy>
                <height>920</height>
                <ondown>SetFocus(502)</ondown>
                <ondown>Action(nextletter)</ondown>
                <ondown condition="!Container.HasNext | String.IsEqual(ListItem.SortLetter,Z)">Action(jumpsms2)</ondown>
                <ondown condition="!Container.HasNext | String.IsEqual(ListItem.SortLetter,Z)">Action(prevletter)</ondown>
                <ondown condition="!Container.HasNext | String.IsEqual(ListItem.SortLetter,Z)">Action(prevletter)</ondown>
                <ondown condition="!Container.HasNext | String.IsEqual(ListItem.SortLetter,Z)">Action(prevletter)</ondown>
                <ondown>SetFocus(6502)</ondown>
                <onup>SetFocus(502)</onup>
                <onup>Action(prevletter)</onup>
                <onup condition="!Container.HasPrevious | $EXP[Exp_SortLetterIsNumber]">Action(jumpsms9)</onup>
                <onup condition="!Container.HasPrevious | $EXP[Exp_SortLetterIsNumber]">Action(nextletter)</onup>
                <onup condition="!Container.HasPrevious | $EXP[Exp_SortLetterIsNumber]">Action(nextletter)</onup>
                <onup condition="!Container.HasPrevious | $EXP[Exp_SortLetterIsNumber]">Action(nextletter)</onup>
                <onup>SetFocus(6502)</onup>
            </control>            

            <control type="grouplist" id="65021">
                <posx>36r</posx>
                <posy>55</posy>
                <height>920</height>
                <width>42</width>
                <itemgap>0</itemgap>
                <orientation>vertical</orientation>
                <animation effect="fade" start="100" end="0" time="400" condition="!Control.HasFocus(6502) + !Container.Scrolling">Conditional</animation>
                <include>AlphabetNumber</include>
                <include content="AlphabetLetter"><param name="label" value="A" /></include>
                <include content="AlphabetLetter"><param name="label" value="B" /></include>
                <include content="AlphabetLetter"><param name="label" value="C" /></include>
                <include content="AlphabetLetter"><param name="label" value="D" /></include>
                <include content="AlphabetLetter"><param name="label" value="E" /></include>
                <include content="AlphabetLetter"><param name="label" value="F" /></include>
                <include content="AlphabetLetter"><param name="label" value="G" /></include>
                <include content="AlphabetLetter"><param name="label" value="H" /></include>
                <include content="AlphabetLetter"><param name="label" value="I" /></include>
                <include content="AlphabetLetter"><param name="label" value="J" /></include>
                <include content="AlphabetLetter"><param name="label" value="K" /></include>
                <include content="AlphabetLetter"><param name="label" value="L" /></include>
                <include content="AlphabetLetter"><param name="label" value="M" /></include>
                <include content="AlphabetLetter"><param name="label" value="N" /></include>
                <include content="AlphabetLetter"><param name="label" value="O" /></include>
                <include content="AlphabetLetter"><param name="label" value="P" /></include>
                <include content="AlphabetLetter"><param name="label" value="Q" /></include>
                <include content="AlphabetLetter"><param name="label" value="R" /></include>
                <include content="AlphabetLetter"><param name="label" value="S" /></include>
                <include content="AlphabetLetter"><param name="label" value="T" /></include>
                <include content="AlphabetLetter"><param name="label" value="U" /></include>
                <animation effect="fade" start="100" end="0" condition="[String.IsEqual(ListItem.SortLetter,V) | String.IsEqual(ListItem.SortLetter,W) | String.IsEqual(ListItem.SortLetter,X) | String.IsEqual(ListItem.SortLetter,Y) | String.IsEqual(ListItem.SortLetter,Z)]">Conditional</animation>
                <visible>Control.IsVisible(502)</visible>
                <visible>Skin.HasSetting(Show.JumpToLetter) + !Skin.HasSetting(Show.EHJumpToLetter) + [String.IsEqual(Container.SortMethod,$LOCALIZE[551]) | String.IsEqual(Container.SortMethod,$LOCALIZE[556]) | String.IsEqual(Container.SortMethod,$LOCALIZE[561]) | String.IsEqual(Container.SortMethod,$LOCALIZE[558]) | String.IsEqual(Container.SortMethod,$LOCALIZE[557])]</visible>
            </control>

            <control type="grouplist" id="65022">
                <posx>36r</posx>
                <posy>55</posy>
                <height>920</height>
                <width>42</width>
                <itemgap>0</itemgap>
                <orientation>vertical</orientation>
                <animation effect="fade" start="100" end="0" time="400" condition="!Control.HasFocus(6502) + !Container.Scrolling">Conditional</animation>
                <include content="AlphabetLetter"><param name="label" value="E" /></include>
                <include content="AlphabetLetter"><param name="label" value="F" /></include>
                <include content="AlphabetLetter"><param name="label" value="G" /></include>
                <include content="AlphabetLetter"><param name="label" value="H" /></include>
                <include content="AlphabetLetter"><param name="label" value="I" /></include>
                <include content="AlphabetLetter"><param name="label" value="J" /></include>                
                <include content="AlphabetLetter"><param name="label" value="K" /></include>
                <include content="AlphabetLetter"><param name="label" value="L" /></include>
                <include content="AlphabetLetter"><param name="label" value="M" /></include>
                <include content="AlphabetLetter"><param name="label" value="N" /></include>
                <include content="AlphabetLetter"><param name="label" value="O" /></include>
                <include content="AlphabetLetter"><param name="label" value="P" /></include>
                <include content="AlphabetLetter"><param name="label" value="Q" /></include>
                <include content="AlphabetLetter"><param name="label" value="R" /></include>
                <include content="AlphabetLetter"><param name="label" value="S" /></include>
                <include content="AlphabetLetter"><param name="label" value="T" /></include>
                <include content="AlphabetLetter"><param name="label" value="U" /></include>
                <include content="AlphabetLetter"><param name="label" value="V" /></include>
                <include content="AlphabetLetter"><param name="label" value="W" /></include>
                <include content="AlphabetLetter"><param name="label" value="X" /></include>
                <include content="AlphabetLetter"><param name="label" value="Y" /></include>
                <include content="AlphabetLetter"><param name="label" value="Z" /></include>
                <animation effect="fade" start="100" end="0" condition="![String.IsEqual(ListItem.SortLetter,V) | String.IsEqual(ListItem.SortLetter,W) | String.IsEqual(ListItem.SortLetter,X) | String.IsEqual(ListItem.SortLetter,Y) | String.IsEqual(ListItem.SortLetter,Z)]">Conditional</animation>
                <visible>Control.IsVisible(502)</visible>
                <visible>Skin.HasSetting(Show.JumpToLetter) + !Skin.HasSetting(Show.EHJumpToLetter) + [String.IsEqual(Container.SortMethod,$LOCALIZE[551]) | String.IsEqual(Container.SortMethod,$LOCALIZE[556]) | String.IsEqual(Container.SortMethod,$LOCALIZE[561]) | String.IsEqual(Container.SortMethod,$LOCALIZE[558]) | String.IsEqual(Container.SortMethod,$LOCALIZE[557])]</visible>
            </control>

			<!-- Medial Flags & Floor labels -->
			<include>RightListFloor</include>
			
			<!-- Info Popup -->
			<control type="group">
				<include>RightListInfoPopup</include>
				<visible>Skin.HasSetting(502_ShowInfoPopup) + Control.HasFocus(502) + !ListItem.IsParentFolder</visible>
			</control>
			
		</control>	
	</include>
	
	<include name="RightListMusicLayouts">
		<itemlayout width="950" height="90">
			<control type="label">
				<left>1325</left>
				<top>15</top>
				<width>126</width>
				<height>90</height>
				<align>right</align>
				<aligny>bottom</aligny>
				<label>$INFO[ListItem.TrackNumber]</label>
				<font>Font_Reg37_Caps</font>
				<visible>Container.Content(songs)</visible>
			</control>
			<control type="label">
				<left>590</left>
				<width>690</width>
				<height>45</height>
				<align>right</align>
				<aligny>bottom</aligny>
				<label>$VAR[EpisodeTitleVar]</label>
				<font>Font_Reg42_Caps</font>
				<textcolor>$VAR[TitleColorVar]</textcolor>
			</control>
			<control type="label">
				<left>330</left>
				<top>43</top>
				<width>950</width>
				<height>45</height>
				<align>right</align>
				<aligny>bottom</aligny>
				<label>$VAR[InfoWallBottomLabel1Var]$INFO[ListItem.Rating, • ]</label>
				<textcolor>grey</textcolor>
			</control>
		</itemlayout>
		<focusedlayout width="950" height="346">
			<control type="image">
				<left>980</left>
				<width>322</width>
				<height>322</height>
				<aspectratio scalediffuse="false">scale</aspectratio>
				<texture background="true" diffuse="thumbs/cdcover_mask.png">$VAR[ListAlbumVar]</texture>
				<bordertexture border="20">thumbs/cd_shadow.png</bordertexture>
				<bordersize>20</bordersize>
			</control>
			<control type="group">
				<left>150</left>
				<animation type="Conditional" reversible="false" condition="Control.HasFocus(502) + [!Container(502).OnNext + !Container(502).OnPrevious]">
					<effect type="fade" end="100" time="160" />
				</animation>
				<control type="label">
					<left>1175</left>
					<top>133</top>
					<width>126</width>
					<height>90</height>
					<align>right</align>
					<aligny>bottom</aligny>
					<label>$INFO[ListItem.TrackNumber]</label>
					<font>Font_Reg37_Caps</font>
					<visible>Container.Content(songs)</visible>
				</control>
				<control type="label">
					<left>13</left>
					<top>22</top>
					<width>825</width>
					<align>right</align>
					<aligny>bottom</aligny>
					<label>$INFO[ListItem.Label]</label>
					<font>Font_Reg42_Caps</font>
					<textcolor>$VAR[TitleColorVar]</textcolor>
					<scrollspeed>40</scrollspeed>
					<visible>!Container.Content(songs)</visible>
				</control>
				<control type="label">
					<left>13</left>
					<top>22</top>
					<width>825</width>
					<align>right</align>
					<aligny>bottom</aligny>
					<label>$INFO[ListItem.Title]</label>
					<font>Font_Reg42_Caps</font>
					<textcolor>$VAR[TitleColorVar]</textcolor>
					<scrollspeed>40</scrollspeed>
					<visible>Container.Content(songs)</visible>
				</control>
				<control type="label">
					<left>13</left>
					<top>70</top>
					<width>825</width>
					<height>90</height>
					<align>right</align>
					<aligny>bottom</aligny>
					<label>$VAR[InfoWallBottomLabel1Var]$INFO[ListItem.Genre, • ]</label>
					<textcolor>grey</textcolor>
				</control>
				<control type="textbox">
					<left>99</left>
					<top>107</top>
					<width>740</width>
					<height>194</height>
					<align>right</align>
					<label>$VAR[InfoWallTextboxVar]</label>
					<font>Font_Reg30_2</font>
					<autoscroll time="2000" delay="6000" repeat="6000">Skin.HasSetting(AutoScroll)</autoscroll>
				</control>
			</control>
		</focusedlayout>
	</include>
	
	<include name="RightListVideoLayouts">
		<!-- Text as list item type -->
		<!-- Movies, sets, tv shows, seasons -->
		<itemlayout width="950" height="95" condition="!Container.Content(episodes) + ![[Skin.HasSetting(502_UseBanner) | Skin.HasSetting(502_UseLogo)] + [Container.Content(tvshows) | Container.Content(movies)]]">
			<control type="group">
			    <include>RightListFade</include>
			    <control type="label">
				    <left>300</left>
				    <width>980</width>
				    <height>45</height>
				    <align>right</align>
				    <label>$VAR[panelheading]</label>
				    <textcolor>$VAR[HighlightColor]</textcolor>
			    </control>
			    <control type="label">
				    <left>310</left>
				    <top>50</top>
				    <width>950</width>
				    <height>45</height>
				    <align>right</align>
				    <aligny>bottom</aligny>
				    <font>ListDetails</font>
				    <label>$VAR[panelsubheading]</label>
				    <visible>!Container.Content(tvshows) + !Container.Content(seasons)</visible>
			    </control>
			    <control type="label">
				    <left>310</left>
				    <top>50</top>
				    <width>950</width>
				    <height>45</height>
				    <align>right</align>
				    <aligny>bottom</aligny>
				    <font>ListDetails</font>
				    <label>$INFO[ListItem.Premiered]$INFO[ListItem.Rating, • ]</label>
				    <visible>Container.Content(tvshows)</visible>
			    </control>
			    <include content="RightListWatchedOverlay">
			        <param name="isFocused">false</param>
                    <param name="itemheight">42</param>
                    <param name="overlaypos">1300</param>
			    </include>
			</control>	
		</itemlayout>
		<!-- Episodes -->
		<itemlayout width="950" height="95" condition="Container.Content(episodes)">
			<control type="group">
			    <include>RightListFade</include>
			    <control type="group">
				    <visible>!Integer.IsGreater(ListItem.Episode,99)</visible>
					<control type="label">
				        <left>300</left>
				        <width>970</width>
				        <height>45</height>
				        <align>right</align>
				        <label>$INFO[ListItem.Title]</label>
				        <textcolor>$VAR[HighlightColor]</textcolor>
			        </control>
			        <control type="label">
				        <left>310</left>
				        <top>50</top>
				        <width>958</width>
				        <height>45</height>
				        <align>right</align>
				        <aligny>bottom</aligny>
				        <font>ListDetails</font>
				        <label>$INFO[ListItem.Premiered]$INFO[ListItem.Rating, • ]</label>
			        </control>
				</control>
                <control type="group">
				    <visible>Integer.IsGreater(ListItem.Episode,99)</visible>
					<control type="label">
				        <left>280</left>
				        <width>970</width>
				        <height>45</height>
				        <align>right</align>
				        <label>$INFO[ListItem.Title]</label>
				        <textcolor>$VAR[HighlightColor]</textcolor>
			        </control>
			        <control type="label">
				        <left>290</left>
				        <top>50</top>
				        <width>958</width>
				        <height>45</height>
				        <align>right</align>
				        <aligny>bottom</aligny>
				        <font>ListDetails</font>
				        <label>$INFO[ListItem.Premiered]$INFO[ListItem.Rating, • ]</label>
			        </control>
				</control>				
			    <control type="group">
			        <animation type="Conditional" condition="String.IsEqual(ListItem.Overlay,OverlayWatched.png)">
					    <effect type="fade" end="30" time="0" easing="in" tween="cubic" />
				    </animation>
					<visible>!Integer.IsGreater(ListItem.Episode,99)</visible>
				    <include content="RightListWatchedOverlay">
			            <param name="isFocused">false</param>
                        <param name="itemheight">42</param>
                        <param name="overlaypos">1335</param>
				        <param name="posy">25</param>
			        </include>
			        <control type="label">
				        <left>1262</left>
				        <top>25</top>
				        <width>80</width>
				        <height>45</height>
				        <align>center</align>
				        <label>$INFO[ListItem.Episode]</label>
				        <font>font38_title</font>
			        </control>
				</control>
                <control type="group">
			        <animation type="Conditional" condition="String.IsEqual(ListItem.Overlay,OverlayWatched.png)">
					    <effect type="fade" end="30" time="0" easing="in" tween="cubic" />
				    </animation>
					<visible>Integer.IsGreater(ListItem.Episode,99)</visible>
				    <include content="RightListWatchedOverlay">
			            <param name="isFocused">false</param>
                        <param name="itemheight">42</param>
                        <param name="overlaypos">1335</param>
				        <param name="posy">25</param>
			        </include>
			        <control type="label">
				        <left>1252</left>
				        <top>25</top>
				        <width>80</width>
				        <height>45</height>
				        <align>center</align>
				        <label>$INFO[ListItem.Episode]</label>
				        <font>font38_title</font>
			        </control>
				</control>				
			</control>	
		</itemlayout>
		<!-- Banner layout -->
		<itemlayout width="950" height="135" condition="Skin.HasSetting(502_UseBanner) + [Container.Content(tvshows) | Container.Content(movies)]">
			<control type="group">
				<left>30</left>
				<include>RightListFade</include>
				<include content="ShadowedImage">
					<param name="top">8</param>
					<param name="left">708</param>
					<param name="width">548</param>
					<param name="height">105</param>
					<param name="aspect">scale</param>
					<param name="texture">$VAR[Banner]</param>
				</include>
				<control type="image">
					<left>708</left>
					<top>10</top>
					<width>548</width>
					<height>100</height>
					<aspectratio scalediffuse="false">keep</aspectratio>
					<texture background="true">$VAR[ClearLogo]</texture>
					<visible>String.IsEmpty(ListItem.Art(banner)) + String.IsEmpty(ListItem.Art(tvshow.banner))</visible>
				</control>
				<control type="label">
					<left>708</left>
					<top>8</top>
					<width>528</width>
					<height>105</height>
					<align>center</align>
					<label>$INFO[ListItem.Label]</label>
					<font>font24_title</font>
					<shadowcolor>black</shadowcolor>
					<visible>String.IsEmpty(ListItem.Art(banner)) + String.IsEmpty(ListItem.Art(clearlogo)) + !ListItem.IsParentFolder</visible>
				</control>
			</control>
			<control type="group">
			    <include>RightListFade</include>
			    <include content="RightListWatchedOverlay">
			        <param name="isFocused">false</param>
                    <param name="itemheight">42</param>
                    <param name="overlaypos">1300</param>
			        <param name="posy">5</param>
			    </include>
			</control>	
		</itemlayout>
		<!-- Clear Logo Layout -->
		<itemlayout width="950" height="135" condition="Skin.HasSetting(502_UseLogo) + [Container.Content(tvshows) | Container.Content(movies)]">
			<control type="group">
				<left>50</left>
				<include>RightListFade</include>
				<control type="image">
					<left>892</left>
					<width>341</width>
					<height>132</height>
					<aspectratio align="center" aligny="center">keep</aspectratio>
					<texture background="true">$VAR[ClearLogo]</texture>
					<fadetime>400</fadetime>
				</control>
				<control type="group">
					<visible>String.IsEmpty(ListItem.Art(clearlogo))</visible>
					<control type="label">
				        <left>300</left>
				        <width>930</width>
				        <height>45</height>
				        <align>right</align>
				        <label>$VAR[panelheading]</label>
				        <textcolor>$VAR[HighlightColor]</textcolor>
			        </control>
			        <control type="label">
				        <left>310</left>
				        <top>50</top>
				        <width>900</width>
				        <height>45</height>
				        <align>right</align>
				        <aligny>bottom</aligny>
				        <font>ListDetails</font>
				        <label>$VAR[panelsubheading]</label>
				        <visible>!Container.Content(tvshows)</visible>
			        </control>
			        <control type="label">
				        <left>310</left>
				        <top>50</top>
				        <width>920</width>
				        <height>45</height>
				        <align>right</align>
				        <aligny>bottom</aligny>
				        <font>ListDetails</font>
				        <label>$INFO[ListItem.Premiered]$INFO[ListItem.Rating, • ]</label>
				        <visible>Container.Content(tvshows)</visible>
			        </control>
				</control>
			</control>
			<control type="group">
			    <include>RightListFade</include>
			    <include content="RightListWatchedOverlay">
			        <param name="isFocused">false</param>
                    <param name="itemheight">42</param>
                    <param name="overlaypos">1290</param>
			    </include>
			</control>	
		</itemlayout>
		
		<!-- Focused layout for movies, tv shows, seasons sets -->
		<focusedlayout width="950" height="246" condition="Container.Content(movies) | Container.Content(tvshows) | Container.Content(seasons) | Container.Content(sets)">
			<include content="RightListWatchedOverlay">
			    <param name="isFocused">true</param>
                <param name="itemheight">42</param>
                <param name="overlaypos">1300</param>
			</include>
			<control type="group">
				<left>1120</left>
				<top>-140</top>
				<include content="ShadowedImage">
					<param name="top">150</param>
					<param name="left">8</param>
					<param name="width">150</param>
					<param name="height">225</param>
					<param name="aspect">stretch</param>
					<param name="texture">$VAR[Poster]</param>
				</include>
			</control>
			<control type="group">
				<left>50</left>
				<top>-15</top>
				<animation effect="slide" end="220,0" time="0" condition="true">Conditional</animation>
				<animation type="Conditional" reversible="false" condition="Control.HasFocus(502) + [!Container(502).OnNext + !Container(502).OnPrevious]">
					<effect type="fade" end="100" time="160" />
				</animation>
				<control type="label">
					<left>13</left>
					<top>22</top>
					<width>825</width>
					<align>right</align>
					<aligny>bottom</aligny>
					<label>$VAR[panelheading]</label>
					<font>font18</font>
					<textcolor>$VAR[HighlightColor]</textcolor>
					<visible>!String.IsEmpty(ListItem.Title)</visible>
				</control>
				<control type="label">
					<left>-112</left>
					<top>75</top>
					<width>950</width>
					<height>90</height>
					<align>right</align>
					<aligny>top</aligny>
					<font>font20_title</font>
					<label>$VAR[panelsubheading]</label>
				</control>
				<control type="textbox">
					<left>99</left>
					<top>124</top>
					<width>740</width>
					<height>118</height>
					<align>right</align>
					<label>$VAR[Plots]</label>
					<font>InfoPlot</font>
					<autoscroll time="2000" delay="6000" repeat="6000">Skin.HasSetting(AutoScroll)</autoscroll>
				</control>
			</control>
		</focusedlayout>
		<!-- Focused layout for episodes -->
		<focusedlayout width="950" height="246" condition="Container.Content(episodes)">
			<include content="RightListWatchedOverlay">
			    <param name="isFocused">true</param>
                <param name="itemheight">42</param>
                <param name="overlaypos">1340</param>
			    <param name="posy">90</param>
			</include>
			<control type="group">
			    <visible>!Integer.IsGreater(ListItem.Episode,99)</visible>
			    <include content="ShadowedImage">
				    <param name="top">11</param>
				    <param name="left">879</param>
				    <param name="width">396</param>
				    <param name="height">226</param>
				    <param name="aspect">keep</param>
				    <param name="texture">$VAR[Thumb]</param>
				    <param name="visibility">!ListItem.IsParentFolder</param>
			    </include>
			    <include content="ShadowedImage">
				    <param name="top">11</param>
				    <param name="left">879</param>
				    <param name="width">396</param>
				    <param name="height">226</param>
				    <param name="aspect">keep</param>
				    <param name="texture">DefaultEpisodeBack.png</param>
				    <param name="visibility">ListItem.IsParentFolder</param>
			    </include>
			</control>
            <control type="group">
			    <visible>Integer.IsGreater(ListItem.Episode,99)</visible>
			    <include content="ShadowedImage">
				    <param name="top">11</param>
				    <param name="left">861</param>
				    <param name="width">396</param>
				    <param name="height">226</param>
				    <param name="aspect">keep</param>
				    <param name="texture">$VAR[Thumb]</param>
				    <param name="visibility">!ListItem.IsParentFolder</param>
			    </include>
			    <include content="ShadowedImage">
				    <param name="top">11</param>
				    <param name="left">861</param>
				    <param name="width">396</param>
				    <param name="height">226</param>
				    <param name="aspect">keep</param>
				    <param name="texture">DefaultEpisodeBack.png</param>
				    <param name="visibility">ListItem.IsParentFolder</param>
			    </include>
			</control>			
			<control type="label">
				<left>1270</left>
				<top>90</top>
				<width>80</width>
				<height>45</height>
				<align>center</align>
				<label>$INFO[ListItem.Episode]</label>
				<font>font38_title</font>
				<textcolor>$VAR[HighlightColor]</textcolor>
				<visible>!Integer.IsGreater(ListItem.Episode,99)</visible>
			</control>
			<control type="label">
				<left>1260</left>
				<top>90</top>
				<width>80</width>
				<height>45</height>
				<align>center</align>
				<label>$INFO[ListItem.Episode]</label>
				<font>font38_title</font>
				<textcolor>$VAR[HighlightColor]</textcolor>
				<visible>Integer.IsGreater(ListItem.Episode,99)</visible>
			</control>
			<control type="group">
				<animation type="Conditional" reversible="false" condition="Control.HasFocus(502) + [!Container(502).OnNext + !Container(502).OnPrevious]">
					<effect type="fade" end="100" time="160" />
				</animation>
				<control type="group">
				    <left>18</left>
					<visible>!Integer.IsGreater(ListItem.Episode,99)</visible>
				    <control type="label">
					    <left>13</left>
					    <top>22</top>
					    <width>825</width>
					    <align>right</align>
					    <aligny>bottom</aligny>
					    <label>$INFO[ListItem.Title]</label>
					    <font>font30_title</font>
					    <textcolor>$VAR[HighlightColor]</textcolor>
					    <scrollspeed>40</scrollspeed>
					    <visible>!String.IsEmpty(ListItem.Title)</visible>
				    </control>
				    <control type="label">
					    <left>-112</left>
					    <top>70</top>
					    <width>950</width>
					    <height>90</height>
					    <align>right</align>
					    <aligny>bottom</aligny>
					    <label>$INFO[ListItem.Date]$INFO[ListItem.Rating, • ]</label>
					    <visible>!String.IsEmpty(ListItem.Title)</visible>
				    </control>
				    <control type="textbox">
					    <left>199</left>
					    <top>122</top>
					    <width>640</width>
					    <height>122</height>
					    <align>right</align>
					    <font>InfoPlot</font>
					    <label>$VAR[Plots]</label>
					    <autoscroll time="2000" delay="6000" repeat="6000">Skin.HasSetting(AutoScroll)</autoscroll>
				    </control>
				</control>
				<control type="group">
				    <left>20</left>
					<visible>Integer.IsGreater(ListItem.Episode,99)</visible>
				    <control type="label">
					    <left>13</left>
					    <top>22</top>
					    <width>825</width>
					    <align>right</align>
					    <aligny>bottom</aligny>
					    <label>$INFO[ListItem.Title]</label>
					    <font>font30_title</font>
					    <textcolor>$VAR[HighlightColor]</textcolor>
					    <scrollspeed>40</scrollspeed>
					    <visible>!String.IsEmpty(ListItem.Title)</visible>
				    </control>
				    <control type="label">
					    <left>-112</left>
					    <top>70</top>
					    <width>950</width>
					    <height>90</height>
					    <align>right</align>
					    <aligny>bottom</aligny>
					    <label>$INFO[ListItem.Date]$INFO[ListItem.Rating, • ]</label>
					    <visible>!String.IsEmpty(ListItem.Title)</visible>
				    </control>
				    <control type="textbox">
					    <left>199</left>
					    <top>122</top>
					    <width>640</width>
					    <height>122</height>
					    <align>right</align>
					    <font>InfoPlot</font>
					    <label>$VAR[Plots]</label>
					    <autoscroll time="2000" delay="6000" repeat="6000">Skin.HasSetting(AutoScroll)</autoscroll>
				    </control>
				</control>
			</control>
		</focusedlayout>
	</include>

</includes>